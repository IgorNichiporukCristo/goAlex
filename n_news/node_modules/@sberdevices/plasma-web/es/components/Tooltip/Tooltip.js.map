{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"names":["React","useState","useEffect","styled","css","caption","dark02","shadows","white","usePopper","ESCAPE_KEYCODE","offset","StyledRoot","div","StyledWrapper","StyledArrow","StyledTooltip","span","small","isVisible","animated","Number","Tooltip","id","text","arrow","placement","children","onDismiss","rest","wrapperElement","setWrapperElement","tooltipElement","setTooltipElement","arrowElement","setArrowElement","modifiers","name","options","element","padding","styles","attributes","onKeyDown","event","keyCode","window","addEventListener","removeEventListener","popper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { caption, dark02, shadows, white } from '@sberdevices/plasma-core';\nimport { usePopper } from 'react-popper';\n\n/** Направление раскрытия тултипа */\nexport type BasePlacement = 'top' | 'bottom' | 'right' | 'left';\nexport type VariationPlacement = 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end';\nexport type Placement = BasePlacement | VariationPlacement;\n\nconst ESCAPE_KEYCODE = 27;\n\nexport interface TooltipProps extends React.HTMLAttributes<HTMLDivElement> {\n    /**\n     * Текст тултипа.\n     */\n    text: string;\n    /**\n     * Видимость тултипа.\n     */\n    isVisible: boolean;\n    /**\n     * Направление раскрытия тултипа.\n     */\n    placement?: Placement;\n    /**\n     * Видимость стрелки (хвоста).\n     */\n    arrow?: boolean;\n    /**\n     * Анимированное появление/сокрытие.\n     */\n    animated?: boolean;\n    /**\n     * Событие закрытия тултипа по кнопке Esc.\n     */\n    onDismiss?: () => void;\n}\n\nconst offset = [0, 6];\n\nconst StyledRoot = styled.div`\n    position: relative;\n    display: inline-flex;\n`;\n\nconst StyledWrapper = styled.div`\n    display: inherit;\n`;\n\nconst StyledArrow = styled.div`\n    visibility: hidden;\n\n    &,\n    &::before {\n        position: absolute;\n        width: 0.5rem;\n        height: 0.5rem;\n        background: inherit;\n    }\n\n    &::before {\n        visibility: visible;\n        content: '';\n        transform: rotate(45deg);\n    }\n`;\n\nconst StyledTooltip = styled.span<Pick<TooltipProps, 'isVisible' | 'animated'>>`\n    ${caption}\n\n    position: absolute;\n    z-index: 9200;\n\n    padding: 0.375rem 0.5rem;\n\n    background-color: ${dark02};\n    border-radius: 0.25rem;\n    box-shadow: ${shadows.small};\n    color: ${white};\n\n    white-space: pre;\n    pointer-events: none;\n\n    transition: opacity 200ms ease-in-out;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    &[data-popper-placement^='top'] > ${StyledArrow} {\n        bottom: -0.25rem;\n    }\n\n    &[data-popper-placement^='bottom'] > ${StyledArrow} {\n        top: -0.25rem;\n    }\n\n    &[data-popper-placement^='left'] > ${StyledArrow} {\n        right: -0.25rem;\n    }\n\n    &[data-popper-placement^='right'] > ${StyledArrow} {\n        left: -0.25rem;\n    }\n\n    ${({ isVisible, animated }) =>\n        animated &&\n        css`\n            opacity: ${Number(isVisible)};\n        `}\n`;\n\n/**\n * Компонент для текстовых подсказок. Основное предназначение — подписи к блокам.\n */\nexport const Tooltip: React.FC<TooltipProps> = ({\n    id,\n    text,\n    isVisible,\n    arrow = true,\n    animated = true,\n    placement = 'bottom',\n    children,\n    onDismiss,\n    ...rest\n}) => {\n    const [wrapperElement, setWrapperElement] = useState<HTMLDivElement | null>(null);\n    const [tooltipElement, setTooltipElement] = useState<HTMLSpanElement | null>(null);\n    const [arrowElement, setArrowElement] = useState<HTMLSpanElement | null>(null);\n    const { styles, attributes } = usePopper(wrapperElement, tooltipElement, {\n        placement,\n        modifiers: [\n            { name: 'offset', options: { offset: [offset[0], offset[1]] } },\n            { name: 'arrow', options: { element: arrowElement, padding: 10 } },\n        ],\n    });\n\n    useEffect(() => {\n        const onKeyDown = (event: KeyboardEvent) => {\n            if (event.keyCode === ESCAPE_KEYCODE) {\n                onDismiss?.();\n            }\n        };\n\n        window.addEventListener('keydown', onKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', onKeyDown);\n        };\n    }, []);\n\n    return (\n        <StyledRoot {...rest}>\n            {children && <StyledWrapper ref={setWrapperElement}>{children}</StyledWrapper>}\n            <StyledTooltip\n                {...attributes.popper}\n                ref={setTooltipElement}\n                id={id}\n                isVisible={isVisible}\n                animated={animated}\n                style={styles.popper}\n                role=\"tooltip\"\n                aria-live=\"polite\"\n                aria-hidden={!isVisible}\n            >\n                {arrow && <StyledArrow ref={setArrowElement} style={styles.arrow} {...attributes.arrow} />}\n                {text}\n            </StyledTooltip>\n        </StyledRoot>\n    );\n};\n"],"file":"Tooltip.js"}