{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.component-test.tsx"],"names":["React","mount","CypressTestDecorator","getComponent","describe","Tooltip","Button","it","cy","matchImageSnapshot","Container","children","display","gridTemplateColumns","gridGap","padding","Demo","useState","isVisible","setVisible","isVis","get","click","gap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount, CypressTestDecorator, getComponent } from '@sberdevices/plasma-cy-utils';\n\ndescribe('plasma-web: Tooltip', () => {\n    const Tooltip = getComponent('Tooltip');\n    const Button = getComponent('Button');\n\n    it('simple', () => {\n        mount(\n            <CypressTestDecorator>\n                <Tooltip text=\"Высокое качество воспроизведения\" isVisible placement=\"right\">\n                    <Button text=\"hello\" />\n                </Tooltip>\n            </CypressTestDecorator>,\n        );\n\n        cy.matchImageSnapshot();\n    });\n\n    it('multiple placement', () => {\n        const Container = ({ children }) => {\n            return (\n                <div\n                    style={{\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(3, max-content)',\n                        gridGap: '1rem 3.5rem',\n                        padding: '2.5rem',\n                    }}\n                >\n                    {children}\n                </div>\n            );\n        };\n\n        mount(\n            <CypressTestDecorator>\n                <Container>\n                    <Tooltip placement=\"top-start\" isVisible arrow text=\"Top start\" animated={false}>\n                        <Tooltip placement=\"left\" isVisible arrow text=\"Left\" animated={false}>\n                            <Button text=\"hello\" />\n                        </Tooltip>\n                    </Tooltip>\n                    <Tooltip placement=\"top\" isVisible arrow text=\"Top\" animated={false}>\n                        <Button text=\"hello\" />\n                    </Tooltip>\n                    <Tooltip placement=\"top-end\" isVisible arrow text=\"Top end\" animated={false}>\n                        <Tooltip placement=\"right\" isVisible arrow text=\"Right\" animated={false}>\n                            <Button text=\"hello\" />\n                        </Tooltip>\n                    </Tooltip>\n                    <Tooltip placement=\"bottom-start\" isVisible arrow text=\"Bottom start\" animated={false}>\n                        <Button text=\"hello\" />\n                    </Tooltip>\n                    <Tooltip placement=\"bottom\" isVisible arrow text=\"Bottom\" animated={false}>\n                        <Button text=\"hello\" />\n                    </Tooltip>\n                    <Tooltip placement=\"bottom-end\" isVisible arrow text=\"Bottom end\" animated={false}>\n                        <Button text=\"hello\" />\n                    </Tooltip>\n                </Container>\n            </CypressTestDecorator>,\n        );\n\n        cy.matchImageSnapshot();\n    });\n\n    it('interaction', () => {\n        function Demo() {\n            const [isVisible, setVisible] = React.useState(false);\n\n            return (\n                <>\n                    <Tooltip isVisible={isVisible} placement=\"bottom\" text=\"Hello there\">\n                        <Button\n                            text=\"Toggle\"\n                            onClick={() => {\n                                setVisible((isVis) => !isVis);\n                            }}\n                        />\n                    </Tooltip>\n                </>\n            );\n        }\n\n        mount(\n            <CypressTestDecorator>\n                <Demo />\n            </CypressTestDecorator>,\n        );\n\n        cy.get('button').click();\n\n        cy.matchImageSnapshot();\n    });\n\n    it('out of bounds', () => {\n        const Container = ({ children }) => {\n            return (\n                <div\n                    style={{\n                        display: 'flex',\n                        gap: '4rem',\n                    }}\n                >\n                    {children}\n                </div>\n            );\n        };\n\n        mount(\n            <CypressTestDecorator>\n                <Container>\n                    <Tooltip placement=\"left\" isVisible arrow text=\"Left\" animated={false}>\n                        <Button text=\"hello\" />\n                    </Tooltip>\n                    <Tooltip placement=\"top\" isVisible arrow text=\"Top\" animated={false}>\n                        <Button text=\"hello\" />\n                    </Tooltip>\n                </Container>\n            </CypressTestDecorator>,\n        );\n\n        cy.matchImageSnapshot();\n    });\n});\n"],"file":"Tooltip.component-test.js"}