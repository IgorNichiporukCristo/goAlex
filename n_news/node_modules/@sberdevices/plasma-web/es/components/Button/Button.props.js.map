{"version":3,"sources":["../../../src/components/Button/Button.props.ts"],"names":["css","buttonViews","baseViews","buttonPrimaryHover","buttonPrimaryActive","buttonSecondaryHover","buttonSecondaryActive","buttonSuccessHover","buttonSuccessActive","buttonWarningHover","buttonWarningActive","buttonCriticalHover","buttonCriticalActive","buttonCheckedHover","buttonCheckedHoverColor","buttonCheckedActive","buttonCheckedActiveColor","primary","color","success","warning","critical","secondary","checked","overlay","clear"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,WAAW,IAAIC,SAAxB,QAAyC,0BAAzC;AAEA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,EAKIC,kBALJ,EAMIC,mBANJ,EAOIC,kBAPJ,EAQIC,mBARJ,EASIC,mBATJ,EAUIC,oBAVJ,EAWIC,kBAXJ,EAYIC,uBAZJ,EAaIC,mBAbJ,EAcIC,wBAdJ,QAeO,cAfP;AAiBA;AACA;AACA;;AACA,OAAO,IAAMf,WAAW,GAAG;AACvBgB,EAAAA,OAAO,eAAEjB,GAAF,iGACDE,SAAS,CAACe,OADT,EAIqBd,kBAJrB,EAKUD,SAAS,CAACe,OAAV,CAAkBC,KAL5B,EASqBd,mBATrB,EAUUF,SAAS,CAACe,OAAV,CAAkBC,KAV5B,CADgB;AAcvBC,EAAAA,OAAO,eAAEnB,GAAF,iGACDE,SAAS,CAACiB,OADT,EAIqBZ,kBAJrB,EAKUL,SAAS,CAACiB,OAAV,CAAkBD,KAL5B,EASqBV,mBATrB,EAUUN,SAAS,CAACiB,OAAV,CAAkBD,KAV5B,CAdgB;AA2BvBE,EAAAA,OAAO,eAAEpB,GAAF,iGACDE,SAAS,CAACkB,OADT,EAIqBX,kBAJrB,EAKUP,SAAS,CAACkB,OAAV,CAAkBF,KAL5B,EASqBR,mBATrB,EAUUR,SAAS,CAACkB,OAAV,CAAkBF,KAV5B,CA3BgB;AAwCvBG,EAAAA,QAAQ,eAAErB,GAAF,iGACFE,SAAS,CAACmB,QADR,EAIoBV,mBAJpB,EAKST,SAAS,CAACmB,QAAV,CAAmBH,KAL5B,EASoBN,oBATpB,EAUSV,SAAS,CAACmB,QAAV,CAAmBH,KAV5B,CAxCe;AAqDvBI,EAAAA,SAAS,eAAEtB,GAAF,iGACHE,SAAS,CAACoB,SADP,EAImBjB,oBAJnB,EAKQH,SAAS,CAACoB,SAAV,CAAoBJ,KAL5B,EASmBZ,qBATnB,EAUQJ,SAAS,CAACoB,SAAV,CAAoBJ,KAV5B,CArDc;AAkEvBK,EAAAA,OAAO,eAAEvB,GAAF,iGACDE,SAAS,CAACqB,OADT,EAIqBV,kBAJrB,EAKUC,uBALV,EASqBC,mBATrB,EAUUC,wBAVV,CAlEgB;AA+EvBQ,EAAAA,OAAO,EAAEtB,SAAS,CAACsB,OA/EI;AAgFvBC,EAAAA,KAAK,EAAEvB,SAAS,CAACuB;AAhFM,CAApB;AAmFP;AACA;AACA","sourcesContent":["import { css } from 'styled-components';\nimport { buttonViews as baseViews } from '@sberdevices/plasma-core';\n\nimport {\n    buttonPrimaryHover,\n    buttonPrimaryActive,\n    buttonSecondaryHover,\n    buttonSecondaryActive,\n    buttonSuccessHover,\n    buttonSuccessActive,\n    buttonWarningHover,\n    buttonWarningActive,\n    buttonCriticalHover,\n    buttonCriticalActive,\n    buttonCheckedHover,\n    buttonCheckedHoverColor,\n    buttonCheckedActive,\n    buttonCheckedActiveColor,\n} from '../../tokens';\n\n/**\n * Views (colors) for both B2B and B2C\n */\nexport const buttonViews = {\n    primary: css`\n        ${baseViews.primary}\n\n        &:hover {\n            background-color: ${buttonPrimaryHover};\n            color: ${baseViews.primary.color};\n        }\n\n        &:active {\n            background-color: ${buttonPrimaryActive};\n            color: ${baseViews.primary.color};\n        }\n    `,\n    success: css`\n        ${baseViews.success}\n\n        &:hover {\n            background-color: ${buttonSuccessHover};\n            color: ${baseViews.success.color};\n        }\n\n        &:active {\n            background-color: ${buttonSuccessActive};\n            color: ${baseViews.success.color};\n        }\n    `,\n    warning: css`\n        ${baseViews.warning}\n\n        &:hover {\n            background-color: ${buttonWarningHover};\n            color: ${baseViews.warning.color};\n        }\n\n        &:active {\n            background-color: ${buttonWarningActive};\n            color: ${baseViews.warning.color};\n        }\n    `,\n    critical: css`\n        ${baseViews.critical}\n\n        &:hover {\n            background-color: ${buttonCriticalHover};\n            color: ${baseViews.critical.color};\n        }\n\n        &:active {\n            background-color: ${buttonCriticalActive};\n            color: ${baseViews.critical.color};\n        }\n    `,\n    secondary: css`\n        ${baseViews.secondary}\n\n        &:hover {\n            background-color: ${buttonSecondaryHover};\n            color: ${baseViews.secondary.color};\n        }\n\n        &:active {\n            background-color: ${buttonSecondaryActive};\n            color: ${baseViews.secondary.color};\n        }\n    `,\n    checked: css`\n        ${baseViews.checked}\n\n        &:hover {\n            background-color: ${buttonCheckedHover};\n            color: ${buttonCheckedHoverColor};\n        }\n\n        &:active {\n            background-color: ${buttonCheckedActive};\n            color: ${buttonCheckedActiveColor};\n        }\n    `,\n    overlay: baseViews.overlay,\n    clear: baseViews.clear,\n};\n\n/**\n * @private\n */\nexport type ButtonView = keyof typeof buttonViews;\n"],"file":"Button.props.js"}