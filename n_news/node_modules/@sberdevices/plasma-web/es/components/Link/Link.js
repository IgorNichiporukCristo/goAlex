import styled, { css } from 'styled-components';
import { link, linkHover, linkActive, linkVisited, linkVisitedHover, linkVisitedActive } from '../../tokens';
var views = {
  primary: {
    "default": link,
    hover: linkHover,
    active: linkActive,
    visited: linkVisited,
    visitedHover: linkVisitedHover,
    visitedActive: linkVisitedActive
  }
};

var interactionCss = function interactionCss(color) {
  return css(["color:", ";&::before{opacity:1;}"], color);
};
/**
 * Ссылка.
 */


export var Link = /*#__PURE__*/styled.a.withConfig({
  componentId: "plasma-web__sc-pd3jbt-0"
})(["position:relative;text-decoration:none;transition:color 0.15s ease-in;&::before{content:'';position:absolute;left:0;right:0;bottom:0;border-bottom:1px solid;opacity:0.4;transition:opacity 0.15s ease-in;}", ";"], function (_ref) {
  var _ref$view = _ref.view,
      view = _ref$view === void 0 ? 'primary' : _ref$view,
      $isHover = _ref.$isHover,
      $isPressed = _ref.$isPressed,
      $isVisited = _ref.$isVisited;
  return css(["color:", ";&:hover{", "}&:active{", "}&:visited{color:", ";}&:visited:hover{", "}&:visited:active{", "}", " ", " ", " ", " ", ""], views[view]["default"], interactionCss(views[view].hover), interactionCss(views[view].active), views[view].visited, interactionCss(views[view].visitedHover), interactionCss(views[view].visitedActive), $isHover && interactionCss(views[view].hover), $isPressed && interactionCss(views[view].active), $isVisited && css(["color:", ";"], views[view].visited), $isVisited && $isHover && interactionCss(views[view].visitedHover), $isVisited && $isPressed && interactionCss(views[view].visitedActive));
});
//# sourceMappingURL=Link.js.map