var _excluded = ["id", "label", "description", "indeterminate", "disabled", "style", "className", "aria-label"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef, useRef, useMemo } from 'react';
import styled, { css } from 'styled-components';
import { BaseboxRoot, BaseboxInput, BaseboxTrigger, BaseboxContent, BaseboxContentWrapper, BaseboxLabel, BaseboxDescription, accent, buttonSecondary, tertiary, white, transparent, useForkRef, useUniqId, addFocus } from '@sberdevices/plasma-core';
import { extractTextFrom } from '../../utils';
import { Done, Indeterminate } from './Icons';
export var syntheticFocus = function syntheticFocus(ruleset, focused) {
  return css(["input[data-focus-visible-added] + label &{outline:none;", "}", ";"], ruleset, focused && ruleset);
};
export var StyledRoot = /*#__PURE__*/styled(BaseboxRoot).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-0"
})(["margin-left:0.1875rem;margin-bottom:0.1875rem;", ""], function (_ref) {
  var $disabled = _ref.$disabled;
  return $disabled && 'cursor: not-allowed;';
});
export var StyledInput = /*#__PURE__*/styled(BaseboxInput).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-1"
})(["width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0);"]);
export var StyledTrigger = /*#__PURE__*/styled(BaseboxTrigger).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-2"
})(["margin:0.1875rem 0;width:1.125rem;height:1.125rem;background:", ";border:0.125rem solid ", ";border-radius:0.25rem;color:", ";flex-shrink:0;flex-grow:0;input[type='checkbox']:indeterminate + label &{background:", ";border-color:", ";color:", ";}input:disabled + label &{background:", ";border-color:", ";color:", ";cursor:inherit;}input:checked + label &{background:", ";border-color:", ";color:", ";}input:checked:disabled + label &{background:", ";border-color:", ";color:", ";}", ""], transparent, tertiary, tertiary, transparent, accent, accent, buttonSecondary, transparent, transparent, accent, accent, white, buttonSecondary, transparent, tertiary, function (_ref2) {
  var _ref2$outlineRadius = _ref2.outlineRadius,
      outlineRadius = _ref2$outlineRadius === void 0 ? '0.25rem' : _ref2$outlineRadius;
  return css(["", ""], addFocus({
    synthesizeFocus: syntheticFocus,
    outlineOffset: '0.25rem',
    outlineRadius: outlineRadius
  }));
});
export var StyledContent = /*#__PURE__*/styled(BaseboxContent).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-3"
})(["margin-left:0.875rem;input:disabled + label &{opacity:0.4;}"]);
export var StyledLabel = /*#__PURE__*/styled(BaseboxLabel).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-4"
})(["line-height:1.5rem;"]);
export var StyledDescription = /*#__PURE__*/styled(BaseboxDescription).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-5"
})(["input:disabled + label &{opacity:0.4;}"]);
var StyledDone = /*#__PURE__*/styled(Done).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-6"
})(["position:absolute;top:-0.125rem;left:-0.125rem;transform:scale(0);transition:transform 0.15s ease-in-out;input:checked + label ", " &{transform:scale(1);}"], BaseboxTrigger);
var StyledIndeterminate = /*#__PURE__*/styled(Indeterminate).withConfig({
  componentId: "plasma-web__sc-1x2r0l2-7"
})(["position:absolute;top:-0.125rem;left:-0.125rem;"]);
/**
 * Флажок или *чекбокс*. Позволяет пользователю управлять параметром с двумя состояниями — ☑ включено и ☐ отключено.
 */
// eslint-disable-next-line prefer-arrow-callback

export var Checkbox = /*#__PURE__*/forwardRef(function Checkbox(_ref3, ref) {
  var id = _ref3.id,
      label = _ref3.label,
      description = _ref3.description,
      indeterminate = _ref3.indeterminate,
      disabled = _ref3.disabled,
      style = _ref3.style,
      className = _ref3.className,
      ariaLabelExternal = _ref3['aria-label'],
      rest = _objectWithoutProperties(_ref3, _excluded);

  var inputRef = useRef(null);
  var forkRef = useForkRef(inputRef, ref);
  React.useEffect(function () {
    if (inputRef.current) {
      inputRef.current.indeterminate = Boolean(indeterminate);
    }
  }, [inputRef, indeterminate]);
  var uniqId = useUniqId();
  var uniqLabelId = useUniqId();
  var uniqDescriptionId = useUniqId();
  var checkboxId = id || uniqId;
  var ariaLabel = useMemo(function () {
    return ariaLabelExternal || extractTextFrom(label);
  }, [ariaLabelExternal, label]);
  return /*#__PURE__*/React.createElement(StyledRoot, {
    $disabled: disabled,
    style: style,
    className: className,
    tabIndex: -1
  }, /*#__PURE__*/React.createElement(StyledInput, _extends({}, rest, {
    id: checkboxId,
    ref: forkRef,
    type: "checkbox",
    disabled: disabled,
    "aria-label": ariaLabel,
    "aria-describedby": uniqDescriptionId
  })), /*#__PURE__*/React.createElement(BaseboxContentWrapper, {
    htmlFor: checkboxId
  }, /*#__PURE__*/React.createElement(StyledTrigger, null, indeterminate ? /*#__PURE__*/React.createElement(StyledIndeterminate, null) : /*#__PURE__*/React.createElement(StyledDone, null)), label && /*#__PURE__*/React.createElement(StyledContent, null, /*#__PURE__*/React.createElement(StyledLabel, {
    as: "span",
    id: uniqLabelId,
    "aria-hidden": typeof label === 'string'
  }, label), description && /*#__PURE__*/React.createElement(BaseboxDescription, {
    mt: 4,
    id: uniqDescriptionId
  }, description))));
});
//# sourceMappingURL=Checkbox.js.map