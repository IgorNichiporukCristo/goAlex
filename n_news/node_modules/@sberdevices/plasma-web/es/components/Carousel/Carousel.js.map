{"version":3,"sources":["../../../src/components/Carousel/Carousel.tsx"],"names":["React","useCarousel","CarouselContext","Carousel","StyledCarousel","CarouselTrack","StyledCarouselTrack","useForkRef","forwardRef","ref","index","scrollSnapType","scrollAlign","detectActive","detectThreshold","scaleCallback","scaleResetCallback","onScroll","onIndexChange","paddingStart","paddingEnd","children","ariaLive","rest","axis","scrollRef","trackRef","refs","handleScroll","handleRef"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,WADJ,EAEIC,eAFJ,EAGIC,QAAQ,IAAIC,cAHhB,EAIIC,aAAa,IAAIC,mBAJrB,QAKO,0BALP;AAQA,SAASC,UAAT,QAA2B,aAA3B;;AASA;AACA;AACA;AACA;AACA,OAAO,IAAMJ,QAAQ,gBAAGH,KAAK,CAACQ,UAAN,CAAgD,SAASL,QAAT,OAiBpEM,GAjBoE,EAkBtE;AAAA,wBAhBMC,KAgBN;AAAA,MAhBMA,KAgBN,2BAhBc,CAgBd;AAAA,iCAfMC,cAeN;AAAA,MAfMA,cAeN,oCAfuB,WAevB;AAAA,MAdMC,WAcN,QAdMA,WAcN;AAAA,MAbMC,YAaN,QAbMA,YAaN;AAAA,MAZMC,eAYN,QAZMA,eAYN;AAAA,MAXMC,aAWN,QAXMA,aAWN;AAAA,MAVMC,kBAUN,QAVMA,kBAUN;AAAA,MATMC,QASN,QATMA,QASN;AAAA,MARMC,aAQN,QARMA,aAQN;AAAA,MAPMC,YAON,QAPMA,YAON;AAAA,MANMC,UAMN,QANMA,UAMN;AAAA,MALMC,QAKN,QALMA,QAKN;AAAA,2BAJMC,QAIN;AAAA,MAJMA,QAIN,8BAJiB,KAIjB;AAAA,MAHSC,IAGT;;AACE,MAAMC,IAAI,GAAG,GAAb;;AACA,qBAAoDvB,WAAW,CAAC;AAC5DS,IAAAA,KAAK,EAALA,KAD4D;AAE5Dc,IAAAA,IAAI,EAAJA,IAF4D;AAG5DZ,IAAAA,WAAW,EAAXA,WAH4D;AAI5DC,IAAAA,YAAY,EAAZA,YAJ4D;AAK5DC,IAAAA,eAAe,EAAfA,eAL4D;AAM5DC,IAAAA,aAAa,EAAbA,aAN4D;AAO5DC,IAAAA,kBAAkB,EAAlBA,kBAP4D;AAQ5DC,IAAAA,QAAQ,EAARA,QAR4D;AAS5DC,IAAAA,aAAa,EAAbA;AAT4D,GAAD,CAA/D;AAAA,MAAQO,SAAR,gBAAQA,SAAR;AAAA,MAAmBC,QAAnB,gBAAmBA,QAAnB;AAAA,MAA6BC,IAA7B,gBAA6BA,IAA7B;AAAA,MAAmCC,YAAnC,gBAAmCA,YAAnC;;AAWA,MAAMC,SAAS,GAAGtB,UAAU,CAACkB,SAAD,EAAYhB,GAAZ,CAA5B;AAEA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEe,MAAAA,IAAI,EAAJA,IAAF;AAAQG,MAAAA,IAAI,EAAJA;AAAR;AAAjC,kBACI,oBAAC,cAAD;AACI,IAAA,GAAG,EAAEE,SADT;AAEI,IAAA,IAAI,EAAEL,IAFV;AAGI,IAAA,cAAc,EAAEb,cAHpB;AAII,IAAA,QAAQ,EAAEiB;AAJd,KAKQL,IALR,gBAOI,oBAAC,mBAAD;AACI,IAAA,GAAG,EAAEG,QADT;AAEI,IAAA,IAAI,EAAEF,IAFV;AAGI,IAAA,YAAY,EAAEL,YAHlB;AAII,IAAA,UAAU,EAAEC,UAJhB;AAKI,iBAAWE;AALf,KAOKD,QAPL,CAPJ,CADJ,CADJ;AAqBH,CAtDuB,CAAjB","sourcesContent":["import React from 'react';\nimport {\n    useCarousel,\n    CarouselContext,\n    Carousel as StyledCarousel,\n    CarouselTrack as StyledCarouselTrack,\n} from '@sberdevices/plasma-core';\nimport type { CarouselProps as BaseProps } from '@sberdevices/plasma-core';\n\nimport { useForkRef } from '../../hooks';\n\nexport type CarouselProps = Omit<BaseProps, 'axis' | 'animatedScrollByIndex' | 'throttleMs' | 'debounceMs'> & {\n    /**\n     * При значении `polite` скринридер будет объявлять переключаемые слайды.\n     */\n    ariaLive?: 'off' | 'polite';\n};\n\n/**\n * Компонент для создания списков с прокруткой.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport const Carousel = React.forwardRef<HTMLDivElement, CarouselProps>(function Carousel(\n    {\n        index = 0,\n        scrollSnapType = 'mandatory',\n        scrollAlign,\n        detectActive,\n        detectThreshold,\n        scaleCallback,\n        scaleResetCallback,\n        onScroll,\n        onIndexChange,\n        paddingStart,\n        paddingEnd,\n        children,\n        ariaLive = 'off',\n        ...rest\n    },\n    ref,\n) {\n    const axis = 'x';\n    const { scrollRef, trackRef, refs, handleScroll } = useCarousel({\n        index,\n        axis,\n        scrollAlign,\n        detectActive,\n        detectThreshold,\n        scaleCallback,\n        scaleResetCallback,\n        onScroll,\n        onIndexChange,\n    });\n    const handleRef = useForkRef(scrollRef, ref);\n\n    return (\n        <CarouselContext.Provider value={{ axis, refs }}>\n            <StyledCarousel\n                ref={handleRef}\n                axis={axis}\n                scrollSnapType={scrollSnapType}\n                onScroll={handleScroll}\n                {...rest}\n            >\n                <StyledCarouselTrack\n                    ref={trackRef as React.MutableRefObject<HTMLDivElement | null>}\n                    axis={axis}\n                    paddingStart={paddingStart}\n                    paddingEnd={paddingEnd}\n                    aria-live={ariaLive}\n                >\n                    {children}\n                </StyledCarouselTrack>\n            </StyledCarousel>\n        </CarouselContext.Provider>\n    );\n});\n"],"file":"Carousel.js"}