{"version":3,"sources":["../../../src/components/Progress/Progress.tsx"],"names":["React","styled","css","caption","tertiary","surfaceLiquid02","statuses","success","warning","error","StyledRoot","div","StyledTrack","StyledProgress","value","status","StyledValue","span","Progress","displayValue","min","max","normalizedValue","Math"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,eAA5B,QAAmD,0BAAnD;AAEA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,OAAO,eAAEL,GAAF,+BADM;AAIbM,EAAAA,OAAO,eAAEN,GAAF,+BAJM;AAObO,EAAAA,KAAK,eAAEP,GAAF;AAPQ,CAAjB;AA2BA,IAAMQ,UAAU,gBAAGT,MAAM,CAACU,GAAV;AAAA;AAAA,wCAAhB;AAIA,IAAMC,WAAW,gBAAGX,MAAM,CAACU,GAAV;AAAA;AAAA,gFAION,eAJP,CAAjB;AAOA,IAAMQ,cAAc,gBAAGZ,MAAM,CAACU,GAAV;AAAA;AAAA,6DACP;AAAA,MAAGG,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CADO,EAId;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SAAgBA,MAAM,IAAIT,QAAQ,CAACS,MAAD,CAAlC;AAAA,CAJc,CAApB;AAQA,IAAMC,WAAW,gBAAGf,MAAM,CAACgB,IAAV;AAAA;AAAA,4CACXd,OADW,EAKJC,QALI,CAAjB;AAQA;AACA;AACA;;AACA,OAAO,IAAMc,QAAiC,GAAG,SAApCA,QAAoC,QAA4C;AAAA,MAAzCJ,KAAyC,SAAzCA,KAAyC;AAAA,MAAlCC,MAAkC,SAAlCA,MAAkC;AAAA,iCAA1BI,YAA0B;AAAA,MAA1BA,YAA0B,mCAAX,IAAW;AACzF,MAAMC,GAAG,GAAG,CAAZ;AACA,MAAMC,GAAG,GAAG,GAAZ;AACA,MAAMC,eAAe,GAAGC,IAAI,CAACF,GAAL,CAASE,IAAI,CAACH,GAAL,CAASN,KAAT,EAAgBO,GAAhB,CAAT,EAA+BD,GAA/B,CAAxB;AAEA,sBACI,oBAAC,UAAD,qBACI,oBAAC,WAAD,qBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEE,eAAvB;AAAwC,IAAA,MAAM,EAAEP;AAAhD,IADJ,CADJ,EAIKI,YAAY,iBAAI,oBAAC,WAAD,QAAcG,eAAd,MAJrB,CADJ;AAQH,CAbM","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { caption, tertiary, surfaceLiquid02 } from '@sberdevices/plasma-core';\n\nconst statuses = {\n    success: css`\n        background-color: #09a552;\n    `,\n    warning: css`\n        background-color: #ee6820;\n    `,\n    error: css`\n        background-color: #df2638;\n    `,\n};\n\nexport interface ProgressProps {\n    /**\n     * Значение прогресса в процентах.\n     */\n    value: number;\n    /**\n     * Статус прогресса.\n     */\n    status?: keyof typeof statuses;\n    /**\n     * Отображать числовое значение прогресса.\n     */\n    displayValue?: boolean;\n}\n\nconst StyledRoot = styled.div`\n    display: flex;\n    align-items: center;\n`;\nconst StyledTrack = styled.div`\n    width: 100%;\n    height: 0.25rem;\n\n    background-color: ${surfaceLiquid02};\n    border-radius: 0.125rem;\n`;\nconst StyledProgress = styled.div<Pick<ProgressProps, 'value' | 'status'>>`\n    width: ${({ value }) => value}%;\n    height: 100%;\n\n    ${({ status }) => status && statuses[status]}\n\n    border-radius: 0.125rem;\n`;\nconst StyledValue = styled.span`\n    ${caption};\n\n    margin-left: 0.5rem;\n\n    color: ${tertiary};\n`;\n\n/**\n * Компонент для отображения прогресса в процентах.\n */\nexport const Progress: React.FC<ProgressProps> = ({ value, status, displayValue = true }) => {\n    const min = 0;\n    const max = 100;\n    const normalizedValue = Math.max(Math.min(value, max), min);\n\n    return (\n        <StyledRoot>\n            <StyledTrack>\n                <StyledProgress value={normalizedValue} status={status} />\n            </StyledTrack>\n            {displayValue && <StyledValue>{normalizedValue}%</StyledValue>}\n        </StyledRoot>\n    );\n};\n"],"file":"Progress.js"}