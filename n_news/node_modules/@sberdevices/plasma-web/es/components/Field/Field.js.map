{"version":3,"sources":["../../../src/components/Field/Field.tsx"],"names":["React","styled","applyDisabled","fieldTypo","fieldHelperTextTypo","fieldColor","fieldContentMargin","fieldHelperTextMarginTop","fieldLabelColor","fieldLabelMarginBottom","statuses","StyledField","label","status","StyledLabel","span","StyledInputWrapper","div","StyledContent","StyledContentLeft","StyledContentRight","StyledHelperText","Field","id","children","contentLeft","contentRight","helperText","rest","undefined"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SACIC,SADJ,EAEIC,mBAFJ,EAGIC,UAHJ,EAIIC,kBAJJ,EAKIC,wBALJ,EAMIC,eANJ,EAOIC,sBAPJ,QAQO,cARP;AAUA,SAASC,QAAT,QAAyB,eAAzB;AAIA,IAAMC,WAAW,gBAAGV,MAAM,CAACW,KAAV;AAAA;AAAA,uFACXT,SADW,EAEXD,aAFW,EAQJG,UARI,EAUX;AAAA,MAAGQ,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAM,IAAIH,QAAQ,CAACG,MAAD,CAAlC;AAAA,CAVW,CAAjB;AAYA,IAAMC,WAAW,gBAAGb,MAAM,CAACc,IAAV;AAAA;AAAA,uCACIN,sBADJ,EAEJD,eAFI,CAAjB;AAIA,IAAMQ,kBAAkB,gBAAGf,MAAM,CAACgB,GAAV;AAAA;AAAA,0BAAxB;AAGA,IAAMC,aAAa,gBAAGjB,MAAM,CAACgB,GAAV;AAAA;AAAA,yEAAnB;AAOA,IAAME,iBAAiB,gBAAGlB,MAAM,CAACiB,aAAD,CAAT;AAAA;AAAA,iCAEJZ,kBAFI,CAAvB;AAIA,IAAMc,kBAAkB,gBAAGnB,MAAM,CAACiB,aAAD,CAAT;AAAA;AAAA,mCAEJZ,kBAFI,CAAxB;AAIA,IAAMe,gBAAgB,gBAAGpB,MAAM,CAACc,IAAV;AAAA;AAAA,8BAChBX,mBADgB,EAGJG,wBAHI,CAAtB;AAMA,OAAO,IAAMe,KAAqB,GAAG,SAAxBA,KAAwB,QAA6E;AAAA,MAA1EC,EAA0E,SAA1EA,EAA0E;AAAA,MAAtEX,KAAsE,SAAtEA,KAAsE;AAAA,MAA/DY,QAA+D,SAA/DA,QAA+D;AAAA,MAArDC,WAAqD,SAArDA,WAAqD;AAAA,MAAxCC,YAAwC,SAAxCA,YAAwC;AAAA,MAA1BC,UAA0B,SAA1BA,UAA0B;AAAA,MAAXC,IAAW;;AAC9G,sBACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEL,EAAE,aAAMA,EAAN,cAAmBM;AAAtC,KAAqDD,IAArD,GACKhB,KAAK,iBAAI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEW,EAAE,aAAMA,EAAN,cAAmBM;AAAtC,KAAkDjB,KAAlD,CADd,eAEI,oBAAC,kBAAD,QACKa,WAAW,iBAAI,oBAAC,iBAAD,QAAoBA,WAApB,CADpB,EAEKD,QAFL,EAGKE,YAAY,iBAAI,oBAAC,kBAAD,QAAqBA,YAArB,CAHrB,CAFJ,EAOKC,UAAU,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAEJ,EAAE,aAAMA,EAAN,mBAAwBM;AAAhD,KAA4DF,UAA5D,CAPnB,CADJ;AAWH,CAZM","sourcesContent":["import React, { FC, HTMLAttributes } from 'react';\nimport styled from 'styled-components';\nimport type { FieldProps as BaseProps, DisabledProps } from '@sberdevices/plasma-core';\nimport { applyDisabled } from '@sberdevices/plasma-core';\n\nimport {\n    fieldTypo,\n    fieldHelperTextTypo,\n    fieldColor,\n    fieldContentMargin,\n    fieldHelperTextMarginTop,\n    fieldLabelColor,\n    fieldLabelMarginBottom,\n} from '../../tokens';\n\nimport { statuses } from './Field.props';\n\nexport interface FieldProps extends BaseProps, DisabledProps, HTMLAttributes<HTMLLabelElement> {}\n\nconst StyledField = styled.label<FieldProps>`\n    ${fieldTypo}\n    ${applyDisabled}\n\n    position: relative;\n    display: flex;\n    flex-direction: column;\n\n    color: ${fieldColor};\n\n    ${({ status }) => status && statuses[status]}\n`;\nconst StyledLabel = styled.span`\n    margin-bottom: ${fieldLabelMarginBottom};\n    color: ${fieldLabelColor};\n`;\nconst StyledInputWrapper = styled.div`\n    position: relative;\n`;\nconst StyledContent = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n`;\nconst StyledContentLeft = styled(StyledContent)`\n    left: 0;\n    margin-left: ${fieldContentMargin};\n`;\nconst StyledContentRight = styled(StyledContent)`\n    right: 0;\n    margin-right: ${fieldContentMargin};\n`;\nconst StyledHelperText = styled.span`\n    ${fieldHelperTextTypo}\n\n    margin-top: ${fieldHelperTextMarginTop};\n`;\n\nexport const Field: FC<FieldProps> = ({ id, label, children, contentLeft, contentRight, helperText, ...rest }) => {\n    return (\n        <StyledField id={id ? `${id}-field` : undefined} {...rest}>\n            {label && <StyledLabel id={id ? `${id}-label` : undefined}>{label}</StyledLabel>}\n            <StyledInputWrapper>\n                {contentLeft && <StyledContentLeft>{contentLeft}</StyledContentLeft>}\n                {children}\n                {contentRight && <StyledContentRight>{contentRight}</StyledContentRight>}\n            </StyledInputWrapper>\n            {helperText && <StyledHelperText id={id ? `${id}-helpertext` : undefined}>{helperText}</StyledHelperText>}\n        </StyledField>\n    );\n};\n"],"file":"Field.js"}