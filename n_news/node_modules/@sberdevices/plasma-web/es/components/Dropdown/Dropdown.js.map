{"version":3,"sources":["../../../src/components/Dropdown/Dropdown.tsx"],"names":["React","useState","useCallback","DropdownUncontrolled","Dropdown","disabled","closeOnSelect","onItemClick","onToggleExternal","onToggle","onItemSelectExternal","onItemSelect","rest","isOpen","setIsOpen","newIsOpen","event","item"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,SAASC,oBAAT,QAAgE,wBAAhE;;AAeA;AACA;AACA;AACA,OAAO,IAAMC,QAA2B,GAAG,SAA9BA,QAA8B,OAOrC;AAAA,MANFC,QAME,QANFA,QAME;AAAA,gCALFC,aAKE;AAAA,MALFA,aAKE,mCALc,IAKd;AAAA,MAJFC,WAIE,QAJFA,WAIE;AAAA,MAHQC,gBAGR,QAHFC,QAGE;AAAA,MAFYC,oBAEZ,QAFFC,YAEE;AAAA,MADCC,IACD;;AACF,kBAA4BX,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOY,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAML,QAAQ,GAAGP,WAAW,CACxB,UAACa,SAAD,EAAYC,KAAZ,EAAsB;AAClBF,IAAAA,SAAS,CAACC,SAAD,CAAT;AACAP,IAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAGO,SAAH,EAAcC,KAAd,CAAhB;AACH,GAJuB,EAKxB,CAACR,gBAAD,EAAmBH,QAAnB,CALwB,CAA5B;AAQA,MAAMM,YAAY,GAAGT,WAAW,CAC5B,UAACe,IAAD,EAAOD,KAAP,EAAiB;AACb,QAAIV,aAAJ,EAAmB;AACfG,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAG,KAAH,EAAUO,KAAV,CAAR;AACH;;AACD,QAAIN,oBAAJ,EAA0B;AACtB,aAAOA,oBAAoB,CAACO,IAAD,EAAOD,KAAP,CAA3B;AACH;;AACD,WAAOT,WAAP,aAAOA,WAAP,uBAAOA,WAAW,CAAGU,IAAH,EAASD,KAAT,CAAlB;AACH,GAT2B,EAU5B,CAACV,aAAD,EAAgBG,QAAhB,EAA0BC,oBAA1B,EAAgDH,WAAhD,CAV4B,CAAhC;AAaA,sBACI,oBAAC,oBAAD,eACQK,IADR;AAEI,IAAA,MAAM,EAAEC,MAFZ;AAGI,IAAA,QAAQ,EAAER,QAHd;AAII,IAAA,QAAQ,EAAEI,QAJd;AAKI,IAAA,YAAY,EAAEE;AALlB,KADJ;AASH,CAxCM","sourcesContent":["import React, { FC, useState, useCallback } from 'react';\n\nimport { DropdownUncontrolled, DropdownUncontrolledProps } from './DropdownUncontrolled';\nimport type { OnItemSelect } from './Dropdown.types';\n\nexport interface DropdownProps extends Omit<DropdownUncontrolledProps, 'isOpen' | 'hoverIndex'> {\n    /**\n     * Закрыть выпадающий список после выбора.\n     */\n    closeOnSelect?: boolean;\n    /**\n     * Обработчик клика по айтему.\n     * @deprecated Будет удалено в v2.0, используйте onItemSelect.\n     */\n    onItemClick?: OnItemSelect;\n}\n\n/**\n * Выпадающий список без внешнего контроля видимости.\n */\nexport const Dropdown: FC<DropdownProps> = ({\n    disabled,\n    closeOnSelect = true,\n    onItemClick,\n    onToggle: onToggleExternal,\n    onItemSelect: onItemSelectExternal,\n    ...rest\n}) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const onToggle = useCallback(\n        (newIsOpen, event) => {\n            setIsOpen(newIsOpen);\n            onToggleExternal?.(newIsOpen, event);\n        },\n        [onToggleExternal, disabled],\n    );\n\n    const onItemSelect = useCallback(\n        (item, event) => {\n            if (closeOnSelect) {\n                onToggle?.(false, event);\n            }\n            if (onItemSelectExternal) {\n                return onItemSelectExternal(item, event);\n            }\n            return onItemClick?.(item, event);\n        },\n        [closeOnSelect, onToggle, onItemSelectExternal, onItemClick],\n    );\n\n    return (\n        <DropdownUncontrolled\n            {...rest}\n            isOpen={isOpen}\n            disabled={disabled}\n            onToggle={onToggle}\n            onItemSelect={onItemSelect}\n        />\n    );\n};\n"],"file":"Dropdown.js"}