{"version":3,"sources":["../../../src/components/Select/withMultiSelect.tsx"],"names":["React","forwardRef","useCallback","useMemo","flattenItemsRecursive","setActiveRecursive","withMultiSelect","View","ref","value","items","separator","onChange","rest","isActive","item","Boolean","includes","viewValue","filter","map","label","join","viewItems","onItemSelect","set","Set","has","add","Array","from"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,EAAyCC,OAAzC,QAAwD,OAAxD;AAGA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,gBAA1D;;AAmBA;AACA;AACA;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAAA,sBAC3BN,UAAU,CACN,gBAA6DO,GAA7D,EAAqE;AAAA,QAAlEC,KAAkE,QAAlEA,KAAkE;AAAA,0BAA3DC,KAA2D;AAAA,QAA3DA,KAA2D,2BAAnD,EAAmD;AAAA,8BAA/CC,SAA+C;AAAA,QAA/CA,SAA+C,+BAAnC,IAAmC;AAAA,QAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,QAAhBC,IAAgB;;AACjE,QAAMC,QAAQ,GAAGZ,WAAW,CAAC,UAACa,IAAD;AAAA,aAAUC,OAAO,CAACP,KAAK,IAAIA,KAAK,CAACQ,QAAN,CAAeF,IAAI,CAACN,KAApB,CAAV,CAAjB;AAAA,KAAD,EAAyD,CAACA,KAAD,CAAzD,CAA5B;AAEA,QAAMS,SAAS,GAAGf,OAAO,CACrB;AAAA,aACIC,qBAAqB,CAACM,KAAD,CAArB,CACKS,MADL,CACYL,QADZ,EAEKM,GAFL,CAES,UAACL,IAAD;AAAA,eAAUA,IAAI,CAACM,KAAf;AAAA,OAFT,EAGKC,IAHL,CAGUX,SAHV,CADJ;AAAA,KADqB,EAMrB,CAACF,KAAD,EAAQC,KAAR,EAAeI,QAAf,CANqB,CAAzB;AASA,QAAMS,SAAS,GAAGpB,OAAO,CAAC;AAAA,aAAME,kBAAkB,CAACK,KAAD,EAAQI,QAAR,CAAxB;AAAA,KAAD,EAA4C,CAACL,KAAD,EAAQC,KAAR,EAAeI,QAAf,CAA5C,CAAzB;AAEA,QAAMU,YAAY,GAAGtB,WAAW,CAC5B,UAACa,IAAD,EAAU;AACN,UAAMU,GAAG,GAAG,IAAIC,GAAJ,CAAQjB,KAAR,CAAZ;;AAEA,UAAIgB,GAAG,CAACE,GAAJ,CAAQZ,IAAI,CAACN,KAAb,CAAJ,EAAyB;AACrBgB,QAAAA,GAAG,UAAH,CAAWV,IAAI,CAACN,KAAhB;AACH,OAFD,MAEO;AACHgB,QAAAA,GAAG,CAACG,GAAJ,CAAQb,IAAI,CAACN,KAAb;AACH;;AAEDG,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGiB,KAAK,CAACC,IAAN,CAAWL,GAAX,CAAH,CAAR;AACH,KAX2B,EAY5B,CAACb,QAAD,CAZ4B,CAAhC;AAeA,wBAAO,oBAAC,IAAD,eAAUC,IAAV;AAAgB,MAAA,GAAG,EAAEL,GAArB;AAA0B,MAAA,KAAK,EAAEU,SAAjC;AAA4C,MAAA,KAAK,EAAEK,SAAnD;AAA8D,MAAA,YAAY,EAAEC;AAA5E,OAAP;AACH,GA/BK,CADiB;AAAA,CAAxB","sourcesContent":["import React, { forwardRef, useCallback, useMemo } from 'react';\nimport type { ComponentType, RefAttributes } from 'react';\n\nimport { flattenItemsRecursive, setActiveRecursive } from './Select.utils';\nimport type { SelectRefElement } from './SelectButton';\nimport type { SelectViewProps } from './SelectView';\n\nexport interface MultiSelectProps extends Omit<SelectViewProps, 'onItemClick' | 'value' | 'label' | 'multiselect'> {\n    /**\n     * Значение контрола.\n     */\n    value: Array<string | number> | null;\n    /**\n     * Разделитель выбранных значений.\n     */\n    separator?: string;\n    /**\n     * Обработчик изменения значения.\n     */\n    onChange?: (value: Array<string | number> | null) => void;\n}\n\n/**\n * Выпадающий список с возможностью выбора нескольких значений.\n */\nexport const withMultiSelect = (View: ComponentType<SelectViewProps & RefAttributes<SelectRefElement>>) =>\n    forwardRef<SelectRefElement, MultiSelectProps>(\n        ({ value, items = [], separator = ', ', onChange, ...rest }, ref) => {\n            const isActive = useCallback((item) => Boolean(value && value.includes(item.value)), [value]);\n\n            const viewValue = useMemo(\n                () =>\n                    flattenItemsRecursive(items)\n                        .filter(isActive)\n                        .map((item) => item.label)\n                        .join(separator),\n                [value, items, isActive],\n            );\n\n            const viewItems = useMemo(() => setActiveRecursive(items, isActive), [value, items, isActive]);\n\n            const onItemSelect = useCallback(\n                (item) => {\n                    const set = new Set(value);\n\n                    if (set.has(item.value)) {\n                        set.delete(item.value);\n                    } else {\n                        set.add(item.value);\n                    }\n\n                    onChange?.(Array.from(set));\n                },\n                [onChange],\n            );\n\n            return <View {...rest} ref={ref} value={viewValue} items={viewItems} onItemSelect={onItemSelect} />;\n        },\n    );\n"],"file":"withMultiSelect.js"}