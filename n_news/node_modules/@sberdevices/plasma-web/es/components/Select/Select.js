function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef } from 'react';
import { SelectView } from './SelectView';
import { withSingleSelect } from './withSingleSelect';
import { withMultiSelect } from './withMultiSelect';
var SingleSelect = /*#__PURE__*/withSingleSelect(SelectView);
var MultiSelect = /*#__PURE__*/withMultiSelect(SelectView);
/**
 * Выпадающий список для использования в формах.
 * Поддерживает выбор одного или нескольких значений.
 */
// eslint-disable-next-line prefer-arrow-callback

export var Select = /*#__PURE__*/forwardRef(function Select(props, ref) {
  if (props.multiselect) {
    return /*#__PURE__*/React.createElement(MultiSelect, _extends({
      ref: ref
    }, props));
  }

  return /*#__PURE__*/React.createElement(SingleSelect, _extends({
    ref: ref
  }, props));
});
//# sourceMappingURL=Select.js.map