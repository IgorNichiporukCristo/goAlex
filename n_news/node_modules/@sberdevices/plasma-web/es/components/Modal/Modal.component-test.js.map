{"version":3,"sources":["../../../src/components/Modal/Modal.component-test.tsx"],"names":["React","createGlobalStyle","mount","CypressTestDecorator","getComponent","NoAnimationStyle","text","heading","describe","ModalsProvider","Modal","Button","P1","Headline3","Demo","useState","isOpen","setIsOpen","Double","isOpenA","setIsOpenA","isOpenB","setIsOpenB","it","cy","get","click","matchImageSnapshot","should","type","contains"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { mount, CypressTestDecorator, getComponent } from '@sberdevices/plasma-cy-utils';\n\nconst NoAnimationStyle = createGlobalStyle`\n    /* stylelint-disable-next-line selector-max-id, selector-max-universal */\n    #plasma-modals-root * {\n        animation: none !important;\n    }\n`;\n\nconst text = `Если после применения правила Лопиталя неопределённость типа 0 / 0 осталась, мнимая единица традиционно\nразвивает Наибольший Общий Делитель (НОД).`;\nconst heading = 'Голосовая викторина Валдисом Пельшем';\n\ndescribe('plasma-web: Modal', () => {\n    const ModalsProvider = getComponent('ModalsProvider');\n    const Modal = getComponent('Modal');\n    const Button = getComponent('Button');\n    const P1 = getComponent('P1');\n    const Headline3 = getComponent('Headline1');\n\n    function Demo() {\n        const [isOpen, setIsOpen] = React.useState(false);\n\n        return (\n            <>\n                <Button text=\"Открыть модальное окно\" onClick={() => setIsOpen(true)} />\n                <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                    <Headline3>{heading}</Headline3>\n                    <P1>{text}</P1>\n                    <Button text=\"Закрыть\" onClick={() => setIsOpen(false)} />\n                </Modal>\n            </>\n        );\n    }\n\n    function Double() {\n        const [isOpenA, setIsOpenA] = React.useState(false);\n        const [isOpenB, setIsOpenB] = React.useState(false);\n\n        return (\n            <>\n                <Button text=\"Open modal A\" onClick={() => setIsOpenA(true)} />\n                <Modal id=\"modalA\" isOpen={isOpenA} onClose={() => setIsOpenA(false)}>\n                    <Headline3>Modal A</Headline3>\n                    <P1>{text}</P1>\n                    <Button text=\"Open modal B\" onClick={() => setIsOpenB(true)} />\n                    <Button text=\"Close\" onClick={() => setIsOpenA(false)} />\n                </Modal>\n                <Modal id=\"modalB\" isOpen={isOpenB} onClose={() => setIsOpenB(false)}>\n                    <Headline3>Modal B</Headline3>\n                    <P1>{text}</P1>\n                    <Button text=\"Close\" onClick={() => setIsOpenB(false)} />\n                </Modal>\n            </>\n        );\n    }\n\n    it('simple', () => {\n        mount(\n            <CypressTestDecorator>\n                <NoAnimationStyle />\n                <ModalsProvider>\n                    <Demo />\n                </ModalsProvider>\n            </CypressTestDecorator>,\n        );\n\n        cy.get('button').click();\n\n        cy.matchImageSnapshot();\n    });\n\n    it('close', () => {\n        mount(\n            <CypressTestDecorator>\n                <NoAnimationStyle />\n                <ModalsProvider>\n                    <Demo />\n                </ModalsProvider>\n            </CypressTestDecorator>,\n        );\n\n        cy.get('button').click();\n        cy.get('#plasma-modals-root > div').should('be.visible');\n        cy.get('body').type('{esc}');\n        cy.get('#plasma-modals-root').should('be.empty');\n    });\n\n    it('close overlay', () => {\n        mount(\n            <CypressTestDecorator>\n                <NoAnimationStyle />\n                <ModalsProvider>\n                    <Demo />\n                </ModalsProvider>\n            </CypressTestDecorator>,\n        );\n\n        cy.get('button').click();\n        cy.get('#plasma-modals-root > div').should('be.visible');\n        cy.get('body').click(5, 5);\n        cy.get('#plasma-modals-root').should('be.empty');\n    });\n\n    it('close X', () => {\n        mount(\n            <CypressTestDecorator>\n                <NoAnimationStyle />\n                <ModalsProvider>\n                    <Demo />\n                </ModalsProvider>\n            </CypressTestDecorator>,\n        );\n\n        cy.get('button').click();\n        cy.get('#plasma-modals-root > div').should('be.visible');\n        cy.get('svg').click();\n        cy.get('#plasma-modals-root').should('be.empty');\n    });\n\n    it('double close', () => {\n        mount(\n            <CypressTestDecorator>\n                <NoAnimationStyle />\n                <ModalsProvider>\n                    <Double />\n                </ModalsProvider>\n            </CypressTestDecorator>,\n        );\n\n        cy.get('button').contains('Open modal A').click();\n        cy.get('button').contains('Open modal B').click();\n        cy.get('#plasma-modals-root > div').should('be.visible');\n        cy.get('body').click(5, 5);\n        cy.get('div').contains('Modal A').should('be.visible');\n        cy.get('body').click(5, 5);\n        cy.get('#plasma-modals-root').should('be.empty');\n    });\n});\n"],"file":"Modal.component-test.js"}