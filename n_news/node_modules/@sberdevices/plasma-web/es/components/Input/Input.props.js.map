{"version":3,"sources":["../../../src/components/Input/Input.props.tsx"],"names":["css","inputBorderWidth","inputSuccessBackground","inputSuccessColor","inputSuccessCaretColor","inputSuccessBorderColor","inputWarningBackground","inputWarningColor","inputWarningCaretColor","inputWarningBorderColor","inputErrorBackground","inputErrorColor","inputErrorCaretColor","inputErrorBorderColor","sizes","l","height","paddingY","paddingX","hasLabelPaddingTop","hasLabelPaddingBottom","hasContentPaddingLeft","hasContentPaddingRight","m","s","statuses","success","warning","error"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AAEA,SACIC,gBADJ,EAEIC,sBAFJ,EAGIC,iBAHJ,EAIIC,sBAJJ,EAKIC,uBALJ,EAMIC,sBANJ,EAOIC,iBAPJ,EAQIC,sBARJ,EASIC,uBATJ,EAUIC,oBAVJ,EAWIC,eAXJ,EAYIC,oBAZJ,EAaIC,qBAbJ,QAcO,cAdP;AAgBA,OAAO,IAAMC,KAAK,GAAG;AACjBC,EAAAA,CAAC,EAAE;AACCC,IAAAA,MAAM,EAAE,8BADT;AAECC,IAAAA,QAAQ,EAAE,iCAFX;AAGCC,IAAAA,QAAQ,EAAE,iCAHX;AAICC,IAAAA,kBAAkB,EAAE,6CAJrB;AAKCC,IAAAA,qBAAqB,EAAE,gDALxB;AAMCC,IAAAA,qBAAqB,EAAE,gDANxB;AAOCC,IAAAA,sBAAsB,EAAE;AAPzB,GADc;AAUjBC,EAAAA,CAAC,EAAE;AACCP,IAAAA,MAAM,EAAE,8BADT;AAECC,IAAAA,QAAQ,EAAE,iCAFX;AAGCC,IAAAA,QAAQ,EAAE,iCAHX;AAICC,IAAAA,kBAAkB,EAAE,iCAJrB;AAKCC,IAAAA,qBAAqB,EAAE,iCALxB;AAMCC,IAAAA,qBAAqB,EAAE,gDANxB;AAOCC,IAAAA,sBAAsB,EAAE;AAPzB,GAVc;AAmBjBE,EAAAA,CAAC,EAAE;AACCR,IAAAA,MAAM,EAAE,8BADT;AAECC,IAAAA,QAAQ,EAAE,iCAFX;AAGCC,IAAAA,QAAQ,EAAE,iCAHX;AAICC,IAAAA,kBAAkB,EAAE,iCAJrB;AAKCC,IAAAA,qBAAqB,EAAE,iCALxB;AAMCC,IAAAA,qBAAqB,EAAE,gDANxB;AAOCC,IAAAA,sBAAsB,EAAE;AAPzB;AAnBc,CAAd;AA8BP,OAAO,IAAMG,QAAQ,GAAG;AACpBC,EAAAA,OAAO,eAAE1B,GAAF,2HAKqBE,sBALrB,EAMUC,iBANV,EAOgBC,sBAPhB,EAQ2BH,gBAR3B,EAQ+CI,uBAR/C,CADa;AAYpBsB,EAAAA,OAAO,eAAE3B,GAAF,2HAKqBM,sBALrB,EAMUC,iBANV,EAOgBC,sBAPhB,EAQ2BP,gBAR3B,EAQ+CQ,uBAR/C,CAZa;AAuBpBmB,EAAAA,KAAK,eAAE5B,GAAF,2HAKuBU,oBALvB,EAMYC,eANZ,EAOkBC,oBAPlB,EAQ6BX,gBAR7B,EAQiDY,qBARjD;AAvBe,CAAjB","sourcesContent":["import { css } from 'styled-components';\n\nimport {\n    inputBorderWidth,\n    inputSuccessBackground,\n    inputSuccessColor,\n    inputSuccessCaretColor,\n    inputSuccessBorderColor,\n    inputWarningBackground,\n    inputWarningColor,\n    inputWarningCaretColor,\n    inputWarningBorderColor,\n    inputErrorBackground,\n    inputErrorColor,\n    inputErrorCaretColor,\n    inputErrorBorderColor,\n} from '../../tokens';\n\nexport const sizes = {\n    l: {\n        height: 'var(--plasma-input-l-height)',\n        paddingY: 'var(--plasma-input-l-padding-y)',\n        paddingX: 'var(--plasma-input-l-padding-x)',\n        hasLabelPaddingTop: 'var(--plasma-input-l-has-label-padding-top)',\n        hasLabelPaddingBottom: 'var(--plasma-input-l-has-label-padding-bottom)',\n        hasContentPaddingLeft: 'var(--plasma-input-l-has-content-padding-left)',\n        hasContentPaddingRight: 'var(--plasma-input-l-has-content-padding-right)',\n    },\n    m: {\n        height: 'var(--plasma-input-m-height)',\n        paddingY: 'var(--plasma-input-m-padding-y)',\n        paddingX: 'var(--plasma-input-m-padding-x)',\n        hasLabelPaddingTop: 'var(--plasma-input-m-padding-y)',\n        hasLabelPaddingBottom: 'var(--plasma-input-m-padding-y)',\n        hasContentPaddingLeft: 'var(--plasma-input-m-has-content-padding-left)',\n        hasContentPaddingRight: 'var(--plasma-input-m-has-content-padding-right)',\n    },\n    s: {\n        height: 'var(--plasma-input-s-height)',\n        paddingY: 'var(--plasma-input-s-padding-y)',\n        paddingX: 'var(--plasma-input-s-padding-x)',\n        hasLabelPaddingTop: 'var(--plasma-input-s-padding-y)',\n        hasLabelPaddingBottom: 'var(--plasma-input-s-padding-y)',\n        hasContentPaddingLeft: 'var(--plasma-input-s-has-content-padding-left)',\n        hasContentPaddingRight: 'var(--plasma-input-s-has-content-padding-right)',\n    },\n};\n\nexport const statuses = {\n    success: css`\n        &,\n        &:hover,\n        &:focus,\n        &:hover:focus {\n            background-color: ${inputSuccessBackground};\n            color: ${inputSuccessColor};\n            caret-color: ${inputSuccessCaretColor};\n            box-shadow: inset 0 0 0 ${inputBorderWidth} ${inputSuccessBorderColor};\n        }\n    `,\n    warning: css`\n        &,\n        &:hover,\n        &:focus,\n        &:hover:focus {\n            background-color: ${inputWarningBackground};\n            color: ${inputWarningColor};\n            caret-color: ${inputWarningCaretColor};\n            box-shadow: inset 0 0 0 ${inputBorderWidth} ${inputWarningBorderColor};\n        }\n    `,\n    error: css`\n        &,\n        &:hover,\n        &:focus,\n        &:hover:focus {\n            background-color: ${inputErrorBackground};\n            color: ${inputErrorColor};\n            caret-color: ${inputErrorCaretColor};\n            box-shadow: inset 0 0 0 ${inputBorderWidth} ${inputErrorBorderColor};\n        }\n    `,\n};\n"],"file":"Input.props.js"}