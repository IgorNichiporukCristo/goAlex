var _excluded = ["role", "status", "title", "children"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled, { css } from 'styled-components';
import { surfaceCard, secondary, warning, critical, footnote1 } from '@sberdevices/plasma-core';
import { Headline5 } from '../Typography';
var statuses = {
  success: /*#__PURE__*/css(["color:#09a552;"]),
  warning: /*#__PURE__*/css(["color:", ";"], warning),
  error: /*#__PURE__*/css(["color:", ";"], critical)
};
var StyledRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web__sc-5delzh-0"
})(["position:relative;box-sizing:border-box;width:100%;max-width:18.75rem;padding:1rem 1.25rem;background:", ";box-shadow:0px 1px 1px rgba(0,0,0,0.05),0px 4px 14px rgba(0,0,0,0.08);border-radius:0.5rem;"], surfaceCard);
var StyledTitle = /*#__PURE__*/styled(Headline5).withConfig({
  componentId: "plasma-web__sc-5delzh-1"
})(["margin-bottom:0.5rem;", ""], function (_ref) {
  var status = _ref.status;
  return status && statuses[status];
});
var StyledContent = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web__sc-5delzh-2"
})(["", ";color:", ";"], footnote1, secondary);
/**
 * Компонент для небольших уведомлений пользователя
 */

export var Notification = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {
  var _ref2$role = _ref2.role,
      role = _ref2$role === void 0 ? 'status' : _ref2$role,
      status = _ref2.status,
      title = _ref2.title,
      content = _ref2.children,
      rest = _objectWithoutProperties(_ref2, _excluded);

  var ariaLive = 'polite';
  var ariaAtomic = false;

  if (role === 'alert') {
    ariaLive = 'assertive';
  } else if (role === 'status') {
    ariaAtomic = true;
  }

  return /*#__PURE__*/React.createElement(StyledRoot, _extends({
    ref: ref,
    role: role,
    "aria-live": ariaLive,
    "aria-atomic": ariaAtomic
  }, rest), /*#__PURE__*/React.createElement(StyledTitle, {
    status: status
  }, title), /*#__PURE__*/React.createElement(StyledContent, null, content));
});
//# sourceMappingURL=Notification.js.map