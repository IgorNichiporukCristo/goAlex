var _excluded = ["id"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import ReactDOM from 'react-dom';
import styled, { css, keyframes } from 'styled-components';
import { useStoreon } from 'storeon/react';
import { Notification } from './Notification';
var showAnimation = /*#__PURE__*/keyframes(["0%{transform:translateX(100%);opacity:0;}100%{transform:translateX(0);opacity:1;}"]);
var hideAnimation = /*#__PURE__*/keyframes(["0%{transform:translateX(0);opacity:1;}100%{transform:translateX(100%);opacity:0;}"]);
var StyledRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web__sc-z7x50y-0"
})(["position:fixed;right:0;bottom:0;z-index:1;display:flex;flex-direction:column-reverse;overflow-y:auto;box-sizing:border-box;padding:0 1.5rem 1.5rem;max-height:100%;"]);
var StyledItemWrapper = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web__sc-z7x50y-1"
})(["margin-top:1rem;opacity:1;", ""], function (_ref) {
  var isHiding = _ref.isHiding;
  return css(["animation:0.4s ", " ease-out;"], isHiding ? hideAnimation : showAnimation);
});
/**
 * Обертка для визуального представления уведомлений.
 */

export var NotificationsPortal = function NotificationsPortal() {
  var rootRef = React.useRef(null);

  var _useStoreon = useStoreon('notifications'),
      notifications = _useStoreon.notifications;

  React.useEffect(function () {
    var root = document.createElement('div');
    rootRef.current = root;
    rootRef.current.setAttribute('id', 'plasma-notifications-root');
    rootRef.current.style.position = 'relative';
    rootRef.current.style.zIndex = '9100';
    document.body.appendChild(root);
    return function () {
      document.body.removeChild(root);
    };
  }, []);
  return rootRef && rootRef.current && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, notifications.length > 0 && /*#__PURE__*/React.createElement(StyledRoot, null, notifications.map(function (_ref2) {
    var id = _ref2.id,
        rest = _objectWithoutProperties(_ref2, _excluded);

    return /*#__PURE__*/React.createElement(Notification, _extends({
      key: id,
      as: StyledItemWrapper,
      id: id
    }, rest));
  }))), rootRef.current);
};
//# sourceMappingURL=NotificationsPortal.js.map