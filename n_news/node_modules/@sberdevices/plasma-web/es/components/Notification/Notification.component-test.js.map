{"version":3,"sources":["../../../src/components/Notification/Notification.component-test.tsx"],"names":["React","createGlobalStyle","mount","CypressTestDecorator","getComponent","SpaceMe","NoAnimationStyle","describe","NotificationsProvider","addNotification","closeNotification","Button","it","id","status","title","children","cy","get","contains","click","matchImageSnapshot","should"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,KAAT,EAAgBC,oBAAhB,EAAsCC,YAAtC,EAAoDC,OAApD,QAAmE,8BAAnE;AAEA,IAAMC,gBAAgB,gBAAGL,iBAAH,8DAAtB;AAOAM,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACvC,MAAMC,qBAAqB,GAAGJ,YAAY,CAAC,uBAAD,CAA1C;AACA,MAAMK,eAAe,GAAGL,YAAY,CAAC,iBAAD,CAApC;AACA,MAAMM,iBAAiB,GAAGN,YAAY,CAAC,mBAAD,CAAtC;AACA,MAAMO,MAAM,GAAGP,YAAY,CAAC,QAAD,CAA3B;AAEAQ,EAAAA,EAAE,CAAC,SAAD,EAAY,YAAM;AAChBV,IAAAA,KAAK,eACD,oBAAC,oBAAD,qBACI,oBAAC,gBAAD,OADJ,eAEI,oBAAC,qBAAD,qBACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,4CADT;AAEI,MAAA,OAAO,EAAE,mBAAM;AACXO,QAAAA,eAAe,CACX;AACII,UAAAA,EAAE,EAAE,2BADR;AAEIC,UAAAA,MAAM,EAAE,SAFZ;AAGIC,UAAAA,KAAK,EAAE,UAHX;AAIIC,UAAAA,QAAQ,EAAE;AAJd,SADW,EAOX,KAPW,CAAf;AASAP,QAAAA,eAAe,CACX;AACII,UAAAA,EAAE,EAAE,2BADR;AAEIC,UAAAA,MAAM,EAAE,SAFZ;AAGIC,UAAAA,KAAK,EAAE,UAHX;AAIIC,UAAAA,QAAQ,EAAE;AAJd,SADW,EAOX,KAPW,CAAf;AASAP,QAAAA,eAAe,CACX;AACII,UAAAA,EAAE,EAAE,yBADR;AAEIC,UAAAA,MAAM,EAAE,OAFZ;AAGIC,UAAAA,KAAK,EAAE,QAHX;AAIIC,UAAAA,QAAQ,EAAE;AAJd,SADW,EAOX,KAPW,CAAf;AASH;AA9BL,MADJ,eAiCI,oBAAC,OAAD,OAjCJ,eAkCI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,4CADT;AAEI,MAAA,OAAO,EAAE,mBAAM;AACXN,QAAAA,iBAAiB,CAAC,2BAAD,CAAjB;AACAA,QAAAA,iBAAiB,CAAC,2BAAD,CAAjB;AACAA,QAAAA,iBAAiB,CAAC,yBAAD,CAAjB;AACH;AANL,MAlCJ,CAFJ,CADC,CAAL;AAiDAO,IAAAA,EAAE,CAACC,GAAH,CAAO,QAAP,EAAiBC,QAAjB,CAA0B,SAA1B,EAAqCC,KAArC;AACAH,IAAAA,EAAE,CAACI,kBAAH;AACAJ,IAAAA,EAAE,CAACC,GAAH,CAAO,QAAP,EAAiBC,QAAjB,CAA0B,SAA1B,EAAqCC,KAArC;AACAH,IAAAA,EAAE,CAACC,GAAH,CAAO,4BAAP,EAAqCI,MAArC,CAA4C,UAA5C;AACH,GAtDC,CAAF;AAuDH,CA7DO,CAAR","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { mount, CypressTestDecorator, getComponent, SpaceMe } from '@sberdevices/plasma-cy-utils';\n\nconst NoAnimationStyle = createGlobalStyle`\n    /* stylelint-disable-next-line selector-max-id, selector-max-universal */\n    #plasma-notifications-root * {\n        animation: none !important;\n    }\n`;\n\ndescribe('plasma-web: Notification', () => {\n    const NotificationsProvider = getComponent('NotificationsProvider');\n    const addNotification = getComponent('addNotification');\n    const closeNotification = getComponent('closeNotification');\n    const Button = getComponent('Button');\n\n    it('default', () => {\n        mount(\n            <CypressTestDecorator>\n                <NoAnimationStyle />\n                <NotificationsProvider>\n                    <Button\n                        text=\"Открыть\"\n                        onClick={() => {\n                            addNotification(\n                                {\n                                    id: 'test-notification-success',\n                                    status: 'success',\n                                    title: 'Success!',\n                                    children: 'Must be green!',\n                                },\n                                80000,\n                            );\n                            addNotification(\n                                {\n                                    id: 'test-notification-warning',\n                                    status: 'warning',\n                                    title: 'Warning!',\n                                    children: 'Must be yellow!',\n                                },\n                                80000,\n                            );\n                            addNotification(\n                                {\n                                    id: 'test-notification-error',\n                                    status: 'error',\n                                    title: 'Error!',\n                                    children: 'Must be red!',\n                                },\n                                80000,\n                            );\n                        }}\n                    />\n                    <SpaceMe />\n                    <Button\n                        text=\"Закрыть\"\n                        onClick={() => {\n                            closeNotification('test-notification-success');\n                            closeNotification('test-notification-warning');\n                            closeNotification('test-notification-error');\n                        }}\n                    />\n                </NotificationsProvider>\n            </CypressTestDecorator>,\n        );\n\n        cy.get('button').contains('Открыть').click();\n        cy.matchImageSnapshot();\n        cy.get('button').contains('Закрыть').click();\n        cy.get('#plasma-notifications-root').should('be.empty');\n    });\n});\n"],"file":"Notification.component-test.js"}