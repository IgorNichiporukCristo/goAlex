"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepareCompatibleTypo = exports.prepareStandardBreakpointTypo = void 0;
exports.prepareStandardBreakpointTypo = function (typo) {
    return Object.entries(typo).reduce(function (acc, _a) {
        var typoKey = _a[0], typoProps = _a[1];
        Object.entries(typoProps).forEach(function (_a) {
            var typoProp = _a[0], propValue = _a[1];
            acc["--plasma-typo-" + typoKey + "-" + typoProp] = propValue;
        });
        return acc;
    }, {});
};
var compatProps = ['font-family', 'font-size', 'font-style', 'font-weight', 'letter-spacing', 'line-height'];
exports.prepareCompatibleTypo = function (typoMap) {
    return Object.entries(typoMap).reduce(function (acc, _a) {
        var _b = _a, oldKey = _b[0], _c = _b[1], name = _c.name, rest = __rest(_c, ["name"]);
        var oldPrefix = "--plasma-typo-" + oldKey;
        var newPrefix = "--plasma-typo-" + name;
        compatProps.forEach(function (compatProp) {
            acc[oldPrefix + "-" + compatProp] = "var(" + newPrefix + "-" + compatProp + ")";
        });
        Object.entries(rest).forEach(function (_a) {
            var customCompatProp = _a[0], value = _a[1];
            acc[oldPrefix + "-" + customCompatProp] = value;
        });
        return acc;
    }, {});
};
//# sourceMappingURL=helpers.js.map