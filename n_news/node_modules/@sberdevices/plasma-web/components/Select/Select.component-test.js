"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _plasmaCyUtils = /*#__PURE__*/require("@sberdevices/plasma-cy-utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Codes;

(function (Codes) {
  Codes[Codes["ArrowUp"] = 38] = "ArrowUp";
  Codes[Codes["ArrowDown"] = 40] = "ArrowDown";
  Codes[Codes["Enter"] = 13] = "Enter";
  Codes[Codes["Space"] = 32] = "Space";
  Codes[Codes["Esc"] = 27] = "Esc";
  Codes[Codes["PageUp"] = 33] = "PageUp";
  Codes[Codes["PageDown"] = 34] = "PageDown";
})(Codes || (Codes = {}));

var id = 'test-select';
var items = [{
  value: 'each',
  label: 'Каждый'
}, {
  value: 'hunter',
  label: 'Охотник',
  isDisabled: true
}, {
  value: 'wants',
  label: 'Желает'
}, {
  value: 'toKnow',
  label: 'Знать',
  items: [{
    value: '_fullText',
    label: 'Каждый охотник желает знать, где сидит фазан'
  }, {
    value: '_thePheasant',
    label: 'Фазан'
  }, {
    value: '_is',
    label: 'Сидит'
  }]
}, {
  value: 'where',
  label: 'Где'
}, {
  value: 'is',
  label: 'Сидит'
}, {
  value: 'thePheasant',
  label: 'Фазан'
}, {
  value: 'fullText',
  label: 'Каждый охотник желает знать, где сидит фазан'
}];
describe('plasma-web: Select', function () {
  var Select = (0, _plasmaCyUtils.getComponent)('Select');

  var ControlledSelect = function ControlledSelect() {
    var _useState = (0, _react.useState)(null),
        _useState2 = _slicedToArray(_useState, 2),
        value = _useState2[0],
        setValue = _useState2[1];

    return /*#__PURE__*/_react["default"].createElement(Select, {
      id: id,
      value: value,
      onChange: function onChange(v) {
        return setValue(v);
      },
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    });
  };

  it('default', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    })));
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
  it('disabled', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      disabled: true,
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    })));
    cy.get('button').click({
      force: true
    });
    cy.matchImageSnapshot();
  });
  it('empty', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      items: [],
      placeholder: "\u041F\u0443\u0441\u0442\u043E\u0439 \u0441\u043F\u0438\u0441\u043E\u043A",
      helperText: "Empty"
    })));
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
  it('multiselect', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      multiselect: true,
      value: ['each', 'wants'],
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    })));
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
  it('item click', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null)));
    cy.get('button').click();
    cy.get('li').contains('Каждый').click({
      force: true
    });
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
});
describe('plasma-web: Select a11y - keyboard control', function () {
  var Select = (0, _plasmaCyUtils.getComponent)('Select');

  var ControlledSelect = function ControlledSelect() {
    var _useState3 = (0, _react.useState)(null),
        _useState4 = _slicedToArray(_useState3, 2),
        value = _useState4[0],
        setValue = _useState4[1];

    return /*#__PURE__*/_react["default"].createElement(Select, {
      id: id,
      value: value,
      onChange: function onChange(v) {
        return setValue(v);
      },
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    });
  };

  it('open with "ArrowDown", "Space" and "Enter"', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))); // Open with "ArrowDown"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.ArrowDown
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true'); // Check is first item is in focus

    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-0")); // Close with "Esc"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'false'); // Open with "Space"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Space
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true'); // Close again

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'false'); // Open with "Enter"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true'); // Close again

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'false');
  });
  it('navigate with "ArrowDown" and "ArrowUp" and select', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))); // Open with "Enter"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true'); // Navigate to the third item (second is disabled)

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.ArrowDown
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-2")); // Select navigated item with "Enter"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should(function ($p) {
      // select should contain a value
      expect($p).to.contain('Желает'); // select should be closed

      expect($p.attr('aria-expanded')).to.eq('false');
    }); // Open with enter

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true'); // Navigate to the last item

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.ArrowUp
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-7")); // Select navigated item with "Space"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Space
    });
    cy.get('[role="combobox"]').should(function ($p) {
      // select should contain a value
      expect($p).to.contain('Каждый охотник желает знать, где сидит фазан'); // select should be closed

      expect($p.attr('aria-expanded')).to.eq('false');
    }); // First item in the list must be selected

    cy.get("#".concat(id, "-dropdown-item-7")).should('have.attr', 'aria-selected', 'true');
  });
  it('navigate with "PageDown" and "PageUp"', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))); // Open with "Enter"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true'); // Navigate to the last item

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.PageDown
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-7")); // Navigate to the first item

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.PageUp
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-0"));
  });
  it('search by typing', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))); // Open with "Enter"

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    }); // Type a letter

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      key: 'Ж'
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-2"));
    cy.wait(500); // Type a full word

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      key: 'З'
    }).trigger('keydown', {
      key: 'Н'
    }).trigger('keydown', {
      key: 'А'
    }).trigger('keydown', {
      key: 'Т'
    }).trigger('keydown', {
      key: 'Ь'
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-3")); // Close and open

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    }).trigger('keydown', {
      keyCode: Codes.Enter
    }); // Type, something, that doesnt exist

    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      key: 'W'
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-0"));
  });
});
//# sourceMappingURL=Select.component-test.js.map