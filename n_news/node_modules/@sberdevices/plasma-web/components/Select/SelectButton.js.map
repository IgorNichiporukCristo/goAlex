{"version":3,"sources":["../../src/components/Select/SelectButton.tsx"],"names":["statuses","success","warning","error","critical","StyledArrow","IconChevronDown","StyledText","styled","span","applyEllipsis","primary","StyledPlaceholder","tertiary","StyledButton","button","body1","inputBorder","secondary","hasItems","css","inputBorderHover","accent","focused","status","isOpen","SelectButton","ref","value","placeholder","rest"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAWA;;AAEA;;;;;;;;;;;;;;AAiBA,IAAMA,QAAQ,GAAG;AACbC,EAAAA,OAAO,EAAPA,mBADa;AAEbC,EAAAA,OAAO,EAAPA,mBAFa;AAGbC,EAAAA,KAAK,EAAEC;AAHM,CAAjB;AAMA,IAAMC,WAAW,gBAAG,kCAAOC,4BAAP,CAAH;AAAA;AAAA,yKAAjB;;AAMA,IAAMC,UAAU,gBAAGC,6BAAOC,IAAV;AAAA;AAAA,gGACVC,yBADU,EAGHC,mBAHG,CAAhB;;AAQA,IAAMC,iBAAiB,gBAAGJ,6BAAOC,IAAV;AAAA;AAAA,8DACjBC,yBADiB,EAGVG,oBAHU,CAAvB;;AAWA,IAAMC,YAAY,gBAAGN,6BAAOO,MAAV;AAAA;AAAA,mYACZC,iBADY,EAaMC,mBAbN,EAiBLC,qBAjBK,EAoBZ;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACEA,QAAQ,QACRC,qBADQ,4EAIgBC,wBAJhB,EAKSH,qBALT,CADV;AAAA,CApBY,EAoCMI,kBApCN,EAqCDA,kBArCC,EAwCZ;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,SACEA,OAAO,QACPH,qBADO,qCAEaE,kBAFb,EAGMA,kBAHN,CADT;AAAA,CAxCY,EA+CZ;AAAA,MAAGE,MAAH,SAAGA,MAAH;AAAA,SACEA,MAAM,QACNJ,qBADM,wEAEcpB,QAAQ,CAACwB,MAAD,CAFtB,EAGOxB,QAAQ,CAACwB,MAAD,CAHf,EAQkBxB,QAAQ,CAACwB,MAAD,CAR1B,CADR;AAAA,CA/CY,EA4DZ;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SACEA,MAAM,QACNL,qBADM,wCAEAf,WAFA,CADR;AAAA,CA5DY,CAAlB,C,CAqEA;;;AACO,IAAMqB,YAAY,gBAAG,uBAAgD,SAASA,YAAT,QAExEC,GAFwE,EAG1E;AAAA,MAFIC,KAEJ,SAFIA,KAEJ;AAAA,MAFWC,WAEX,SAFWA,WAEX;AAAA,MAFwBV,QAExB,SAFwBA,QAExB;AAAA,MAFqCW,IAErC;;AACE,sBACI,gCAAC,YAAD,eAAkBA,IAAlB;AAAwB,IAAA,GAAG,EAAEH,GAA7B;AAAkC,IAAA,QAAQ,EAAER,QAA5C;AAAsD,kBAAYU;AAAlE,MACKD,KAAK,iBAAI,gCAAC,UAAD,QAAaA,KAAb,CADd,EAEKC,WAAW,IAAI,CAACD,KAAhB,iBAAyB,gCAAC,iBAAD;AAAmB,mBAAY;AAA/B,KAAuCC,WAAvC,CAF9B,EAGKV,QAAQ,iBAAI,gCAAC,WAAD;AAAa,IAAA,IAAI,EAAC,IAAlB;AAAuB,IAAA,KAAK,EAAC;AAA7B,IAHjB,CADJ;AAOH,CAX2B,CAArB","sourcesContent":["import React, { ButtonHTMLAttributes, forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n    body1,\n    accent,\n    primary,\n    secondary,\n    tertiary,\n    success,\n    warning,\n    critical,\n    applyEllipsis,\n} from '@sberdevices/plasma-core';\nimport { IconChevronDown } from '@sberdevices/plasma-icons';\n\nimport { inputBorder, inputBorderHover } from '../../tokens';\nimport type { FieldProps } from '../Field';\n\nexport type SelectRefElement = HTMLButtonElement;\n\nexport interface SelectButtonProps\n    extends Pick<FieldProps, 'status' | 'placeholder' | 'disabled'>,\n        Omit<ButtonHTMLAttributes<SelectRefElement>, 'value'> {\n    /**\n     * Выводимое значение.\n     */\n    value?: string | number | null;\n    hasItems?: boolean;\n    isOpen?: boolean;\n    children?: never;\n}\n\nconst statuses = {\n    success,\n    warning,\n    error: critical,\n};\n\nconst StyledArrow = styled(IconChevronDown)`\n    margin: var(--plasma-select-button-arrow-margin, 0 0 0 0.75rem);\n    transition: color 0.3s ease-in-out, transform 0.15s ease-in-out;\n    pointer-events: none;\n    user-select: none;\n`;\nconst StyledText = styled.span`\n    ${applyEllipsis}\n\n    color: ${primary};\n    transition: color 0.3s ease-in-out;\n    pointer-events: none;\n    user-select: none;\n`;\nconst StyledPlaceholder = styled.span`\n    ${applyEllipsis}\n\n    color: ${tertiary};\n    pointer-events: none;\n    user-select: none;\n`;\n\ninterface StyledButtonProps extends Pick<SelectButtonProps, 'status' | 'hasItems' | 'isOpen'> {\n    focused?: boolean;\n}\nconst StyledButton = styled.button<StyledButtonProps>`\n    ${body1}\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    box-sizing: border-box;\n\n    width: 100%;\n    height: 3rem;\n\n    /* stylelint-disable-next-line number-max-precision */\n    padding: 0.875rem 0.9375rem;\n    border: 1px solid ${inputBorder};\n    border-radius: 0.25rem;\n\n    background-color: transparent;\n    color: ${secondary};\n    transition: border-color 0.3s ease-in-out;\n\n    ${({ hasItems }) =>\n        hasItems &&\n        css`\n            &:not(:disabled):hover {\n                cursor: pointer;\n                border-color: ${inputBorderHover};\n                color: ${secondary};\n            }\n        `}\n\n    &:disabled {\n        cursor: inherit;\n    }\n\n    &:not(:disabled):focus {\n        outline: 0 none;\n        border-color: ${accent};\n        color: ${accent};\n    }\n\n    ${({ focused }) =>\n        focused &&\n        css`\n            border-color: ${accent};\n            color: ${accent};\n        `}\n\n    ${({ status }) =>\n        status &&\n        css`\n            border-color: ${statuses[status]};\n            color: ${statuses[status]};\n\n            /* stylelint-disable-next-line selector-nested-pattern */\n            &:hover,\n            &:focus {\n                border-color: ${statuses[status]};\n            }\n        `}\n\n    ${({ isOpen }) =>\n        isOpen &&\n        css`\n            ${StyledArrow} {\n                transform: rotate(-180deg);\n            }\n        `}\n`;\n\n// eslint-disable-next-line prefer-arrow-callback\nexport const SelectButton = forwardRef<SelectRefElement, SelectButtonProps>(function SelectButton(\n    { value, placeholder, hasItems, ...rest },\n    ref,\n) {\n    return (\n        <StyledButton {...rest} ref={ref} hasItems={hasItems} aria-label={placeholder}>\n            {value && <StyledText>{value}</StyledText>}\n            {placeholder && !value && <StyledPlaceholder aria-hidden=\"true\">{placeholder}</StyledPlaceholder>}\n            {hasItems && <StyledArrow size=\"xs\" color=\"inherit\" />}\n        </StyledButton>\n    );\n});\n"],"file":"SelectButton.js"}