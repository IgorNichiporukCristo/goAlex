"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownItem = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@sberdevices/plasma-core");

var _plasmaIcons = /*#__PURE__*/require("@sberdevices/plasma-icons");

var _excluded = ["value", "label", "isActive", "isDisabled", "isHovered", "color", "contentLeft", "items", "role", "onClick", "onHover", "onFocus"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var StyledDropdownItem = /*#__PURE__*/_styledComponents["default"].li.withConfig({
  componentId: "plasma-web__sc-1ffczwt-0"
})(["display:flex;flex:1;align-items:center;justify-content:flex-start;box-sizing:border-box;text-decoration:none;height:var(--plasma-dropdown-item-height,3rem);padding:var(--plasma-dropdown-item-padding,1rem);border-radius:var(--plasma-dropdown-item-border-radius,0);font-family:var(--plasma-dropdown-item-font-family,", ");font-size:var(--plasma-dropdown-item-font-size,", ");font-weight:var(--plasma-dropdown-item-font-weight,", ");line-height:var(--plasma-dropdown-item-line-height,", ");letter-spacing:var(--plasma-dropdown-item-letter-spacing,", ");background-color:transparent;color:", ";transition:background-color 0.3s ease-in-out;cursor:pointer;&:hover,&:focus{color:", ";background-color:", ";}&:focus{outline:0 none;}", " &:active{background-color:", ";}", " ", ""], _plasmaCore.body1.fontFamily, _plasmaCore.body1.fontSize, _plasmaCore.body1.fontWeight, _plasmaCore.body1.lineHeight, _plasmaCore.body1.letterSpacing, function (_ref) {
  var $color = _ref.$color;
  return $color || _plasmaCore.primary;
}, function (_ref2) {
  var $color = _ref2.$color;
  return $color || _plasmaCore.primary;
}, _plasmaCore.surfaceLiquid02, function (_ref3) {
  var $hover = _ref3.$hover,
      $color = _ref3.$color;
  return $hover && (0, _styledComponents.css)(["color:", ";background-color:", ";"], function () {
    return $color || _plasmaCore.primary;
  }, _plasmaCore.surfaceLiquid02);
}, _plasmaCore.surfaceLiquid03, function (_ref4) {
  var $disabled = _ref4.$disabled;
  return $disabled && (0, _styledComponents.css)(["&,&:hover,&:focus,&:active{background-color:transparent;}"]);
}, _plasmaCore.applyDisabled);

var StyledContent = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-web__sc-1ffczwt-1"
})(["display:inline-flex;margin-right:0.375rem;"]);

var StyledText = /*#__PURE__*/_styledComponents["default"].span.withConfig({
  componentId: "plasma-web__sc-1ffczwt-2"
})(["", " margin-right:0.625rem;pointer-events:none;user-select:none;"], _plasmaCore.applyEllipsis);

var StyledChevron = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaIcons.IconChevronRight).withConfig({
  componentId: "plasma-web__sc-1ffczwt-3"
})(["margin-left:auto;pointer-events:none;margin-right:-0.25rem;"]);
var StyledCheck = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaIcons.IconDone).withConfig({
  componentId: "plasma-web__sc-1ffczwt-4"
})(["margin-left:auto;pointer-events:none;margin-right:-0.5rem;"]);

var StyledDot = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-web__sc-1ffczwt-5"
})(["width:0.375rem;height:0.375rem;background-color:", ";border-radius:50%;"], _plasmaCore.accent);
/**
 * Элемент выпадающего списка.
 */


var DropdownItem = function DropdownItem(_ref5) {
  var _items$filter;

  var value = _ref5.value,
      label = _ref5.label,
      isActive = _ref5.isActive,
      isDisabled = _ref5.isDisabled,
      isHovered = _ref5.isHovered,
      color = _ref5.color,
      contentLeft = _ref5.contentLeft,
      _ref5$items = _ref5.items,
      items = _ref5$items === void 0 ? [] : _ref5$items,
      _ref5$role = _ref5.role,
      role = _ref5$role === void 0 ? 'menuitem' : _ref5$role,
      onClickExternal = _ref5.onClick,
      onHover = _ref5.onHover,
      onFocus = _ref5.onFocus,
      rest = _objectWithoutProperties(_ref5, _excluded);

  var ref = (0, _react.useRef)(null);
  var hasItems = Boolean(items.length);
  var isActiveAsSingleOrNode = Boolean(isActive || ((_items$filter = items.filter(function (item) {
    return item.isActive;
  })) === null || _items$filter === void 0 ? void 0 : _items$filter.length));
  var contentRight = (0, _react.useMemo)(function () {
    if (hasItems) {
      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, isActiveAsSingleOrNode && /*#__PURE__*/_react["default"].createElement(StyledDot, null), /*#__PURE__*/_react["default"].createElement(StyledChevron, {
        size: "xs"
      }));
    }

    if (isActive) {
      return /*#__PURE__*/_react["default"].createElement(StyledCheck, {
        size: "s",
        color: _plasmaCore.accent
      });
    }

    return null;
  }, [isActive, isActiveAsSingleOrNode, hasItems]);
  var onClick = (0, _react.useCallback)(function (event) {
    var _ref$current;

    event.preventDefault();
    var targetIsItem = event.target === ref.current;
    var targetInItem = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);

    if (value !== undefined && !isDisabled && (targetIsItem || targetInItem)) {
      onClickExternal === null || onClickExternal === void 0 ? void 0 : onClickExternal({
        value: value,
        label: label
      }, event);
    }
  }, [value, label, isDisabled, onClickExternal]);
  return /*#__PURE__*/_react["default"].createElement(StyledDropdownItem, _extends({}, rest, {
    ref: ref,
    $hover: isHovered,
    $disabled: isDisabled,
    $color: color,
    role: role,
    "aria-label": label,
    "aria-selected": role === 'option' ? isActiveAsSingleOrNode : undefined,
    onClick: onClick,
    onMouseOver: onHover,
    onFocus: onFocus
  }), contentLeft && /*#__PURE__*/_react["default"].createElement(StyledContent, null, contentLeft), label && /*#__PURE__*/_react["default"].createElement(StyledText, {
    role: "presentation"
  }, label), contentRight);
};

exports.DropdownItem = DropdownItem;
//# sourceMappingURL=DropdownItem.js.map