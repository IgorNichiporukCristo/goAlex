{"version":3,"sources":["../../../src/components/Dropdown/keyboardNavigation/useSearchString.ts"],"names":["useSearchString","searchString","setSearchString","searchTimeout","getSearchString","char","current","window","clearTimeout","setTimeout","prev","resetSearchString"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,kBAAwC,qBAAS,EAAT,CAAxC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,aAAa,GAAG,mBAAsB,IAAtB,CAAtB;AAEA,MAAMC,eAAe,GAAG,wBACpB,UAACC,KAAD,EAAkB;AACd;AACA;AACA,QAAIF,aAAa,CAACG,OAAlB,EAA2B;AACvBC,MAAAA,MAAM,CAACC,YAAP,CAAoBL,aAAa,CAACG,OAAlC;AACH;;AAEDH,IAAAA,aAAa,CAACG,OAAd,GAAwBC,MAAM,CAACE,UAAP,CAAkB,YAAM;AAC5CP,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH,KAFuB,EAErB,GAFqB,CAAxB,CAPc,CAWd;;AACAA,IAAAA,eAAe,CAAC,UAACQ,IAAD;AAAA,aAAUA,IAAI,GAAGL,KAAjB;AAAA,KAAD,CAAf;AACA,WAAOJ,YAAY,GAAGI,KAAtB;AACH,GAfmB,EAgBpB,CAACJ,YAAD,CAhBoB,CAAxB;AAmBA,MAAMU,iBAAiB,GAAG,wBAAY,YAAM;AACxC,QAAIR,aAAa,CAACG,OAAlB,EAA2B;AACvBC,MAAAA,MAAM,CAACC,YAAP,CAAoBL,aAAa,CAACG,OAAlC;AACH;;AACDJ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GALyB,EAKvB,EALuB,CAA1B;AAOA,SAAO;AACHE,IAAAA,eAAe,EAAfA,eADG;AAEHO,IAAAA,iBAAiB,EAAjBA;AAFG,GAAP;AAIH,CAnCM","sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nexport const useSearchString = () => {\n    const [searchString, setSearchString] = useState('');\n\n    const searchTimeout = useRef<number | null>(null);\n\n    const getSearchString = useCallback(\n        (char: string) => {\n            // Скидываем таймаут и начинаем новый\n            // Это позволяет делать поиск с несколькими буквами, как нативный селект\n            if (searchTimeout.current) {\n                window.clearTimeout(searchTimeout.current);\n            }\n\n            searchTimeout.current = window.setTimeout(() => {\n                setSearchString('');\n            }, 500);\n\n            // Добавляем последнюю букву в поисковой строке\n            setSearchString((prev) => prev + char);\n            return searchString + char;\n        },\n        [searchString],\n    );\n\n    const resetSearchString = useCallback(() => {\n        if (searchTimeout.current) {\n            window.clearTimeout(searchTimeout.current);\n        }\n        setSearchString('');\n    }, []);\n\n    return {\n        getSearchString,\n        resetSearchString,\n    };\n};\n"],"file":"useSearchString.js"}