{"version":3,"sources":["../../src/components/Dropdown/DropdownPopup.tsx"],"names":["DropdownPopup","Popup","offsetTop","undefined","css","DropdownSelfControlledPopup","rest","isOpen","setIsOpen","is"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;AAUA;AACA;AACA;AACO,IAAMA,aAAa,gBAAG,kCAAOC,YAAP,CAAH;AAAA;AAAA,qMASpB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SACEA,SAAS,KAAKC,SAAd,QACAC,qBADA,wCAE8BF,SAF9B,CADF;AAAA,CAToB,CAAnB;AAgBP;AACA;AACA;;;;AACO,IAAMG,2BAAgF,GAAG,SAAnFA,2BAAmF,QAAiB;AAAA,MAAXC,IAAW;;AAC7G,kBAA4B,qBAAS,KAAT,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,sBAAO,gCAAC,aAAD,eAAmBF,IAAnB;AAAyB,IAAA,MAAM,EAAEC,MAAjC;AAAyC,IAAA,QAAQ,EAAE,kBAACE,EAAD;AAAA,aAAQD,SAAS,CAACC,EAAD,CAAjB;AAAA;AAAnD,KAAP;AACH,CAJM","sourcesContent":["import React, { FC, useState } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { Popup, PopupProps } from '../Popup';\n\nexport interface DropdownPopupProps extends PopupProps {\n    /**\n     * Отступ сверху.\n     * @deprecated\n     */\n    offsetTop?: string | number;\n}\n\n/**\n * Попап с внешним контролем над видимостью через пропы `isOpen` и `onToggle`.\n */\nexport const DropdownPopup = styled(Popup)<DropdownPopupProps>`\n    & & {\n        width: 100%;\n\n        --plasma-popup-width: var(--plasma-popup-nested-width);\n        --plasma-popup-padding: var(--plasma-popup-nested-padding);\n        --plasma-popup-margin: var(--plasma-popup-nested-margin);\n    }\n\n    ${({ offsetTop }) =>\n        offsetTop !== undefined &&\n        css`\n            --plasma-popup-padding: ${offsetTop} 0 0;\n        `}\n`;\n\n/**\n * Попап, не требующий внешнего контроля над видимостью.\n */\nexport const DropdownSelfControlledPopup: FC<Omit<DropdownPopupProps, 'isOpen' | 'onToggle'>> = ({ ...rest }) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return <DropdownPopup {...rest} isOpen={isOpen} onToggle={(is) => setIsOpen(is)} />;\n};\n"],"file":"DropdownPopup.js"}