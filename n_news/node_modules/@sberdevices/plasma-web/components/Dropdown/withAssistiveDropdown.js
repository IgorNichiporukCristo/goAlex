"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withAssistiveDropdown = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _DropdownUncontrolled = /*#__PURE__*/require("./DropdownUncontrolled");

var _keyboardNavigation = /*#__PURE__*/require("./keyboardNavigation");

var _excluded = ["id", "items", "placement", "trigger", "disabled", "menuRole", "menuItemRole", "closeOnSelect", "onToggle", "onItemSelect", "onIndexChange"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Декорирует переданный компонент, выводя доступный дропдаун.
 */
var withAssistiveDropdown = function withAssistiveDropdown(Component) {
  var Dropdown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DropdownUncontrolled.DropdownUncontrolled;
  return function (_ref) {
    var id = _ref.id,
        items = _ref.items,
        placement = _ref.placement,
        trigger = _ref.trigger,
        disabled = _ref.disabled,
        menuRole = _ref.menuRole,
        menuItemRole = _ref.menuItemRole,
        _ref$closeOnSelect = _ref.closeOnSelect,
        closeOnSelect = _ref$closeOnSelect === void 0 ? true : _ref$closeOnSelect,
        onToggleExternal = _ref.onToggle,
        onItemSelectExternal = _ref.onItemSelect,
        onIndexChangeExternal = _ref.onIndexChange,
        rest = _objectWithoutProperties(_ref, _excluded);

    var _useState = (0, _react.useState)(false),
        _useState2 = _slicedToArray(_useState, 2),
        isOpen = _useState2[0],
        setIsOpen = _useState2[1];

    var _useState3 = (0, _react.useState)(_keyboardNavigation.INITIAL_INDEX),
        _useState4 = _slicedToArray(_useState3, 2),
        index = _useState4[0],
        setIndex = _useState4[1];

    var openingMethod = (0, _react.useRef)(null);
    var onToggle = (0, _react.useCallback)(function (newIsOpen, event) {
      if (newIsOpen) {
        openingMethod.current = event.type;
      }

      setIsOpen(newIsOpen);
      onToggleExternal === null || onToggleExternal === void 0 ? void 0 : onToggleExternal(newIsOpen, event);
    }, [onToggleExternal]);
    var onItemSelect = (0, _react.useCallback)(function (item, event) {
      if (closeOnSelect) {
        onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);
      }

      onItemSelectExternal === null || onItemSelectExternal === void 0 ? void 0 : onItemSelectExternal(item, event);
    }, [onToggle, onItemSelectExternal, closeOnSelect]);
    var onIndexChange = (0, _react.useCallback)(function (i) {
      setIndex(i);
      onIndexChangeExternal === null || onIndexChangeExternal === void 0 ? void 0 : onIndexChangeExternal(i);
    }, [onIndexChangeExternal]);
    var onBlur = (0, _react.useCallback)(function () {
      if (openingMethod.current === 'keydown') {
        setIsOpen(false);
        setIndex(_keyboardNavigation.INITIAL_INDEX);
      }
    }, []);

    var _useKeyboardNavigatio = (0, _keyboardNavigation.useKeyboardNavigation)({
      items: items,
      isOpen: isOpen,
      index: index,
      onToggle: onToggle,
      onItemSelect: onItemSelect,
      onIndexChange: onIndexChange
    }),
        onKeyDown = _useKeyboardNavigatio.onKeyDown;

    (0, _react.useEffect)(function () {
      if (!isOpen) {
        onIndexChange === null || onIndexChange === void 0 ? void 0 : onIndexChange(_keyboardNavigation.INITIAL_INDEX);
      }
    }, [isOpen, onIndexChange]);
    return /*#__PURE__*/_react["default"].createElement(Dropdown, {
      id: id,
      role: menuRole,
      itemRole: menuItemRole,
      "aria-labelledby": id ? "".concat(id, "-disclosure") : undefined,
      isOpen: isOpen,
      items: items,
      placement: placement,
      trigger: trigger,
      disabled: disabled,
      hoverIndex: index,
      onBlur: onBlur,
      onKeyDown: onKeyDown,
      onToggle: onToggle,
      onItemSelect: onItemSelect
    }, /*#__PURE__*/_react["default"].createElement(Component, _extends({}, rest, {
      id: id ? "".concat(id, "-disclosure") : undefined,
      isOpen: isOpen,
      disabled: disabled,
      "aria-activedescendant": id && index >= 0 ? "".concat(id, "-item-").concat(index) : undefined,
      "aria-controls": id,
      "aria-expanded": isOpen,
      "aria-haspopup": menuRole
    })));
  };
};

exports.withAssistiveDropdown = withAssistiveDropdown;
//# sourceMappingURL=withAssistiveDropdown.js.map