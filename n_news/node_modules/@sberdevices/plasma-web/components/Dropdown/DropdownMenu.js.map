{"version":3,"sources":["../../src/components/Dropdown/DropdownMenu.tsx"],"names":["DropdownMenu","id","items","hoverIndex","itemRole","onItemSelect","role","rest","map","item","i","length","value"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;;;;;AAuBA;AACA;AACA;AACO,IAAMA,YAAmC,GAAG,SAAtCA,YAAsC,OAQ7C;AAAA,MAPFC,EAOE,QAPFA,EAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,UAKE,QALFA,UAKE;AAAA,MAJFC,QAIE,QAJFA,QAIE;AAAA,MAHFC,YAGE,QAHFA,YAGE;AAAA,uBAFFC,IAEE;AAAA,MAFFA,IAEE,0BAFK,MAEL;AAAA,MADCC,IACD;;AACF,sBACI,gCAAC,0BAAD,eAAkBA,IAAlB;AAAwB,IAAA,EAAE,EAAEN,EAA5B;AAAgC,IAAA,IAAI,EAAEK;AAAtC,MACKJ,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,WACPD,IAAI,CAACP,KAAL,IAAcO,IAAI,CAACP,KAAL,CAAWS,MAAzB,gBACI,gCAAC,0CAAD;AACI,MAAA,IAAI,EAAC,cADT;AAEI,MAAA,GAAG,EAAEF,IAAI,CAACG,KAFd;AAGI,MAAA,EAAE,EAAEX,EAAE,aAAMA,EAAN,qBAAmBS,CAAnB,IAAyBT,EAHnC;AAII,MAAA,OAAO,EAAC,OAJZ;AAKI,MAAA,SAAS,EAAC,OALd;AAMI,MAAA,UAAU,eACN,gCAAC,0BAAD,eACQQ,IADR;AAEI,QAAA,EAAE,EAAER,EAAE,aAAMA,EAAN,mBAAiBS,CAAjB,IAAuBT,EAFjC;AAGI,QAAA,IAAI,EAAEG,QAHV;AAII,QAAA,SAAS,EAAEM,CAAC,KAAKP,UAJrB;AAKI,QAAA,OAAO,EAAEE;AALb;AAPR,oBAgBI,gCAAC,YAAD;AAAc,MAAA,KAAK,EAAEI,IAAI,CAACP,KAA1B;AAAiC,MAAA,YAAY,EAAEG;AAA/C,MAhBJ,CADJ,gBAoBI,gCAAC,0BAAD,eACQI,IADR;AAEI,MAAA,GAAG,EAAEA,IAAI,CAACG,KAFd;AAGI,MAAA,EAAE,EAAEX,EAAE,aAAMA,EAAN,mBAAiBS,CAAjB,IAAuBT,EAHjC;AAII,MAAA,IAAI,EAAEG,QAJV;AAKI,MAAA,SAAS,EAAEM,CAAC,KAAKP,UALrB;AAMI,MAAA,OAAO,EAAEE;AANb,OArBG;AAAA,GAAV,CADL,CADJ;AAmCH,CA5CM","sourcesContent":["import React, { HTMLAttributes, FC } from 'react';\n\nimport { DropdownSelfControlledPopup } from './DropdownPopup';\nimport { DropdownList } from './DropdownList';\nimport { DropdownItem } from './DropdownItem';\nimport type { DropdownNode, OnItemSelect } from './Dropdown.types';\n\nexport interface DropdownMenuProps extends HTMLAttributes<HTMLUListElement> {\n    /**\n     * Список элементов.\n     */\n    items: Array<DropdownNode>;\n    /**\n     * Индекс айтема, который нужно подсветить.\n     */\n    hoverIndex?: number;\n    /**\n     * WAI-ARIA role элемента меню.\n     */\n    itemRole?: string;\n    /**\n     * Обработчик выбора айтема.\n     */\n    onItemSelect?: OnItemSelect;\n    children?: never;\n}\n\n/**\n * Меню дропдауна, выводящее текущий список и все вложенные в него списки в попапах.\n */\nexport const DropdownMenu: FC<DropdownMenuProps> = ({\n    id,\n    items,\n    hoverIndex,\n    itemRole,\n    onItemSelect,\n    role = 'menu',\n    ...rest\n}) => {\n    return (\n        <DropdownList {...rest} id={id} role={role}>\n            {items.map((item, i) =>\n                item.items && item.items.length ? (\n                    <DropdownSelfControlledPopup\n                        role=\"presentation\"\n                        key={item.value}\n                        id={id ? `${id}-nested-${i}` : id}\n                        trigger=\"hover\"\n                        placement=\"right\"\n                        disclosure={\n                            <DropdownItem\n                                {...item}\n                                id={id ? `${id}-item-${i}` : id}\n                                role={itemRole}\n                                isHovered={i === hoverIndex}\n                                onClick={onItemSelect}\n                            />\n                        }\n                    >\n                        <DropdownMenu items={item.items} onItemSelect={onItemSelect} />\n                    </DropdownSelfControlledPopup>\n                ) : (\n                    <DropdownItem\n                        {...item}\n                        key={item.value}\n                        id={id ? `${id}-item-${i}` : id}\n                        role={itemRole}\n                        isHovered={i === hoverIndex}\n                        onClick={onItemSelect}\n                    />\n                ),\n            )}\n        </DropdownList>\n    );\n};\n"],"file":"DropdownMenu.js"}