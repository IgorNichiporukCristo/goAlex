{"version":3,"sources":["../../src/components/Dropdown/withAssistiveDropdown.tsx"],"names":["withAssistiveDropdown","Component","Dropdown","DropdownUncontrolled","id","items","placement","trigger","disabled","menuRole","menuItemRole","closeOnSelect","onToggleExternal","onToggle","onItemSelectExternal","onItemSelect","onIndexChangeExternal","onIndexChange","rest","isOpen","setIsOpen","INITIAL_INDEX","index","setIndex","openingMethod","newIsOpen","event","current","type","item","i","onBlur","onKeyDown","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport type { FC, ComponentType, ForwardRefExoticComponent } from 'react';\n\nimport { DropdownUncontrolled, DropdownUncontrolledProps } from './DropdownUncontrolled';\nimport { useKeyboardNavigation, INITIAL_INDEX } from './keyboardNavigation';\n\nexport interface WithAssistiveDropdownProps\n    extends Pick<\n        DropdownUncontrolledProps,\n        'id' | 'items' | 'placement' | 'trigger' | 'disabled' | 'onToggle' | 'onItemSelect'\n    > {\n    /**\n     * WAI-ARIA role меню в выпадающем списке.\n     */\n    menuRole?: string;\n    /**\n     * WAI-ARIA role элемента меню в выпадающем списке.\n     */\n    menuItemRole?: string;\n    /**\n     * Закрыть выпадающий список после выбора.\n     */\n    closeOnSelect?: boolean;\n    /**\n     * Обработчик изменения активного индекса элемента,\n     * на который встали клавиатурной навигацией и который нужно подсветить.\n     */\n    onIndexChange?: (index: number) => void;\n}\n\n/**\n * Декорирует переданный компонент, выводя доступный дропдаун.\n */\nexport const withAssistiveDropdown = <P extends object>(\n    Component: ComponentType<P> | ForwardRefExoticComponent<P>,\n    Dropdown: ComponentType<DropdownUncontrolledProps> = DropdownUncontrolled,\n): FC<P & WithAssistiveDropdownProps> => ({\n    id,\n    items,\n    placement,\n    trigger,\n    disabled,\n    menuRole,\n    menuItemRole,\n    closeOnSelect = true,\n    onToggle: onToggleExternal,\n    onItemSelect: onItemSelectExternal,\n    onIndexChange: onIndexChangeExternal,\n    ...rest\n}) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [index, setIndex] = useState(INITIAL_INDEX);\n    const openingMethod = useRef<string | null>(null);\n\n    const onToggle = useCallback(\n        (newIsOpen, event) => {\n            if (newIsOpen) {\n                openingMethod.current = event.type;\n            }\n            setIsOpen(newIsOpen);\n            onToggleExternal?.(newIsOpen, event);\n        },\n        [onToggleExternal],\n    );\n\n    const onItemSelect = useCallback(\n        (item, event) => {\n            if (closeOnSelect) {\n                onToggle?.(false, event);\n            }\n            onItemSelectExternal?.(item, event);\n        },\n        [onToggle, onItemSelectExternal, closeOnSelect],\n    );\n\n    const onIndexChange = useCallback(\n        (i) => {\n            setIndex(i);\n            onIndexChangeExternal?.(i);\n        },\n        [onIndexChangeExternal],\n    );\n\n    const onBlur = useCallback(() => {\n        if (openingMethod.current === 'keydown') {\n            setIsOpen(false);\n            setIndex(INITIAL_INDEX);\n        }\n    }, []);\n\n    const { onKeyDown } = useKeyboardNavigation({\n        items,\n        isOpen,\n        index,\n        onToggle,\n        onItemSelect,\n        onIndexChange,\n    });\n\n    useEffect(() => {\n        if (!isOpen) {\n            onIndexChange?.(INITIAL_INDEX);\n        }\n    }, [isOpen, onIndexChange]);\n\n    return (\n        <Dropdown\n            id={id}\n            role={menuRole}\n            itemRole={menuItemRole}\n            aria-labelledby={id ? `${id}-disclosure` : undefined}\n            isOpen={isOpen}\n            items={items}\n            placement={placement}\n            trigger={trigger}\n            disabled={disabled}\n            hoverIndex={index}\n            onBlur={onBlur}\n            onKeyDown={onKeyDown}\n            onToggle={onToggle}\n            onItemSelect={onItemSelect}\n        >\n            <Component\n                {...(rest as P)}\n                id={id ? `${id}-disclosure` : undefined}\n                isOpen={isOpen}\n                disabled={disabled}\n                aria-activedescendant={id && index >= 0 ? `${id}-item-${index}` : undefined}\n                aria-controls={id}\n                aria-expanded={isOpen}\n                aria-haspopup={menuRole}\n            />\n        </Dropdown>\n    );\n};\n"],"file":"withAssistiveDropdown.js"}