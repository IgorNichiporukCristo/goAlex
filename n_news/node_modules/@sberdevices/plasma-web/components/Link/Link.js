"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Link = void 0;

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _tokens = /*#__PURE__*/require("../../tokens");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var views = {
  primary: {
    "default": _tokens.link,
    hover: _tokens.linkHover,
    active: _tokens.linkActive,
    visited: _tokens.linkVisited,
    visitedHover: _tokens.linkVisitedHover,
    visitedActive: _tokens.linkVisitedActive
  }
};

var interactionCss = function interactionCss(color) {
  return (0, _styledComponents.css)(["color:", ";&::before{opacity:1;}"], color);
};
/**
 * Ссылка.
 */


var Link = /*#__PURE__*/_styledComponents["default"].a.withConfig({
  componentId: "plasma-web__sc-pd3jbt-0"
})(["position:relative;text-decoration:none;transition:color 0.15s ease-in;&::before{content:'';position:absolute;left:0;right:0;bottom:0;border-bottom:1px solid;opacity:0.4;transition:opacity 0.15s ease-in;}", ";"], function (_ref) {
  var _ref$view = _ref.view,
      view = _ref$view === void 0 ? 'primary' : _ref$view,
      $isHover = _ref.$isHover,
      $isPressed = _ref.$isPressed,
      $isVisited = _ref.$isVisited;
  return (0, _styledComponents.css)(["color:", ";&:hover{", "}&:active{", "}&:visited{color:", ";}&:visited:hover{", "}&:visited:active{", "}", " ", " ", " ", " ", ""], views[view]["default"], interactionCss(views[view].hover), interactionCss(views[view].active), views[view].visited, interactionCss(views[view].visitedHover), interactionCss(views[view].visitedActive), $isHover && interactionCss(views[view].hover), $isPressed && interactionCss(views[view].active), $isVisited && (0, _styledComponents.css)(["color:", ";"], views[view].visited), $isVisited && $isHover && interactionCss(views[view].visitedHover), $isVisited && $isPressed && interactionCss(views[view].visitedActive));
});

exports.Link = Link;
//# sourceMappingURL=Link.js.map