{"version":3,"sources":["../../src/components/TextField/TextField.tsx"],"names":["TextField","ref","id","size","disabled","status","label","animatedHint","contentLeft","contentRight","helperText","className","style","rest","undefined","Boolean"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;;;;;;;;;;;;;AAOA;AACA;AACA;AACA;AACO,IAAMA,SAAS,gBAAG,uBAA6C,SAASA,SAAT,OAelEC,GAfkE,EAgBpE;AAAA,MAdMC,EAcN,QAdMA,EAcN;AAAA,MAbMC,IAaN,QAbMA,IAaN;AAAA,MAZMC,QAYN,QAZMA,QAYN;AAAA,MAXMC,MAWN,QAXMA,MAWN;AAAA,MAVMC,KAUN,QAVMA,KAUN;AAAA,MATMC,YASN,QATMA,YASN;AAAA,MARMC,WAQN,QARMA,WAQN;AAAA,MAPMC,YAON,QAPMA,YAON;AAAA,MANMC,UAMN,QANMA,UAMN;AAAA,MALMC,SAKN,QALMA,SAKN;AAAA,MAJMC,KAIN,QAJMA,KAIN;AAAA,MAHSC,IAGT;;AACE,sBACI,gCAAC,YAAD;AACI,IAAA,EAAE,EAAEX,EADR;AAEI,IAAA,QAAQ,EAAEE,QAFd;AAGI,IAAA,KAAK,EAAEG,YAAY,KAAK,OAAjB,GAA2BD,KAA3B,GAAmCQ,SAH9C;AAII,IAAA,UAAU,EAAEJ,UAJhB;AAKI,IAAA,WAAW,EAAEF,WALjB;AAMI,IAAA,YAAY,EAAEC,YANlB;AAOI,IAAA,MAAM,EAAEJ,MAPZ;AAQI,IAAA,SAAS,EAAEM,SARf;AASI,IAAA,KAAK,EAAEC;AATX,kBAWI,gCAAC,YAAD,eACQC,IADR;AAEI,IAAA,GAAG,EAAEZ,GAFT;AAGI,IAAA,EAAE,EAAEC,EAHR;AAII,IAAA,QAAQ,EAAEE,QAJd;AAKI,IAAA,IAAI,EAAED,IALV;AAMI,IAAA,MAAM,EAAEE,MANZ;AAOI,IAAA,KAAK,EAAEC,KAPX;AAQI,IAAA,YAAY,EAAEC,YARlB;AASI,IAAA,cAAc,EAAEQ,OAAO,CAACP,WAAD,CAT3B;AAUI,IAAA,eAAe,EAAEO,OAAO,CAACN,YAAD,CAV5B;AAWI,uBAAiBP,EAAE,aAAMA,EAAN,cAAmBY,SAX1C;AAYI,wBAAkBZ,EAAE,aAAMA,EAAN,mBAAwBY;AAZhD,KAXJ,CADJ;AA4BH,CA7CwB,CAAlB","sourcesContent":["import React, { forwardRef } from 'react';\n\nimport { Field } from '../Field';\nimport type { FieldProps } from '../Field';\nimport { Input } from '../Input';\nimport type { InputProps } from '../Input';\n\nexport interface TextFieldProps\n    extends Pick<FieldProps, 'contentLeft' | 'contentRight' | 'helperText'>,\n        Omit<InputProps, 'hasContentLeft' | 'hasContentRight'> {}\n\n/**\n * Поле ввода текста.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport const TextField = forwardRef<HTMLInputElement, TextFieldProps>(function TextField(\n    {\n        id,\n        size,\n        disabled,\n        status,\n        label,\n        animatedHint,\n        contentLeft,\n        contentRight,\n        helperText,\n        className,\n        style,\n        ...rest\n    },\n    ref,\n) {\n    return (\n        <Field\n            id={id}\n            disabled={disabled}\n            label={animatedHint !== 'label' ? label : undefined}\n            helperText={helperText}\n            contentLeft={contentLeft}\n            contentRight={contentRight}\n            status={status}\n            className={className}\n            style={style}\n        >\n            <Input\n                {...rest}\n                ref={ref}\n                id={id}\n                disabled={disabled}\n                size={size}\n                status={status}\n                label={label}\n                animatedHint={animatedHint}\n                hasContentLeft={Boolean(contentLeft)}\n                hasContentRight={Boolean(contentRight)}\n                aria-labelledby={id ? `${id}-label` : undefined}\n                aria-describedby={id ? `${id}-helpertext` : undefined}\n            />\n        </Field>\n    );\n});\n"],"file":"TextField.js"}