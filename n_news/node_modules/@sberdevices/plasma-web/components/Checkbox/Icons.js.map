{"version":3,"sources":["../../src/components/Checkbox/Icons.tsx"],"names":["sizesRem","xs","s","sizesPx","DoneSvg","size","color","IndeterminateSvg","StyledRoot","styled","div","css","Done","className","Indeterminate"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,QAAQ,GAAG;AACbC,EAAAA,EAAE,EAAE,KADS;AACF;AACXC,EAAAA,CAAC,EAAE,IAFU,CAEJ;;AAFI,CAAjB;AAKA,IAAMC,OAAO,GAAG;AACZF,EAAAA,EAAE,EAAE,EADQ;AAEZC,EAAAA,CAAC,EAAE;AAFS,CAAhB;;AAUA,IAAME,OAA2B,GAAG,SAA9BA,OAA8B;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,sBAChC;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,OAAO,gBAASD,IAAT,cAAiBA,IAAjB,CAAzB;AAAkD,IAAA,IAAI,EAAC;AAAvD,kBACI;AACI,IAAA,IAAI,EAAEC,KADV;AAEI,IAAA,CAAC,EAAC;AAFN,IADJ,CADgC;AAAA,CAApC;;AAQA,IAAMC,gBAAoC,GAAG,SAAvCA,gBAAuC;AAAA,MAAGF,IAAH,SAAGA,IAAH;AAAA,MAASC,KAAT,SAASA,KAAT;AAAA,sBACzC;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,OAAO,gBAASD,IAAT,cAAiBA,IAAjB,CAAzB;AAAkD,IAAA,IAAI,EAAC;AAAvD,kBACI;AAAM,IAAA,aAAa,EAAC,OAApB;AAA4B,IAAA,WAAW,EAAC,GAAxC;AAA4C,IAAA,MAAM,EAAEC,KAApD;AAA2D,IAAA,CAAC,EAAC;AAA7D,IADJ,CADyC;AAAA,CAA7C;;AAMA,IAAME,UAAU,gBAAGC,6BAAOC,GAAV;AAAA;AAAA,iCAGV;AAAA,MAAGL,IAAH,SAAGA,IAAH;AAAA,aAAcM,qBAAd,+BACWN,IADX,EAEYA,IAFZ;AAAA,CAHU,CAAhB;;AAeO,IAAMO,IAAyB,GAAG,SAA5BA,IAA4B,QAAwD;AAAA,yBAArDP,IAAqD;AAAA,MAArDA,IAAqD,2BAA9C,IAA8C;AAAA,0BAAxCC,KAAwC;AAAA,MAAxCA,KAAwC,4BAAhC,cAAgC;AAAA,MAAhBO,SAAgB,SAAhBA,SAAgB;AAC7F,sBACI,gCAAC,UAAD;AAAY,IAAA,IAAI,YAAKb,QAAQ,CAACK,IAAD,CAAb,QAAhB;AAA0C,IAAA,SAAS,EAAEQ;AAArD,kBACI,gCAAC,OAAD;AAAS,IAAA,KAAK,EAAEP,KAAhB;AAAuB,IAAA,IAAI,EAAEH,OAAO,CAACE,IAAD;AAApC,IADJ,CADJ;AAKH,CANM;;;;AAQA,IAAMS,aAAkC,GAAG,SAArCA,aAAqC,QAAwD;AAAA,yBAArDT,IAAqD;AAAA,MAArDA,IAAqD,2BAA9C,IAA8C;AAAA,0BAAxCC,KAAwC;AAAA,MAAxCA,KAAwC,4BAAhC,cAAgC;AAAA,MAAhBO,SAAgB,SAAhBA,SAAgB;AACtG,sBACI,gCAAC,UAAD;AAAY,IAAA,IAAI,YAAKb,QAAQ,CAACK,IAAD,CAAb,QAAhB;AAA0C,IAAA,SAAS,EAAEQ;AAArD,kBACI,gCAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEP,KAAzB;AAAgC,IAAA,IAAI,EAAEH,OAAO,CAACE,IAAD;AAA7C,IADJ,CADJ;AAKH,CANM","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst sizesRem = {\n    xs: 1.125, // 18px\n    s: 1.25, // 20px\n};\n\nconst sizesPx = {\n    xs: 18,\n    s: 24,\n};\n\ninterface SvgProps {\n    size?: string | number;\n    color?: string;\n}\n\nconst DoneSvg: React.FC<SvgProps> = ({ size, color }) => (\n    <svg width=\"100%\" viewBox={`0 0 ${size} ${size}`} fill=\"none\">\n        <path\n            fill={color}\n            d=\"m5.70711,8.15582c-0.39053,-0.39052 -1.02369,-0.39052 -1.41422,0c-0.39052,0.39053 -0.39052,1.02369 0,1.41422l3.70666,3.70666l6.71095,-6.70248c0.3908,-0.39027 0.3912,-1.02344 0.0009,-1.41421c-0.3903,-0.39077 -1.02344,-0.39117 -1.41421,-0.00089l-5.29674,5.29004l-2.29334,-2.29334z\"\n        />\n    </svg>\n);\nconst IndeterminateSvg: React.FC<SvgProps> = ({ size, color }) => (\n    <svg width=\"100%\" viewBox={`0 0 ${size} ${size}`} fill=\"none\">\n        <path strokeLinecap=\"round\" strokeWidth=\"2\" stroke={color} d=\"m5.09449,9.0315l8,0\" />\n    </svg>\n);\n\nconst StyledRoot = styled.div<{ size: string }>`\n    display: inline-flex;\n\n    ${({ size }) => css`\n        width: ${size};\n        height: ${size};\n    `}\n`;\n\ninterface IconProps {\n    size?: keyof typeof sizesRem;\n    color?: string;\n    className?: string;\n}\n\nexport const Done: React.FC<IconProps> = ({ size = 'xs', color = 'currentColor', className }) => {\n    return (\n        <StyledRoot size={`${sizesRem[size]}rem`} className={className}>\n            <DoneSvg color={color} size={sizesPx[size]} />\n        </StyledRoot>\n    );\n};\n\nexport const Indeterminate: React.FC<IconProps> = ({ size = 'xs', color = 'currentColor', className }) => {\n    return (\n        <StyledRoot size={`${sizesRem[size]}rem`} className={className}>\n            <IndeterminateSvg color={color} size={sizesPx[size]} />\n        </StyledRoot>\n    );\n};\n"],"file":"Icons.js"}