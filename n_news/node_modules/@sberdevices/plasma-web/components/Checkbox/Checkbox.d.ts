import React from 'react';
import { FlattenSimpleInterpolation } from 'styled-components';
import type { BaseboxProps } from '@sberdevices/plasma-core';
export interface CheckboxProps extends BaseboxProps {
    /**
     * Неопределенное состояние компонента - когда часть потомков не выбрана.
     */
    indeterminate?: boolean;
}
export declare const syntheticFocus: (ruleset: FlattenSimpleInterpolation, focused?: boolean | undefined) => FlattenSimpleInterpolation;
export declare const StyledRoot: import("styled-components").StyledComponent<"div", any, {
    $disabled?: boolean | undefined;
}, never>;
export declare const StyledInput: import("styled-components").StyledComponent<"input", any, {}, never>;
export declare const StyledTrigger: import("styled-components").StyledComponent<"div", any, {
    outlineRadius?: string | undefined;
}, never>;
export declare const StyledContent: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledLabel: import("styled-components").StyledComponent<"div", any, import("@sberdevices/plasma-core").SpacingProps & import("@sberdevices/plasma-core").BreakWordProps, never>;
export declare const StyledDescription: import("styled-components").StyledComponent<"div", any, import("@sberdevices/plasma-core").SpacingProps & import("@sberdevices/plasma-core").BreakWordProps, never>;
/**
 * Флажок или *чекбокс*. Позволяет пользователю управлять параметром с двумя состояниями — ☑ включено и ☐ отключено.
 */
export declare const Checkbox: React.ForwardRefExoticComponent<CheckboxProps & React.RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=Checkbox.d.ts.map