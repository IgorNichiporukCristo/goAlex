{"version":3,"sources":["../../src/components/Button/Button.props.ts"],"names":["buttonViews","primary","css","baseViews","buttonPrimaryHover","color","buttonPrimaryActive","success","buttonSuccessHover","buttonSuccessActive","warning","buttonWarningHover","buttonWarningActive","critical","buttonCriticalHover","buttonCriticalActive","secondary","buttonSecondaryHover","buttonSecondaryActive","checked","buttonCheckedHover","buttonCheckedHoverColor","buttonCheckedActive","buttonCheckedActiveColor","overlay","clear"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAiBA;AACA;AACA;AACO,IAAMA,WAAW,GAAG;AACvBC,EAAAA,OAAO,mBAAEC,qBAAF,kGACDC,wBAAUF,OADT,EAIqBG,0BAJrB,EAKUD,wBAAUF,OAAV,CAAkBI,KAL5B,EASqBC,2BATrB,EAUUH,wBAAUF,OAAV,CAAkBI,KAV5B,CADgB;AAcvBE,EAAAA,OAAO,mBAAEL,qBAAF,kGACDC,wBAAUI,OADT,EAIqBC,0BAJrB,EAKUL,wBAAUI,OAAV,CAAkBF,KAL5B,EASqBI,2BATrB,EAUUN,wBAAUI,OAAV,CAAkBF,KAV5B,CAdgB;AA2BvBK,EAAAA,OAAO,mBAAER,qBAAF,kGACDC,wBAAUO,OADT,EAIqBC,0BAJrB,EAKUR,wBAAUO,OAAV,CAAkBL,KAL5B,EASqBO,2BATrB,EAUUT,wBAAUO,OAAV,CAAkBL,KAV5B,CA3BgB;AAwCvBQ,EAAAA,QAAQ,mBAAEX,qBAAF,kGACFC,wBAAUU,QADR,EAIoBC,2BAJpB,EAKSX,wBAAUU,QAAV,CAAmBR,KAL5B,EASoBU,4BATpB,EAUSZ,wBAAUU,QAAV,CAAmBR,KAV5B,CAxCe;AAqDvBW,EAAAA,SAAS,mBAAEd,qBAAF,kGACHC,wBAAUa,SADP,EAImBC,4BAJnB,EAKQd,wBAAUa,SAAV,CAAoBX,KAL5B,EASmBa,6BATnB,EAUQf,wBAAUa,SAAV,CAAoBX,KAV5B,CArDc;AAkEvBc,EAAAA,OAAO,mBAAEjB,qBAAF,kGACDC,wBAAUgB,OADT,EAIqBC,0BAJrB,EAKUC,+BALV,EASqBC,2BATrB,EAUUC,gCAVV,CAlEgB;AA+EvBC,EAAAA,OAAO,EAAErB,wBAAUqB,OA/EI;AAgFvBC,EAAAA,KAAK,EAAEtB,wBAAUsB;AAhFM,CAApB;AAmFP;AACA;AACA","sourcesContent":["import { css } from 'styled-components';\nimport { buttonViews as baseViews } from '@sberdevices/plasma-core';\n\nimport {\n    buttonPrimaryHover,\n    buttonPrimaryActive,\n    buttonSecondaryHover,\n    buttonSecondaryActive,\n    buttonSuccessHover,\n    buttonSuccessActive,\n    buttonWarningHover,\n    buttonWarningActive,\n    buttonCriticalHover,\n    buttonCriticalActive,\n    buttonCheckedHover,\n    buttonCheckedHoverColor,\n    buttonCheckedActive,\n    buttonCheckedActiveColor,\n} from '../../tokens';\n\n/**\n * Views (colors) for both B2B and B2C\n */\nexport const buttonViews = {\n    primary: css`\n        ${baseViews.primary}\n\n        &:hover {\n            background-color: ${buttonPrimaryHover};\n            color: ${baseViews.primary.color};\n        }\n\n        &:active {\n            background-color: ${buttonPrimaryActive};\n            color: ${baseViews.primary.color};\n        }\n    `,\n    success: css`\n        ${baseViews.success}\n\n        &:hover {\n            background-color: ${buttonSuccessHover};\n            color: ${baseViews.success.color};\n        }\n\n        &:active {\n            background-color: ${buttonSuccessActive};\n            color: ${baseViews.success.color};\n        }\n    `,\n    warning: css`\n        ${baseViews.warning}\n\n        &:hover {\n            background-color: ${buttonWarningHover};\n            color: ${baseViews.warning.color};\n        }\n\n        &:active {\n            background-color: ${buttonWarningActive};\n            color: ${baseViews.warning.color};\n        }\n    `,\n    critical: css`\n        ${baseViews.critical}\n\n        &:hover {\n            background-color: ${buttonCriticalHover};\n            color: ${baseViews.critical.color};\n        }\n\n        &:active {\n            background-color: ${buttonCriticalActive};\n            color: ${baseViews.critical.color};\n        }\n    `,\n    secondary: css`\n        ${baseViews.secondary}\n\n        &:hover {\n            background-color: ${buttonSecondaryHover};\n            color: ${baseViews.secondary.color};\n        }\n\n        &:active {\n            background-color: ${buttonSecondaryActive};\n            color: ${baseViews.secondary.color};\n        }\n    `,\n    checked: css`\n        ${baseViews.checked}\n\n        &:hover {\n            background-color: ${buttonCheckedHover};\n            color: ${buttonCheckedHoverColor};\n        }\n\n        &:active {\n            background-color: ${buttonCheckedActive};\n            color: ${buttonCheckedActiveColor};\n        }\n    `,\n    overlay: baseViews.overlay,\n    clear: baseViews.clear,\n};\n\n/**\n * @private\n */\nexport type ButtonView = keyof typeof buttonViews;\n"],"file":"Button.props.js"}