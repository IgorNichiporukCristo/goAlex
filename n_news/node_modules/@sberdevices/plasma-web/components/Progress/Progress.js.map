{"version":3,"sources":["../../src/components/Progress/Progress.tsx"],"names":["statuses","success","css","warning","error","StyledRoot","styled","div","StyledTrack","surfaceLiquid02","StyledProgress","value","status","StyledValue","span","caption","tertiary","Progress","displayValue","min","max","normalizedValue","Math"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,QAAQ,GAAG;AACbC,EAAAA,OAAO,mBAAEC,qBAAF,gCADM;AAIbC,EAAAA,OAAO,mBAAED,qBAAF,gCAJM;AAObE,EAAAA,KAAK,mBAAEF,qBAAF;AAPQ,CAAjB;;AA2BA,IAAMG,UAAU,gBAAGC,6BAAOC,GAAV;AAAA;AAAA,wCAAhB;;AAIA,IAAMC,WAAW,gBAAGF,6BAAOC,GAAV;AAAA;AAAA,gFAIOE,2BAJP,CAAjB;;AAOA,IAAMC,cAAc,gBAAGJ,6BAAOC,GAAV;AAAA;AAAA,6DACP;AAAA,MAAGI,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CADO,EAId;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SAAgBA,MAAM,IAAIZ,QAAQ,CAACY,MAAD,CAAlC;AAAA,CAJc,CAApB;;AAQA,IAAMC,WAAW,gBAAGP,6BAAOQ,IAAV;AAAA;AAAA,4CACXC,mBADW,EAKJC,oBALI,CAAjB;AAQA;AACA;AACA;;;AACO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,QAA4C;AAAA,MAAzCN,KAAyC,SAAzCA,KAAyC;AAAA,MAAlCC,MAAkC,SAAlCA,MAAkC;AAAA,iCAA1BM,YAA0B;AAAA,MAA1BA,YAA0B,mCAAX,IAAW;AACzF,MAAMC,GAAG,GAAG,CAAZ;AACA,MAAMC,GAAG,GAAG,GAAZ;AACA,MAAMC,eAAe,GAAGC,IAAI,CAACF,GAAL,CAASE,IAAI,CAACH,GAAL,CAASR,KAAT,EAAgBS,GAAhB,CAAT,EAA+BD,GAA/B,CAAxB;AAEA,sBACI,gCAAC,UAAD,qBACI,gCAAC,WAAD,qBACI,gCAAC,cAAD;AAAgB,IAAA,KAAK,EAAEE,eAAvB;AAAwC,IAAA,MAAM,EAAET;AAAhD,IADJ,CADJ,EAIKM,YAAY,iBAAI,gCAAC,WAAD,QAAcG,eAAd,MAJrB,CADJ;AAQH,CAbM","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { caption, tertiary, surfaceLiquid02 } from '@sberdevices/plasma-core';\n\nconst statuses = {\n    success: css`\n        background-color: #09a552;\n    `,\n    warning: css`\n        background-color: #ee6820;\n    `,\n    error: css`\n        background-color: #df2638;\n    `,\n};\n\nexport interface ProgressProps {\n    /**\n     * Значение прогресса в процентах.\n     */\n    value: number;\n    /**\n     * Статус прогресса.\n     */\n    status?: keyof typeof statuses;\n    /**\n     * Отображать числовое значение прогресса.\n     */\n    displayValue?: boolean;\n}\n\nconst StyledRoot = styled.div`\n    display: flex;\n    align-items: center;\n`;\nconst StyledTrack = styled.div`\n    width: 100%;\n    height: 0.25rem;\n\n    background-color: ${surfaceLiquid02};\n    border-radius: 0.125rem;\n`;\nconst StyledProgress = styled.div<Pick<ProgressProps, 'value' | 'status'>>`\n    width: ${({ value }) => value}%;\n    height: 100%;\n\n    ${({ status }) => status && statuses[status]}\n\n    border-radius: 0.125rem;\n`;\nconst StyledValue = styled.span`\n    ${caption};\n\n    margin-left: 0.5rem;\n\n    color: ${tertiary};\n`;\n\n/**\n * Компонент для отображения прогресса в процентах.\n */\nexport const Progress: React.FC<ProgressProps> = ({ value, status, displayValue = true }) => {\n    const min = 0;\n    const max = 100;\n    const normalizedValue = Math.max(Math.min(value, max), min);\n\n    return (\n        <StyledRoot>\n            <StyledTrack>\n                <StyledProgress value={normalizedValue} status={status} />\n            </StyledTrack>\n            {displayValue && <StyledValue>{normalizedValue}%</StyledValue>}\n        </StyledRoot>\n    );\n};\n"],"file":"Progress.js"}