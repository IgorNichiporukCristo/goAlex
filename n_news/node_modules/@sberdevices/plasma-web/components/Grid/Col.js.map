{"version":3,"sources":["../../src/components/Grid/Col.tsx"],"names":["sizes","XXL","baseSizes","offsets","baseOffsets","deviceScale","Col","BaseCol","size","offset","props","gridSizes","map","breakpoint","bpSize","bpOffset","colSize","colOffset","css","gridColumns"],"mappings":";;;;;;;;;AAAA;;AACA;;AAQA;;;;;;;;;;;;;;;;;;AAoBO,IAAMA,KAA6C;AACtDC,EAAAA,GAAG,EAAE;AADiD,GAEnDC,iBAFmD,CAAnD;;;;AAKA,IAAMC,OAAiD;AAC1DF,EAAAA,GAAG,EAAE;AADqD,GAEvDG,mBAFuD,CAAvD;;;AAOP,IAAMC,WAAW,GAAG,CAApB;AAEA;AACA;AACA;;AACO,IAAMC,GAAG,gBAAG,kCAAOC,eAAP,CAAH;AAAA;AAAA,aACV;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,MAAT,QAASA,MAAT;AAAA,MAAoBC,KAApB;;AAAA,SACEC,iBAAUC,GAAV,CAAc,UAACC,UAAD,EAAgB;AAC1B,QAAMC,MAAM,GAAGd,KAAK,CAACa,UAAD,CAApB;AACA,QAAME,QAAQ,GAAGZ,OAAO,CAACU,UAAD,CAAxB;AACA,QAAMG,OAAO,GAAGN,KAAK,CAACI,MAAD,CAAL,IAAiBN,IAAjC;AACA,QAAMS,SAAS,GAAGP,KAAK,CAACK,QAAD,CAAL,IAAmBN,MAArC;AAEA,WAAO,uBACHI,UADG,EAEHR,WAFG,MAGLa,qBAHK,iBAIDF,OAAO,qBAAe,MAAMG,mBAAYN,UAAZ,CAAP,GAAkCG,OAAhD,OAJN,EAKDC,SAAS,2BAAqB,MAAME,mBAAYN,UAAZ,CAAP,GAAkCI,SAAtD,OALR,EAAP;AAOH,GAbD,CADF;AAAA,CADU,CAAT","sourcesContent":["import styled, { css } from 'styled-components';\nimport { Col as BaseCol, sizes as baseSizes, offsets as baseOffsets } from '@sberdevices/plasma-core';\nimport type {\n    ColProps as BaseProps,\n    ColSizeProps as BaseSizeProps,\n    ColOffsetProps as BaseOffsetProps,\n    ColCount as BaseColCount,\n} from '@sberdevices/plasma-core';\n\nimport { gridColumns, gridSizes, mediaQuery, Breakpoint } from '../../utils';\n\ntype ColCountExtInt = 13 | 14 | 15 | 16;\ntype ColCountExtFlt = 12.5 | 13.5 | 14.5 | 15.5;\nexport type ColCount = BaseColCount | ColCountExtInt | ColCountExtFlt;\n\nexport interface ColSizeProps extends BaseSizeProps {\n    /**\n     * Размер ячейки при разрешении XXL\n     */\n    sizeXXL?: ColCount;\n}\n\nexport interface ColOffsetProps extends BaseOffsetProps {\n    /**\n     * Отступ ячейки при разрешении XXL\n     */\n    offsetXXL?: ColCount;\n}\n\nexport const sizes: Record<Breakpoint, keyof ColSizeProps> = {\n    XXL: 'sizeXXL',\n    ...baseSizes,\n};\n\nexport const offsets: Record<Breakpoint, keyof ColOffsetProps> = {\n    XXL: 'offsetXXL',\n    ...baseOffsets,\n};\n\nexport interface ColProps extends ColSizeProps, ColOffsetProps, BaseProps {}\n\nconst deviceScale = 1;\n\n/**\n * Блок для размещения контента или строк (``Row``) внутри себя.\n */\nexport const Col = styled(BaseCol)<ColProps>`\n    ${({ size, offset, ...props }) =>\n        gridSizes.map((breakpoint) => {\n            const bpSize = sizes[breakpoint];\n            const bpOffset = offsets[breakpoint];\n            const colSize = props[bpSize] || size;\n            const colOffset = props[bpOffset] || offset;\n\n            return mediaQuery(\n                breakpoint,\n                deviceScale,\n            )(css`\n                ${colSize && `width: ${(100 / gridColumns[breakpoint]) * colSize}%;`}\n                ${colOffset && `margin-left: ${(100 / gridColumns[breakpoint]) * colOffset}%;`}\n            `);\n        })}\n`;\n"],"file":"Col.js"}