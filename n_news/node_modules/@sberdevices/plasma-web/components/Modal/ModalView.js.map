{"version":3,"sources":["../../src/components/Modal/ModalView.tsx"],"names":["StyledBody","styled","div","backgroundPrimary","StyledContent","StyledButtonClose","Button","attrs","view","ModalView","React","forwardRef","ref","role","closeButtonAriaLabel","children","onClose","rest"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAiBA,IAAMA,UAAU,gBAAGC,6BAAOC,GAAV;AAAA;AAAA,kGAOQC,6BAPR,CAAhB;;AASA,IAAMC,aAAa,gBAAGH,6BAAOC,GAAV;AAAA;AAAA,qBAAnB;;AAGA,IAAMG,iBAAiB,gBAAG,kCAAOC,cAAP,EAAeC,KAAf,CAAqB;AAAA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AAAA,CAArB,CAAH;AAAA;AAAA,qFAAvB;AAUA;AACA;AACA;;AACO,IAAMC,SAAS,gBAAGC,kBAAMC,UAAN,CACrB,gBAAwEC,GAAxE,EAAgF;AAAA,uBAA7EC,IAA6E;AAAA,MAA7EA,IAA6E,0BAAtE,QAAsE;AAAA,MAA5DC,oBAA4D,QAA5DA,oBAA4D;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAhBC,IAAgB;;AAC5E,sBACI,gCAAC,0BAAD;AAAW,IAAA,WAAW;AAAtB,kBACI,gCAAC,UAAD,eAAgBA,IAAhB;AAAsB,IAAA,GAAG,EAAEL,GAA3B;AAAgC,IAAA,IAAI,EAAEC,IAAtC;AAA4C,kBAAW;AAAvD,mBACI,gCAAC,aAAD,QAAgBE,QAAhB,CADJ,eAEI,gCAAC,iBAAD;AACI,kBAAYD,oBADhB;AAEI,IAAA,OAAO,EAAEE,OAFb;AAGI,IAAA,WAAW,eAAE,gCAAC,sBAAD;AAAW,MAAA,IAAI,EAAC,GAAhB;AAAoB,MAAA,KAAK,EAAC;AAA1B;AAHjB,IAFJ,CADJ,CADJ;AAYH,CAdoB,CAAlB","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport FocusLock from 'react-focus-lock';\nimport { backgroundPrimary } from '@sberdevices/plasma-core';\nimport { IconClose } from '@sberdevices/plasma-icons';\n\nimport { Button } from '../Button';\n\nexport interface ModalViewProps extends React.HTMLAttributes<HTMLDivElement> {\n    /**\n     * Содержимое модального окна.\n     */\n    children?: React.ReactNode;\n    /**\n     * Обработчик клика по кнопке \"закрыть\".\n     */\n    onClose?: () => void;\n    /**\n     * WAI-ARIA атрибут кнопки \"закрыть\".\n     */\n    closeButtonAriaLabel?: string;\n}\n\nconst StyledBody = styled.div`\n    position: relative;\n\n    width: 25rem;\n    max-width: 100%;\n\n    border-radius: 1.25rem;\n    background-color: ${backgroundPrimary};\n`;\nconst StyledContent = styled.div`\n    padding: 2rem;\n`;\nconst StyledButtonClose = styled(Button).attrs(() => ({ view: 'clear' }))`\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 2rem;\n    width: auto;\n    height: auto;\n    padding: 0;\n`;\n\n/**\n * Визуальная часть модального окна.\n */\nexport const ModalView = React.forwardRef<HTMLDivElement, ModalViewProps>(\n    ({ role = 'dialog', closeButtonAriaLabel, children, onClose, ...rest }, ref) => {\n        return (\n            <FocusLock returnFocus>\n                <StyledBody {...rest} ref={ref} role={role} aria-modal=\"true\">\n                    <StyledContent>{children}</StyledContent>\n                    <StyledButtonClose\n                        aria-label={closeButtonAriaLabel}\n                        onClick={onClose}\n                        contentLeft={<IconClose size=\"s\" color=\"inherit\" />}\n                    />\n                </StyledBody>\n            </FocusLock>\n        );\n    },\n);\n"],"file":"ModalView.js"}