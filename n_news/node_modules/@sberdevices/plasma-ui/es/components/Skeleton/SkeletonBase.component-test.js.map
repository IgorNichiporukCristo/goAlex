{"version":3,"sources":["../../../src/components/Skeleton/SkeletonBase.component-test.tsx"],"names":["React","mount","CypressTestDecorator","getComponent","PadMe","SpaceMe","withNoAnimation","typography","radiuses","textSizes","Object","keys","roundnessKeys","map","r","Number","describe","LineSkeleton","Line","it","cy","matchImageSnapshot","size","roundness","RectSkeleton","Rect","TextSkeleton","Text","withSkeleton","Button","Btn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {\n    mount,\n    CypressTestDecorator,\n    getComponent,\n    PadMe,\n    SpaceMe,\n    withNoAnimation,\n} from '@sberdevices/plasma-cy-utils';\nimport { typography } from '@sberdevices/plasma-tokens';\n\nimport { radiuses } from '../..';\n\nconst textSizes = Object.keys(typography);\nconst roundnessKeys = Object.keys(radiuses).map((r) => Number(r));\n\ndescribe('plasma-core: Skeleton', () => {\n    describe('LineSkeleton', () => {\n        const LineSkeleton = getComponent('LineSkeleton');\n        const Line = withNoAnimation(LineSkeleton);\n\n        it('simple', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Line />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it('_size', () => {\n            mount(\n                <CypressTestDecorator>\n                    {textSizes.map((size) => (\n                        <Line key={size} size={size} />\n                    ))}\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it('_roundness', () => {\n            mount(\n                <CypressTestDecorator>\n                    {roundnessKeys.map((roundness) => (\n                        <Line key={roundness} roundness={roundness} />\n                    ))}\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n    });\n\n    describe('RectSkeleton', () => {\n        const RectSkeleton = getComponent('RectSkeleton');\n        const Rect = withNoAnimation(RectSkeleton);\n\n        it('simple', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Rect width=\"12rem\" height=\"8rem\" />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it('_size', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Rect width=\"12rem\" height=\"8rem\" />\n                    <SpaceMe />\n                    <Rect width={128} height={128} />\n                    <SpaceMe />\n                    <Rect height=\"8rem\" />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it('_roundness', () => {\n            mount(\n                <CypressTestDecorator>\n                    {roundnessKeys.map((roundness) => (\n                        <>\n                            <Rect key={roundness} width=\"12rem\" height=\"2rem\" roundness={roundness} />\n                            <PadMe key={roundness} />\n                        </>\n                    ))}\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n    });\n\n    describe('TextSkeleton', () => {\n        const TextSkeleton = getComponent('TextSkeleton');\n        const Text = withNoAnimation(TextSkeleton);\n\n        it('simple', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Text />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it('__lines', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Text lines={0} />\n                    <Text lines={1} />\n                    <Text lines={2} />\n                    <Text lines={3} />\n                    <Text lines={4} />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n        it('__lines:20', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Text lines={20} />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it('_size', () => {\n            mount(\n                <CypressTestDecorator>\n                    {textSizes.map((size) => (\n                        <Text key={size} size={size} />\n                    ))}\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it('_roundness', () => {\n            mount(\n                <CypressTestDecorator>\n                    {roundnessKeys.map((roundness) => (\n                        <>\n                            <Text key={roundness} roundness={roundness} />\n                            <PadMe key={roundness} />\n                        </>\n                    ))}\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n\n        it(':width', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Text lines={3} width={50} />\n                    <Text lines={3} width=\"2rem\" />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n    });\n\n    describe('withSkeleton', () => {\n        const withSkeleton = getComponent('withSkeleton');\n        const Button = getComponent('Button');\n        const Btn = withNoAnimation(withSkeleton(Button));\n\n        it('simple', () => {\n            mount(\n                <CypressTestDecorator>\n                    <Btn view=\"primary\" text=\"Loading\" skeleton />\n                    <PadMe />\n                    <Btn view=\"primary\" text=\"Done\" />\n                </CypressTestDecorator>,\n            );\n            cy.matchImageSnapshot();\n        });\n    });\n});\n"],"file":"SkeletonBase.component-test.js"}