{"version":3,"sources":["../../../src/components/Pickers/Picker.tsx"],"names":["React","useMemo","useState","useRef","useCallback","useEffect","useContext","styled","css","ThemeContext","primary","IconChevronUp","IconChevronDown","applyDisabled","useIsomorphicLayoutEffect","useRemoteListener","Button","Carousel","PickerItem","StyledPickerItem","StyledWhiteText","DEFAULT_PICKER_SIZE","DEFAULT_VISIBLE_ITEMS","scaleCallbacks","scaleResetCallback","usePreviousValue","useFirstRender","sizes","l","height","padding","s","xs","masks","StyledArrow","StyledCarousel","$isFocused","StyledWrapper","div","$size","$visibleItems","$disabled","$controls","INDEX_STOP_BUFFER","getAllIndices","items","value","res","forEach","item","i","push","findItemIndex","infiniteScroll","middleIndex","findIndex","getIndex","index","cmd","min","max","getItems","virtualItems","map","isVirtual","isTopPosition","isBottomPosition","itemsLength","Picker","id","size","controls","autofocus","disabled","visibleItems","scrollSnapType","onChange","ariaLabel","rest","theme","lowPerformance","length","isFirstRender","isFocused","setIsFocused","setIndex","hasScrollAnim","setScrollAnim","wrapperRef","carouselRef","toPrev","toNext","jump","firstRealItemsIndex","lastRealItemsIndex","newIndex","prevValue","onFocus","onBlur","key","event","preventDefault","onIndexChange","onDetectActiveItem"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useRef, useCallback, useEffect, useContext } from 'react';\nimport type { FC, HTMLAttributes } from 'react';\nimport styled, { css, ThemeContext } from 'styled-components';\nimport { primary } from '@sberdevices/plasma-tokens';\nimport { IconChevronUp, IconChevronDown } from '@sberdevices/plasma-icons';\nimport { applyDisabled, DisabledProps, useIsomorphicLayoutEffect } from '@sberdevices/plasma-core';\n\nimport { useRemoteListener } from '../../hooks';\nimport { Button } from '../Button';\nimport { Carousel, CarouselProps } from '../Carousel';\n\nimport { PickerItem, StyledPickerItem, StyledWhiteText } from './PickerItem';\nimport { DEFAULT_PICKER_SIZE, DEFAULT_VISIBLE_ITEMS } from './types';\nimport type { PickerItem as PickerItemType, SizeProps, PickerSize, PickerVisibleItems } from './types';\nimport { scaleCallbacks, scaleResetCallback, usePreviousValue } from './utils';\nimport { useFirstRender } from './hooks';\n\ninterface PickerStyle {\n    /**\n     * Высота контрола.\n     */\n    height: string;\n    /**\n     * Оверскролл сверху и снизу {(h - 1.5) / 2}.\n     */\n    padding: string;\n}\n\nconst sizes: Record<PickerSize, Record<PickerVisibleItems, PickerStyle>> = {\n    l: {\n        3: {\n            height: '14rem',\n            padding: '6.25rem',\n        },\n        5: {\n            height: '14rem',\n            padding: '6.25rem',\n        },\n    },\n    s: {\n        3: {\n            height: '8.5rem',\n            padding: '3.5rem',\n        },\n        5: {\n            height: '12rem',\n            padding: '5.25rem',\n        },\n    },\n    xs: {\n        3: {\n            height: '7.5rem',\n            padding: '2.85rem',\n        },\n        5: {\n            height: '10.75rem',\n            padding: '4.625rem',\n        },\n    },\n};\nconst masks = {\n    l: {\n        3: 'linear-gradient(rgba(0, 0, 0, 0) 0, rgb(0, 0, 0) 4.5rem, rgb(0, 0, 0) 9.5rem, rgba(0, 0, 0, 0) 14rem)',\n        5: 'linear-gradient(rgba(0, 0, 0, 0) 0, rgb(0, 0, 0) 4.5rem, rgb(0, 0, 0) 9.5rem, rgba(0, 0, 0, 0) 14rem)',\n    },\n    s: {\n        3: 'linear-gradient(rgba(0, 0, 0, 0) 0.875rem, rgb(0, 0, 0) 3.125rem, rgb(0, 0, 0) 5.375rem, rgba(0, 0, 0, 0) 7.625rem)',\n        5: 'linear-gradient(rgba(0, 0, 0, 0) 0.75rem, rgb(0, 0, 0) 2.625rem, rgb(0, 0, 0) 9.375rem, rgba(0, 0, 0, 0) 11.25rem)',\n    },\n    xs: {\n        3: 'linear-gradient(rgba(0, 0, 0, 0) 0.875rem, rgb(0, 0, 0) 2.125rem, rgb(0, 0, 0) 5.5rem, rgba(0, 0, 0, 0) 6.625rem)',\n        5: 'linear-gradient(rgba(0, 0, 0, 0) 0.75rem, rgb(0, 0, 0) 1.625rem, rgb(0, 0, 0) 9.125rem, rgba(0, 0, 0, 0) 10rem)',\n    },\n};\n\nconst StyledArrow = styled(Button)`\n    position: absolute;\n    left: 0;\n    right: 0;\n\n    margin: 0 auto;\n    padding: 0;\n    width: 1.25rem;\n    height: 1.25rem;\n\n    opacity: 0;\n    color: ${primary};\n\n    &[data-placement='top'] {\n        top: 0;\n    }\n\n    &[data-placement='bottom'] {\n        bottom: 0;\n    }\n`;\nconst StyledCarousel = styled(Carousel)<{ $isFocused?: boolean }>`\n    &[data-no-scroll-behavior='true'] {\n        scroll-behavior: unset;\n    }\n\n    &:focus {\n        outline: 0 none;\n    }\n\n    ${({ $isFocused }) =>\n        $isFocused &&\n        css`\n            & ${StyledWhiteText} {\n                color: ${primary};\n            }\n\n            & ~ ${StyledArrow} {\n                opacity: 0.32;\n            }\n        `}\n`;\ninterface StyledWrapperProps {\n    $visibleItems: PickerVisibleItems;\n    $size: PickerSize;\n    $disabled?: boolean;\n    $controls?: boolean;\n}\nconst StyledWrapper = styled.div<StyledWrapperProps>`\n    position: relative;\n    width: max-content;\n    text-align: center;\n\n    & + & {\n        margin-left: 1rem;\n    }\n\n    ${({ $size, $visibleItems }) => css`\n        height: ${sizes[$size][$visibleItems].height};\n\n        ${StyledCarousel} {\n            mask-image: ${masks[$size][$visibleItems]};\n        }\n    `};\n\n    ${applyDisabled}\n\n    ${({ $disabled }) =>\n        $disabled &&\n        css`\n            ${StyledCarousel} {\n                overflow: hidden;\n            }\n\n            ${StyledPickerItem} {\n                cursor: not-allowed;\n            }\n        `}\n\n    ${({ $controls }) =>\n        $controls &&\n        css`\n            padding-top: 1.25rem;\n            padding-bottom: 1.25rem;\n        `}\n`;\n\n// Значение, отвечающее за количество элементов,\n// перед которыми надо остановить скролл\nconst INDEX_STOP_BUFFER = 2;\n\nfunction getAllIndices(items: PickerItemType[], value: string | number | Date) {\n    const res: number[] = [];\n\n    items.forEach((item, i) => {\n        if (item.value === value) {\n            res.push(i);\n        }\n    });\n\n    return res;\n}\n\nconst findItemIndex = (items: PickerItemType[], value: string | number | Date, infiniteScroll: boolean) => {\n    if (infiniteScroll) {\n        const middleIndex = 1;\n        return getAllIndices(items, value)[middleIndex];\n    }\n\n    return items.findIndex((item) => item.value === value);\n};\n\ntype GetIndexCmd = '+' | '-' | '++' | '--' | 'home' | 'end';\n\n/**\n * Возвращает следующий/предыдущий индекс.\n */\nconst getIndex = (index: number, cmd: GetIndexCmd, min: number, max: number, infiniteScroll: boolean) => {\n    switch (cmd) {\n        case '+':\n            return index !== max ? index + 1 : min;\n        case '-':\n            return index !== min ? index - 1 : max;\n        case '++':\n            return index + 10;\n        case '--':\n            return index - 10;\n        case 'home':\n            return infiniteScroll && min === index ? 0 : min;\n        case 'end':\n        default:\n            // вычисления в первом выражении - это максимальный индекс виртуального списка\n            return infiniteScroll && max === index ? (max - 1) / 2 + max + 1 : max;\n    }\n};\n\nconst getItems = (items: PickerItemType[], infiniteScroll: boolean) => {\n    if (infiniteScroll) {\n        const virtualItems = items.map((item) => ({ ...item, isVirtual: true }));\n        return [...virtualItems, ...items, ...virtualItems];\n    }\n\n    return items;\n};\n\nconst isTopPosition = (i: number) => i < INDEX_STOP_BUFFER;\n\nconst isBottomPosition = (i: number, itemsLength: number) => i > itemsLength - 1 - INDEX_STOP_BUFFER;\n\nexport interface PickerProps\n    extends SizeProps,\n        DisabledProps,\n        Omit<HTMLAttributes<HTMLDivElement>, 'onChange'>,\n        Pick<CarouselProps, 'scrollSnapType'> {\n    /**\n     * Список опций\n     */\n    items: PickerItemType[];\n    /**\n     * Значение компонента\n     */\n    value: string | number | Date;\n    /**\n     * Отображать стрелки для переключения\n     */\n    controls?: boolean;\n    /**\n     * Отображаемое количество опций\n     */\n    visibleItems?: PickerVisibleItems;\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (value: PickerItemType) => void;\n    /**\n     * Компонент в фокусе (визуально, независимо от tabIndex)\n     */\n    focused?: boolean;\n    /**\n     * Автофокус на компоненте.\n     */\n    autofocus?: boolean;\n    /**\n     * Добавляет нативный инпут для отправки в формах. Используется `input[type=hidden]`\n     */\n    enableNativeControl?: boolean;\n    /**\n     * Имя нативного инпута. Полезно при отправке uncontrolled-форм.\n     * Используется вместе с пропом `enableNativeControl`.\n     */\n    name?: string;\n    /**\n     * Бесконечная прокрутка; выключена по умолчанию для lowPerformance Devices\n     */\n    infiniteScroll?: boolean;\n}\n\n/**\n * Компонент для отображения барабана-пикера,\n * позволяющего визуально проскроллить опции вверх-вниз.\n */\nexport const Picker: FC<PickerProps> = ({\n    id,\n    size = DEFAULT_PICKER_SIZE,\n    value,\n    items,\n    controls,\n    autofocus,\n    disabled,\n    visibleItems = DEFAULT_VISIBLE_ITEMS,\n    scrollSnapType,\n    onChange,\n    'aria-label': ariaLabel,\n    ...rest\n}) => {\n    const theme = useContext(ThemeContext);\n    // by default 'true' on high perfomance devices\n    const infiniteScroll = rest.infiniteScroll ?? !theme.lowPerformance;\n\n    const virtualItems = useMemo(() => getItems(items, infiniteScroll), [items, infiniteScroll]);\n\n    const min = 0;\n    const max = items.length - 1;\n\n    const isFirstRender = useFirstRender();\n    const [isFocused, setIsFocused] = useState(false);\n    const [index, setIndex] = useState(findItemIndex(virtualItems, value, infiniteScroll));\n    const [hasScrollAnim, setScrollAnim] = useState(true);\n\n    const wrapperRef = useRef<HTMLDivElement | null>(null);\n    const carouselRef = useRef<HTMLDivElement | null>(null);\n    const toPrev = useCallback(() => !disabled && setIndex(getIndex(index, '-', min, max, infiniteScroll)), [\n        index,\n        min,\n        max,\n        infiniteScroll,\n    ]);\n    const toNext = useCallback(() => !disabled && setIndex(getIndex(index, '+', min, max, infiniteScroll)), [\n        index,\n        min,\n        max,\n        infiniteScroll,\n    ]);\n    const jump = useCallback(\n        (cmd: GetIndexCmd) => {\n            if (disabled) {\n                return;\n            }\n\n            const firstRealItemsIndex = infiniteScroll ? max + 1 : min;\n            const lastRealItemsIndex = infiniteScroll ? max * 2 + 1 : max;\n            const newIndex = getIndex(index, cmd, firstRealItemsIndex, lastRealItemsIndex, infiniteScroll);\n\n            setIndex(newIndex);\n        },\n        [index, max, min, items, virtualItems, infiniteScroll],\n    );\n\n    const prevValue = usePreviousValue(virtualItems[index]?.value);\n\n    const onFocus = useCallback(() => setIsFocused(true), []);\n\n    const onBlur = useCallback(() => setIsFocused(false), []);\n\n    // Изменяет индекс выделенного элемента\n    // при обновлении значения value извне\n    useIsomorphicLayoutEffect(() => {\n        const newIndex = findItemIndex(virtualItems, value, infiniteScroll);\n\n        // Отключаем анимацию скролла, если значение компонента осталось\n        // прежним, но индекс изменился\n        if (prevValue === virtualItems[newIndex]?.value && newIndex !== index) {\n            setScrollAnim(false);\n        }\n\n        // Отключаем анимацию скролла, если выбраны крайние значения реального массива (items)\n        // при изменение value извне.\n        // Например, есть изначальный массив значений: [0,1,2,3], где max = 3.\n        // После добавления буферных значений для скролла, он становится [0,1,2,3,0,1,2,3,0,1,2,3],\n        // в котором необходимо попадать на \"средний сектор\" без анимации, т.е. на элементы с индексом 4 или 7\n        const firstRealItemsIndex = max + 1;\n        const lastRealItemsIndex = max * 2 + 1;\n        if (newIndex === firstRealItemsIndex || newIndex === lastRealItemsIndex) {\n            setScrollAnim(false);\n        }\n\n        setIndex(newIndex);\n    }, [value, virtualItems, infiniteScroll, max]);\n\n    // Навигация с помощью пульта/клавиатуры\n    // Не перелистывает, если компонент неактивен\n    useRemoteListener((key, event) => {\n        if (!isFocused) {\n            return;\n        }\n        switch (key) {\n            case 'UP':\n                toPrev();\n                break;\n            case 'DOWN':\n                toNext();\n                break;\n            case 'PAGE_UP':\n                jump('--');\n                break;\n            case 'PAGE_DOWN':\n                jump('++');\n                break;\n            case 'HOME':\n                jump('home');\n                break;\n            case 'END':\n                jump('end');\n                break;\n            default:\n                return;\n        }\n        event.preventDefault();\n    });\n\n    useEffect(() => {\n        // Отключаем анимацию скролла при первом рендере\n        setScrollAnim(false);\n    }, []);\n\n    const onIndexChange = useCallback(\n        (i: number) => {\n            if (i !== index) {\n                setIndex(i);\n            }\n\n            if (virtualItems[i]?.value !== value) {\n                onChange?.(virtualItems[i]);\n            }\n\n            // Изменяем выбранный индекс если значение не изменилось\n            if (prevValue === virtualItems[i]?.value) {\n                setScrollAnim(false);\n                setIndex(i);\n                const newIndex = findItemIndex(virtualItems, virtualItems[i].value, infiniteScroll);\n                setIndex(newIndex);\n            }\n\n            // Включаем анимацию скролла, после изменения индекса\n            setScrollAnim(true);\n        },\n        [virtualItems, infiniteScroll, value, onChange, prevValue],\n    );\n\n    const onDetectActiveItem = useCallback(\n        (i: number) => {\n            if (!infiniteScroll || (!isTopPosition(i) && !isBottomPosition(i, virtualItems.length))) {\n                return;\n            }\n\n            // Отключаем анимацию скролла, если полученный индекс за\n            // пределами реального массива (items) и перебрасываем на\n            // аналогичное значение в середину\n            setScrollAnim(false);\n            setIndex(i);\n\n            if (isTopPosition(i)) {\n                setIndex(i + (max - min) + 1);\n                return;\n            }\n\n            if (isBottomPosition(i, virtualItems.length)) {\n                setIndex(i - (max - min) - 1);\n            }\n        },\n        [virtualItems, infiniteScroll, max, min, index],\n    );\n\n    return (\n        <StyledWrapper\n            id={id}\n            ref={wrapperRef}\n            $size={size}\n            $disabled={disabled}\n            $visibleItems={visibleItems}\n            $controls={controls}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            {...rest}\n        >\n            <StyledCarousel\n                ref={carouselRef}\n                axis=\"y\"\n                index={index}\n                scaleCallback={scaleCallbacks[size]}\n                scaleResetCallback={scaleResetCallback}\n                scrollSnapType={scrollSnapType}\n                detectActive\n                detectThreshold={0.5}\n                throttleMs={125}\n                paddingStart={sizes[size][visibleItems].padding}\n                paddingEnd={sizes[size][visibleItems].padding}\n                onIndexChange={onIndexChange}\n                onDetectActiveItem={onDetectActiveItem}\n                $isFocused={isFocused}\n                listRole=\"listbox\"\n                listAriaLabel={ariaLabel}\n                {...(hasScrollAnim ? {} : { 'data-no-scroll-behavior': true })}\n            >\n                {virtualItems.map((item, i) => (\n                    <PickerItem\n                        key={`item:${i}`}\n                        item={item}\n                        index={i}\n                        activeIndex={index}\n                        tabIndex={index === i ? 0 : -1}\n                        size={size}\n                        onItemClick={onChange}\n                        noScrollBehavior={!hasScrollAnim}\n                        autofocus={((isFirstRender && autofocus) || isFocused) && index === i}\n                        role=\"option\"\n                        aria-hidden={item.isVirtual}\n                        isSnapAlwaysStop={\n                            i === min + INDEX_STOP_BUFFER || i === virtualItems.length - 1 - INDEX_STOP_BUFFER\n                        }\n                    />\n                ))}\n            </StyledCarousel>\n            {controls && (\n                <>\n                    <StyledArrow\n                        data-placement=\"top\"\n                        tabIndex={-1}\n                        view=\"clear\"\n                        disabled={disabled}\n                        outlined={false}\n                        contentLeft={<IconChevronUp size=\"s\" />}\n                        aria-hidden=\"true\"\n                        onClick={toPrev}\n                    />\n                    <StyledArrow\n                        data-placement=\"bottom\"\n                        tabIndex={-1}\n                        view=\"clear\"\n                        disabled={disabled}\n                        outlined={false}\n                        contentLeft={<IconChevronDown size=\"s\" />}\n                        aria-hidden=\"true\"\n                        onClick={toNext}\n                    />\n                </>\n            )}\n        </StyledWrapper>\n    );\n};\n"],"file":"Picker.js"}