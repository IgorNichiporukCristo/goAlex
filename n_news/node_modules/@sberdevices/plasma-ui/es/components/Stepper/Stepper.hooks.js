import { useCallback } from 'react';
export var useStepper = function useStepper(_ref) {
  var value = _ref.value,
      _ref$step = _ref.step,
      step = _ref$step === void 0 ? 1 : _ref$step,
      _ref$min = _ref.min,
      min = _ref$min === void 0 ? 0 : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? Infinity : _ref$max,
      onChange = _ref.onChange;
  var onLessClick = useCallback(function () {
    return onChange === null || onChange === void 0 ? void 0 : onChange(value - step);
  }, [value, step, onChange]);
  var onMoreClick = useCallback(function () {
    return onChange === null || onChange === void 0 ? void 0 : onChange(value + step);
  }, [value, step, onChange]);
  var isMin = value <= min;
  var isMax = value >= max;
  var isLessDisabled = isMin || value - step < min;
  var isMoreDisabled = isMax || value + step > max;
  return {
    onLessClick: onLessClick,
    onMoreClick: onMoreClick,
    isMin: isMin,
    isMax: isMax,
    isLessDisabled: isLessDisabled,
    isMoreDisabled: isMoreDisabled
  };
};
//# sourceMappingURL=Stepper.hooks.js.map