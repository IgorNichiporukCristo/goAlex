{"version":3,"sources":["../../../src/components/Marquee/Marquee.tsx"],"names":["React","useLayoutEffect","useRef","useState","styled","css","keyframes","marquee","MarqueeText","div","isPlaying","duration","Wrapper","textAlign","StyledText","Marquee","children","rest","animationSpeed","textRef","wrapperRef","animationDuration","state","setState","wrapperWidth","current","getBoundingClientRect","width","textWidth","textDiv","marqueeText","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,eAApB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,OAAOC,MAAP,IAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,mBAAvC;AAEA,IAAMC,OAAO,gBAAGD,SAAH,mEAAb;AAKA,IAAME,WAAW,gBAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA,0FAEA;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SACTA,SAAS,IACTL,GADS,4BAEHE,OAFG,CADA;AAAA,CAFA,EAQS;AAAA,MAAGI,QAAH,SAAGA,QAAH;AAAA,SAAkBA,QAAlB;AAAA,CART,CAAjB;AAWA,IAAMC,OAAO,gBAAGR,MAAM,CAACK,GAAV;AAAA;AAAA,qFAEU;AAAA,MAAGI,SAAH,SAAGA,SAAH;AAAA,SACfA,SAAS,KAAK,OAAd,IACAR,GADA,iBADe;AAAA,CAFV,EAOU;AAAA,MAAGQ,SAAH,SAAGA,SAAH;AAAA,SACfA,SAAS,KAAK,QAAd,IACAR,GADA,aADe;AAAA,CAPV,EAYU;AAAA,MAAGQ,SAAH,SAAGA,SAAH;AAAA,SACfA,SAAS,KAAK,KAAd,IACAR,GADA,eADe;AAAA,CAZV,CAAb;AAmBA,IAAMS,UAAU,gBAAGV,MAAM,CAACK,GAAV;AAAA;AAAA,2BAAhB;;AAQA;AACA;AACA;AACA,OAAO,IAAMM,OAAyB,GAAG,SAA5BA,OAA4B,QAAsC;AAAA,MAAnCF,SAAmC,SAAnCA,SAAmC;AAAA,MAAxBG,QAAwB,SAAxBA,QAAwB;AAAA,MAAXC,IAAW;;AAC3E,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,OAAO,GAAGjB,MAAM,CAAiB,IAAjB,CAAtB;AACA,MAAMkB,UAAU,GAAGlB,MAAM,CAAiB,IAAjB,CAAzB;;AAEA,kBAA0BC,QAAQ,CAAC;AAC/BO,IAAAA,SAAS,EAAE,KADoB;AAE/BW,IAAAA,iBAAiB,EAAE;AAFY,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAKAtB,EAAAA,eAAe,CAAC,YAAM;AAAA;;AAClB,QAAMuB,YAAY,GAAG,wBAAAJ,UAAU,CAACK,OAAX,4EAAoBC,qBAApB,GAA4CC,KAA5C,KAAqD,CAA1E;AACA,QAAMC,SAAS,GAAG,qBAAAT,OAAO,CAACM,OAAR,sEAAiBC,qBAAjB,GAAyCC,KAAzC,KAAkD,CAApE;AACAJ,IAAAA,QAAQ,CAAC;AACLb,MAAAA,SAAS,EAAEc,YAAY,GAAGI,SADrB;AAELP,MAAAA,iBAAiB,EAAEO,SAAS,GAAGV;AAF1B,KAAD,CAAR;AAIH,GAPc,EAOZ,CAACF,QAAD,CAPY,CAAf;AASA,MAAMa,OAAO,gBAAG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEV;AAAjB,KAA2BH,QAA3B,CAAhB;AAEA,MAAMc,WAAW,gBACb,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAER,KAAK,CAACZ,SAA9B;AAAyC,IAAA,QAAQ,EAAEY,KAAK,CAACD;AAAzD,KACKQ,OADL,CADJ;AAMA,sBACI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAET,UAAd;AAA0B,IAAA,SAAS,EAAE,CAACE,KAAK,CAACZ,SAAP,GAAmBG,SAAnB,GAA+BkB;AAApE,KAAmFd,IAAnF,GACKK,KAAK,CAACZ,SAAN,gBACG,0CACKoB,WADL,EAEKA,WAFL,CADH,GAMGD,OAPR,CADJ;AAYH,CAvCM","sourcesContent":["import React, { FC, useLayoutEffect, useRef, useState } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\nconst marquee = keyframes`\n    0% { transform: translateX(0%) }\n    100% { transform: translateX(-100%) }\n`;\n\nconst MarqueeText = styled.div<{ isPlaying: boolean; duration: number }>`\n    padding-right: 4rem;\n    animation: ${({ isPlaying }) =>\n        isPlaying &&\n        css`\n            ${marquee} linear infinite;\n        `};\n    animation-delay: 500ms;\n    animation-duration: ${({ duration }) => duration}s;\n`;\n\nconst Wrapper = styled.div<{ textAlign?: 'start' | 'center' | 'end' }>`\n    display: flex;\n    justify-content: ${({ textAlign }) =>\n        textAlign === 'start' &&\n        css`\n            flex-start;\n        `};\n    justify-content: ${({ textAlign }) =>\n        textAlign === 'center' &&\n        css`\n            center;\n        `};\n    justify-content: ${({ textAlign }) =>\n        textAlign === 'end' &&\n        css`\n            flex-end;\n        `};\n`;\n\nconst StyledText = styled.div`\n    white-space: nowrap;\n`;\n\ninterface MarqueeProps {\n    textAlign?: 'start' | 'center' | 'end';\n}\n\n/**\n * Компонент для отображения бегущей строки\n */\nexport const Marquee: FC<MarqueeProps> = ({ textAlign, children, ...rest }) => {\n    const animationSpeed = 70;\n    const textRef = useRef<HTMLDivElement>(null);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    const [state, setState] = useState({\n        isPlaying: false,\n        animationDuration: 0,\n    });\n\n    useLayoutEffect(() => {\n        const wrapperWidth = wrapperRef.current?.getBoundingClientRect().width || 0;\n        const textWidth = textRef.current?.getBoundingClientRect().width || 0;\n        setState({\n            isPlaying: wrapperWidth < textWidth,\n            animationDuration: textWidth / animationSpeed,\n        });\n    }, [children]);\n\n    const textDiv = <StyledText ref={textRef}>{children}</StyledText>;\n\n    const marqueeText = (\n        <MarqueeText isPlaying={state.isPlaying} duration={state.animationDuration}>\n            {textDiv}\n        </MarqueeText>\n    );\n\n    return (\n        <Wrapper ref={wrapperRef} textAlign={!state.isPlaying ? textAlign : undefined} {...rest}>\n            {state.isPlaying ? (\n                <>\n                    {marqueeText}\n                    {marqueeText}\n                </>\n            ) : (\n                textDiv\n            )}\n        </Wrapper>\n    );\n};\n"],"file":"Marquee.js"}