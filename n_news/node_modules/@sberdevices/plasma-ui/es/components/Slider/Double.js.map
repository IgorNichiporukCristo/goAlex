{"version":3,"sources":["../../../src/components/Slider/Double.tsx"],"names":["React","SliderBase","Handle","getXCenterHandle","handle","containerX","parentElement","getBoundingClientRect","x","handleRect","handlePosition","Slider","min","max","value","disabled","onChangeCommitted","onChange","useState","stepSize","railFillWidth","railFillXPosition","xFirstHandle","xSecondHandle","firstHandleZIndex","secondHandleZIndex","firstValue","secondValue","state","setState","firstHandleRef","useRef","secondHandleRef","useEffect","firstLocalValue","Math","secondLocalValue","prevState","setStepSize","useCallback","newStepSize","onFirstHandleChange","handleValue","data","current","newHandleXPosition","secondHandleXPosition","fillWidth","onFirstHandleChangeCommited","lastX","onSecondHandleChange","firstXHandleXPosition","onSecondHandleChangeCommited"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { SliderBase } from './SliderBase';\nimport { Handle } from './Handle';\n\nexport interface SliderProps {\n    /**\n     * Минимальное значение\n     */\n    min: number;\n    /**\n     * Максимальное значение\n     */\n    max: number;\n    /**\n     * Текущее значение\n     */\n    value: number[];\n    /**\n     * Компонент неактивен\n     */\n    disabled?: boolean;\n    /**\n     * Вызывается при отпускании ползунка\n     */\n    onChangeCommitted(value: number[]): void;\n    /**\n     * Вызывается при перемещении ползунка\n     */\n    onChange?(value: number[]): void;\n}\n\nfunction getXCenterHandle(handle: HTMLDivElement) {\n    const containerX = handle.parentElement?.getBoundingClientRect()?.x || 0;\n    const handleRect = handle.getBoundingClientRect();\n    const handlePosition = handleRect.x;\n    return handlePosition - containerX;\n}\n\nexport const Slider: React.FC<SliderProps> = ({ min, max, value, disabled, onChangeCommitted, onChange }) => {\n    const [state, setState] = React.useState({\n        stepSize: 0,\n        railFillWidth: 0,\n        railFillXPosition: 0,\n        xFirstHandle: 0,\n        xSecondHandle: 0,\n        firstHandleZIndex: 100,\n        secondHandleZIndex: 101,\n        firstValue: value[0],\n        secondValue: value[1],\n    });\n\n    const firstHandleRef = React.useRef<HTMLDivElement | null>(null);\n    const secondHandleRef = React.useRef<HTMLDivElement | null>(null);\n\n    React.useEffect(() => {\n        const firstLocalValue = Math.min(Math.max(value[0], min), max) - min;\n        const secondLocalValue = Math.min(Math.max(value[1], min), max) - min;\n        setState((prevState) => ({\n            ...prevState,\n            railFillXPosition: state.stepSize * firstLocalValue,\n            railFillWidth: state.stepSize * secondLocalValue - state.stepSize * firstLocalValue,\n            xFirstHandle: state.stepSize * firstLocalValue,\n            xSecondHandle: state.stepSize * secondLocalValue,\n        }));\n    }, [value, state.stepSize, min]);\n\n    const setStepSize = React.useCallback((newStepSize) => {\n        setState((prevState) => ({\n            ...prevState,\n            stepSize: newStepSize,\n        }));\n    }, []);\n\n    const onFirstHandleChange = React.useCallback(\n        (handleValue, data) => {\n            if (secondHandleRef?.current) {\n                const newHandleXPosition = data.x;\n                const secondHandleXPosition = getXCenterHandle(secondHandleRef.current);\n                const fillWidth = secondHandleXPosition - newHandleXPosition;\n\n                setState((prevState) => ({\n                    ...prevState,\n                    firstHandleZIndex: 101,\n                    secondHandleZIndex: 100,\n                    railFillWidth: fillWidth < 0 ? 0 : fillWidth,\n                    railFillXPosition: newHandleXPosition,\n                }));\n                if (onChange) {\n                    onChange([handleValue, value[1]]);\n                }\n            }\n        },\n        [onChange, value],\n    );\n\n    const onFirstHandleChangeCommited = React.useCallback(\n        (handleValue, data) => {\n            onChangeCommitted([handleValue, value[1]]);\n\n            setState((prevState) => ({\n                ...prevState,\n                firstValue: handleValue,\n                xFirstHandle: data.lastX,\n            }));\n        },\n        [onChangeCommitted, value],\n    );\n\n    const onSecondHandleChange = React.useCallback(\n        (handleValue, data) => {\n            if (firstHandleRef?.current) {\n                const firstXHandleXPosition = getXCenterHandle(firstHandleRef.current);\n\n                const newHandleXPosition = data.x;\n                const fillWidth = newHandleXPosition - firstXHandleXPosition;\n\n                setState((prevState) => ({\n                    ...prevState,\n                    firstHandleZIndex: 100,\n                    secondHandleZIndex: 101,\n                    railFillWidth: fillWidth < 0 ? 0 : fillWidth,\n                    railFillXPosition: firstXHandleXPosition,\n                }));\n                if (onChange) {\n                    onChange([value[0], handleValue]);\n                }\n            }\n        },\n        [onChange, value],\n    );\n\n    const onSecondHandleChangeCommited = React.useCallback(\n        (handleValue, data) => {\n            onChangeCommitted([value[0], handleValue]);\n            setState((prevState) => ({\n                ...prevState,\n                secondValue: handleValue,\n                xSecondHandle: data.lastX,\n            }));\n        },\n        [onChangeCommitted, value],\n    );\n\n    return (\n        <SliderBase\n            min={min}\n            max={max}\n            disabled={disabled}\n            setStepSize={setStepSize}\n            railFillWidth={state.railFillWidth}\n            railFillXPosition={state.railFillXPosition}\n        >\n            <Handle\n                ref={firstHandleRef}\n                stepSize={state.stepSize}\n                onChangeCommitted={onFirstHandleChangeCommited}\n                onChange={onFirstHandleChange}\n                min={min}\n                max={max}\n                disabled={disabled}\n                bounds={[min, state.secondValue]}\n                side=\"left\"\n                xPosition={state.xFirstHandle}\n                zIndex={state.firstHandleZIndex}\n            />\n            <Handle\n                ref={secondHandleRef}\n                stepSize={state.stepSize}\n                onChangeCommitted={onSecondHandleChangeCommited}\n                onChange={onSecondHandleChange}\n                min={min}\n                max={max}\n                disabled={disabled}\n                bounds={[state.firstValue, max]}\n                side=\"right\"\n                xPosition={state.xSecondHandle}\n                zIndex={state.secondHandleZIndex}\n            />\n        </SliderBase>\n    );\n};\n"],"file":"Double.js"}