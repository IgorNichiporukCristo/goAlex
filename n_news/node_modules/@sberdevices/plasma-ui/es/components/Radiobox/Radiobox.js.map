{"version":3,"sources":["../../../src/components/Radiobox/Radiobox.tsx"],"names":["React","forwardRef","styled","BaseboxLabel","BaseboxDescription","BaseboxContentWrapper","useUniqId","white","StyledRoot","CheckboxRoot","StyledInput","CheckboxInput","StyledTrigger","CheckboxTrigger","StyledContent","CheckboxContent","StyledEllipse","div","theme","lowPerformance","Radiobox","ref","id","label","description","disabled","focused","scaleOnInteraction","style","className","rest","uniqId","uniqLabelId","uniqDescriptionId","radioboxId"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,qBAA3C,EAAkEC,SAAlE,QAAmF,0BAAnF;AAEA,SAASC,KAAT,QAAsB,4BAAtB;AAGA,SACIC,UAAU,IAAIC,YADlB,EAEIC,WAAW,IAAIC,aAFnB,EAGIC,aAAa,IAAIC,eAHrB,EAIIC,aAAa,IAAIC,eAJrB,QAKO,sBALP;AASA,IAAMH,aAAa,gBAAGV,MAAM,CAACW,eAAD,CAAT;AAAA;AAAA,wFAAnB;AAIA,IAAMG,aAAa,gBAAGd,MAAM,CAACe,GAAV;AAAA;AAAA,qOAYKV,KAZL,EAcD;AAAA,MAAGW,KAAH,QAAGA,KAAH;AAAA,SAAgBA,KAAK,CAACC,cAAN,GAAuB,OAAvB,GAAiC,4BAAjD;AAAA,CAdC,EAkBSP,aAlBT,CAAnB;AAuBA;AACA;AACA;AACA;;AACA,OAAO,IAAMQ,QAAQ,gBAAGnB,UAAU,CAAkC,SAASmB,QAAT,QAEhEC,GAFgE,EAGlE;AAAA,MAFIC,EAEJ,SAFIA,EAEJ;AAAA,MAFQC,KAER,SAFQA,KAER;AAAA,MAFeC,WAEf,SAFeA,WAEf;AAAA,MAF4BC,QAE5B,SAF4BA,QAE5B;AAAA,MAFsCC,OAEtC,SAFsCA,OAEtC;AAAA,MAF+CC,kBAE/C,SAF+CA,kBAE/C;AAAA,MAFmEC,KAEnE,SAFmEA,KAEnE;AAAA,MAF0EC,SAE1E,SAF0EA,SAE1E;AAAA,MAFwFC,IAExF;;AACE,MAAMC,MAAM,GAAGzB,SAAS,EAAxB;AACA,MAAM0B,WAAW,GAAG1B,SAAS,EAA7B;AACA,MAAM2B,iBAAiB,GAAG3B,SAAS,EAAnC;AACA,MAAM4B,UAAU,GAAGZ,EAAE,IAAIS,MAAzB;AACA,sBACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEN,QAAzB;AAAmC,IAAA,KAAK,EAAEG,KAA1C;AAAiD,IAAA,SAAS,EAAEC,SAA5D;AAAuE,IAAA,QAAQ,EAAE,CAAC;AAAlF,kBACI,oBAAC,aAAD;AACI,uBAAiBG,WADrB;AAEI,wBAAkBC,iBAFtB;AAGI,IAAA,EAAE,EAAEC,UAHR;AAII,IAAA,GAAG,EAAEb,GAJT;AAKI,IAAA,IAAI,EAAC,OALT;AAMI,IAAA,QAAQ,EAAEI;AANd,KAOQK,IAPR,EADJ,eAUI,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAEI;AAAhC,kBACI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAER,OAAzB;AAAkC,IAAA,mBAAmB,EAAEC;AAAvD,kBACI,oBAAC,aAAD,OADJ,CADJ,EAIKJ,KAAK,iBACF,oBAAC,eAAD,qBACI,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,MAAjB;AAAwB,IAAA,EAAE,EAAES;AAA5B,KACKT,KADL,CADJ,EAIKC,WAAW,iBACR,oBAAC,kBAAD;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAES;AAA/B,KACKT,WADL,CALR,CALR,CAVJ,CADJ;AA8BH,CAtCiC,CAA3B","sourcesContent":["import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { BaseboxLabel, BaseboxDescription, BaseboxContentWrapper, useUniqId } from '@sberdevices/plasma-core';\nimport type { BaseboxProps, FocusProps, OutlinedProps } from '@sberdevices/plasma-core';\nimport { white } from '@sberdevices/plasma-tokens';\n\nimport { InteractionProps } from '../../mixins';\nimport {\n    StyledRoot as CheckboxRoot,\n    StyledInput as CheckboxInput,\n    StyledTrigger as CheckboxTrigger,\n    StyledContent as CheckboxContent,\n} from '../Checkbox/Checkbox';\n\nexport interface RadioboxProps extends BaseboxProps, FocusProps, OutlinedProps, InteractionProps {}\n\nconst StyledTrigger = styled(CheckboxTrigger)`\n    --plasma-trigger-border-radius: 1.25rem;\n    --plasma-trigger-outline-radius: 1.375rem;\n`;\nconst StyledEllipse = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    margin: auto;\n    width: 0.625rem;\n    height: 0.625rem;\n\n    border-radius: 0.625rem;\n    background-color: ${white};\n\n    transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'transform 0.3s ease-in-out')};\n    transform: scale(0);\n\n    /* stylelint-disable-next-line selector-nested-pattern, selector-type-no-unknown */\n    input:checked + label ${StyledTrigger} & {\n        transform: scale(1);\n    }\n`;\n\n/**\n * Переключатель, или *радиокнопка*.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport const Radiobox = forwardRef<HTMLInputElement, RadioboxProps>(function Radiobox(\n    { id, label, description, disabled, focused, scaleOnInteraction, style, className, ...rest },\n    ref,\n) {\n    const uniqId = useUniqId();\n    const uniqLabelId = useUniqId();\n    const uniqDescriptionId = useUniqId();\n    const radioboxId = id || uniqId;\n    return (\n        <CheckboxRoot $disabled={disabled} style={style} className={className} tabIndex={-1}>\n            <CheckboxInput\n                aria-labelledby={uniqLabelId}\n                aria-describedby={uniqDescriptionId}\n                id={radioboxId}\n                ref={ref}\n                type=\"radio\"\n                disabled={disabled}\n                {...rest}\n            />\n            <BaseboxContentWrapper htmlFor={radioboxId}>\n                <StyledTrigger $focused={focused} $scaleOnInteraction={scaleOnInteraction}>\n                    <StyledEllipse />\n                </StyledTrigger>\n                {label && (\n                    <CheckboxContent>\n                        <BaseboxLabel as=\"span\" id={uniqLabelId}>\n                            {label}\n                        </BaseboxLabel>\n                        {description && (\n                            <BaseboxDescription mt={4} id={uniqDescriptionId}>\n                                {description}\n                            </BaseboxDescription>\n                        )}\n                    </CheckboxContent>\n                )}\n            </BaseboxContentWrapper>\n        </CheckboxRoot>\n    );\n});\n"],"file":"Radiobox.js"}