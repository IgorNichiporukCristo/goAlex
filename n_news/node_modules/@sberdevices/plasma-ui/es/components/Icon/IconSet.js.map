{"version":3,"sources":["../../../src/components/Icon/IconSet.tsx"],"names":["React","styled","Icon","iconSectionsSet","Cell","Row","Col","TextBox","Headline3","StyledRow","StyledIcon","StyledHeading","color","IconSet","size","exclude","include","Object","entries","map","sectionName","section","filteredIcons","keys","filter","icon","includes","length"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,eAAf,QAAmE,2BAAnE;AAEA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,SAAzB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,IAAMC,SAAS,gBAAGR,MAAM,CAACI,GAAD,CAAT;AAAA;AAAA,uBAAf;AAIA,IAAMK,UAAU,gBAAGT,MAAM,CAACC,IAAD,CAAT;AAAA;AAAA,2CAAhB;AAIA,IAAMS,aAAa,gBAAGV,MAAM,CAACO,SAAD,CAAT;AAAA;AAAA,uCAEN;AAAA,MAAGI,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CAFM,CAAnB;AAYA,OAAO,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,QAAuC;AAAA,MAApCC,IAAoC,SAApCA,IAAoC;AAAA,MAA9BF,KAA8B,SAA9BA,KAA8B;AAAA,MAAvBG,OAAuB,SAAvBA,OAAuB;AAAA,MAAdC,OAAc,SAAdA,OAAc;AAClF,sBACI,oBAAC,SAAD,QACKC,MAAM,CAACC,OAAP,CAAef,eAAf,EAAgCgB,GAAhC,CAAoC,iBAA4B;AAAA;AAAA,QAA1BC,WAA0B;AAAA,QAAbC,OAAa;;AAC7D,QAAMC,aAAa,GAAGL,MAAM,CAACM,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,CAA4B,UAACC,IAAD,EAAU;AACxD,UAAIV,OAAJ,EAAa;AACT,eAAO,CAACA,OAAO,CAACW,QAAR,CAAiBD,IAAjB,CAAR;AACH;;AACD,aAAOT,OAAO,GAAGA,OAAO,CAACU,QAAR,CAAiBD,IAAjB,CAAH,GAAqC,IAAnD;AACH,KALqB,CAAtB;AAMA,WACIH,aAAa,IACbA,aAAa,CAACK,MAAd,GAAuB,CADvB,iBAEI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEP,WAAV;AAAuB,MAAA,IAAI,EAAE;AAA7B,oBACI,oBAAC,aAAD,QAAgBA,WAAhB,CADJ,EAEKE,aAAa,CAACH,GAAd,CAAkB,UAACM,IAAD;AAAA,0BACf,oBAAC,IAAD;AACI,QAAA,GAAG,EAAEA,IADT;AAEI,QAAA,WAAW,eAAE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAEA,IAAlB;AAAiC,UAAA,IAAI,EAAEX,IAAvC;AAA6C,UAAA,KAAK,EAAEF;AAApD,UAFjB;AAGI,QAAA,OAAO,eAAE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAEa;AAAhB;AAHb,QADe;AAAA,KAAlB,CAFL,CAHR;AAeH,GAtBA,CADL,CADJ;AA2BH,CA5BM","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Icon, iconSectionsSet, IconName as IName, IconSize } from '@sberdevices/plasma-icons';\n\nimport { Cell } from '../Cell';\nimport { Row, Col } from '../Grid';\nimport { TextBox } from '../TextBox';\nimport { Headline3 } from '../Typography';\n\nconst StyledRow = styled(Row)`\n    flex-wrap: wrap;\n`;\n\nconst StyledIcon = styled(Icon)`\n    margin: 0.125rem 0.75rem 0.125rem 0;\n`;\n\nconst StyledHeading = styled(Headline3)`\n    margin: 2rem 0 1rem;\n    color: ${({ color }) => color};\n`;\n\nexport interface IconSetProps {\n    size?: IconSize;\n    color?: string;\n    exclude?: Array<IName>;\n    include?: Array<IName>;\n}\n\nexport const IconSet: React.FC<IconSetProps> = ({ size, color, exclude, include }) => {\n    return (\n        <StyledRow>\n            {Object.entries(iconSectionsSet).map(([sectionName, section]) => {\n                const filteredIcons = Object.keys(section).filter((icon) => {\n                    if (exclude) {\n                        return !exclude.includes(icon as IName);\n                    }\n                    return include ? include.includes(icon as IName) : true;\n                });\n                return (\n                    filteredIcons &&\n                    filteredIcons.length > 0 && (\n                        <Col key={sectionName} size={2}>\n                            <StyledHeading>{sectionName}</StyledHeading>\n                            {filteredIcons.map((icon) => (\n                                <Cell\n                                    key={icon}\n                                    contentLeft={<StyledIcon icon={icon as IName} size={size} color={color} />}\n                                    content={<TextBox title={icon} />}\n                                />\n                            ))}\n                        </Col>\n                    )\n                );\n            })}\n        </StyledRow>\n    );\n};\n"],"file":"IconSet.js"}