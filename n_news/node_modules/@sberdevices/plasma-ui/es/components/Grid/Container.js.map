{"version":3,"sources":["../../../src/components/Grid/Container.tsx"],"names":["React","styled","css","Container","BaseContainer","mediaQuery","gridSizes","gridColumns","gridMargins","gridGutters","canUseDOM","useIsomorphicLayoutEffect","sidesCount","htmlFontSizePx","StyledContainer","$width","theme","map","breakpoint","containerWidth","margins","deviceScale","children","props","ref","useRef","useState","width","setWidth","resizeHandler","current","offsetWidth","window","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SACIC,SAAS,IAAIC,aADjB,EAEIC,UAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,SAPJ,EAQIC,yBARJ,QASO,0BATP;AAeA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,cAAc,GAAG,EAAvB;AAEA,IAAMC,eAAe,gBAAGb,MAAM,CAACG,aAAD,CAAT;AAAA;AAAA,aACf;AAAA,MAAGW,MAAH,QAAGA,MAAH;AAAA,MAAWC,KAAX,QAAWA,KAAX;AAAA,SACEV,SAAS,CAACW,GAAV,CAAc,UAACC,UAAD,EAAgB;AAC1B,QAAMC,cAAc,GAAGJ,MAAvB;AACA,QAAMK,OAAO,GACT,CAACZ,WAAW,CAACU,UAAD,CAAX,GAA0BN,UAA1B,GAAuCH,WAAW,CAACS,UAAD,CAAnD,IAAmEL,cAAnE,GAAoFG,KAAK,CAACK,WAD9F;AAGA,WAAOhB,UAAU,CACba,UADa,EAEbF,KAAK,CAACK,WAFO,CAAV,CAGLnB,GAHK,mGAI2B,CAACiB,cAAc,GAAGC,OAAlB,IAA6Bb,WAAW,CAACW,UAAD,CAJnE,EAKqBV,WAAW,CAACU,UAAD,CALhC,EAMqBT,WAAW,CAACS,UAAD,CAAX,GAA0BN,UAN/C,EAAP;AAQH,GAbD,CADF;AAAA,CADe,CAArB;AAkBA;AACA;AACA;AACA;;AACA,OAAO,IAAMT,SAAyD,GAAG,SAA5DA,SAA4D,QAA4B;AAAA,MAAzBmB,QAAyB,SAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACjG,MAAMC,GAAG,GAAGxB,KAAK,CAACyB,MAAN,CAAoC,IAApC,CAAZ;;AACA,wBAA0BzB,KAAK,CAAC0B,QAAN,CAAe,CAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEAjB,EAAAA,yBAAyB,CAAC,YAAM;AAC5B,QAAMkB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,UAAIL,GAAG,CAACM,OAAR,EAAiB;AAAA;;AACbF,QAAAA,QAAQ,iBAACJ,GAAG,CAACM,OAAL,iDAAC,aAAaC,WAAd,CAAR;AACH;AACJ,KAJD;;AAKA,QAAIP,GAAG,CAACM,OAAR,EAAiB;AAAA;;AACbF,MAAAA,QAAQ,kBAACJ,GAAG,CAACM,OAAL,kDAAC,cAAaC,WAAd,CAAR;AACH;;AACD,QAAIrB,SAAJ,EAAe;AACXsB,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCJ,aAAlC;AACH;;AACD,WAAO,YAAM;AACT,UAAInB,SAAJ,EAAe;AACXsB,QAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCL,aAArC;AACH;AACJ,KAJD;AAKH,GAjBwB,EAiBtB,EAjBsB,CAAzB;AAmBA,sBACI,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEL,GAAtB;AAA2B,IAAA,MAAM,EAAEG;AAAnC,KAA8CJ,KAA9C,GACKD,QADL,CADJ;AAKH,CA5BM","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n    Container as BaseContainer,\n    mediaQuery,\n    gridSizes,\n    gridColumns,\n    gridMargins,\n    gridGutters,\n    canUseDOM,\n    useIsomorphicLayoutEffect,\n} from '@sberdevices/plasma-core';\n\ninterface StyledContainerProps {\n    $width: number;\n}\n\nconst sidesCount = 2;\nconst htmlFontSizePx = 16;\n\nconst StyledContainer = styled(BaseContainer)<StyledContainerProps>`\n    ${({ $width, theme }) =>\n        gridSizes.map((breakpoint) => {\n            const containerWidth = $width;\n            const margins =\n                (gridMargins[breakpoint] * sidesCount - gridGutters[breakpoint]) * htmlFontSizePx * theme.deviceScale;\n\n            return mediaQuery(\n                breakpoint,\n                theme.deviceScale,\n            )(css`\n                --plasma-grid-column-width: ${(containerWidth - margins) / gridColumns[breakpoint]}px;\n                --plasma-grid-margin: ${gridMargins[breakpoint]}rem;\n                --plasma-grid-gutter: ${gridGutters[breakpoint] / sidesCount}rem;\n            `);\n        })}\n`;\n\n/**\n * Блок с полями по бокам для размещения контента по вертикали.\n * Блок нельзя вкладывать сам в себя или дальше по дереву.\n */\nexport const Container: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n    const [width, setWidth] = React.useState(0);\n\n    useIsomorphicLayoutEffect(() => {\n        const resizeHandler = () => {\n            if (ref.current) {\n                setWidth(ref.current?.offsetWidth);\n            }\n        };\n        if (ref.current) {\n            setWidth(ref.current?.offsetWidth);\n        }\n        if (canUseDOM) {\n            window.addEventListener('resize', resizeHandler);\n        }\n        return () => {\n            if (canUseDOM) {\n                window.removeEventListener('resize', resizeHandler);\n            }\n        };\n    }, []);\n\n    return (\n        <StyledContainer ref={ref} $width={width} {...props}>\n            {children}\n        </StyledContainer>\n    );\n};\n"],"file":"Container.js"}