{"version":3,"sources":["../../../src/components/ProductCard/ProductCard.tsx"],"names":["React","forwardRef","styled","css","body1","black","blackSecondary","success","mediaQuery","Color","Price","Footnote1","Body2","Caption","Card","CardBody","CardContent","ProductCardStepper","StyledCard","$backgroundColor","StyledMediaSlot","div","getGradient","backgroundColor","color","alpha","string","StyledCardContent","theme","lowPerformance","$cover","StyledBadgeSlot","StyledText","props","deviceScale","StyledBottom","StyledPrices","StyledPrice","$type","StyledStepper","$onTop","ProductCard","ref","badge","media","text","price","oldPrice","quantity","quantityStep","quantityMin","quantityMax","onQuantityChange","disabled","rest","undefined"],"mappings":"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","sourcesContent":["import React, { forwardRef, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\nimport { body1, black, blackSecondary, success, mediaQuery } from '@sberdevices/plasma-core';\nimport type { DisabledProps } from '@sberdevices/plasma-core';\nimport Color from 'color';\n\nimport { Price } from '../Price';\nimport { Footnote1, Body2, Caption } from '../Typography';\nimport { Card } from '../Card/Card';\nimport type { CardProps } from '../Card/Card';\nimport { CardBody } from '../Card/CardBody';\nimport { CardContent } from '../Card/CardContent';\n\nimport { ProductCardStepper } from './ProductCardStepper';\nimport type { ProductCardStepperProps } from './ProductCardStepper';\n\nexport interface ProductCardProps extends CardProps, DisabledProps {\n    /**\n     * Слот под картинку.\n     */\n    media?: ReactNode;\n    /**\n     * Слот под бейдж (-и).\n     */\n    badge?: ReactNode;\n    /**\n     * Текст или название карточки.\n     */\n    text?: string;\n    /**\n     * Актуальная цена.\n     */\n    price?: number;\n    /**\n     * Старая (перечеркнутая) цена.\n     */\n    oldPrice?: number;\n    /**\n     * Количество.\n     */\n    quantity?: ProductCardStepperProps['value'];\n    /**\n     * Колбек изменени количества.\n     */\n    onQuantityChange?: ProductCardStepperProps['onChange'];\n    /**\n     * Шаг изменения количества.\n     */\n    quantityStep?: ProductCardStepperProps['step'];\n    /**\n     * Минимальное количества.\n     */\n    quantityMin?: ProductCardStepperProps['min'];\n    /**\n     * Максимальное количества.\n     */\n    quantityMax?: ProductCardStepperProps['max'];\n    /**\n     * Слот под степпер.\n     */\n    stepper?: ReactNode;\n    /**\n     * Цвет подложки и градиента карточки.\n     */\n    backgroundColor?: string;\n}\n\nconst StyledCard = styled(Card)<{ $backgroundColor?: string }>`\n    background-color: ${({ $backgroundColor }) => $backgroundColor};\n    color: ${blackSecondary};\n`;\nconst StyledMediaSlot = styled.div`\n    & img {\n        display: block;\n    }\n`;\n\nconst getGradient = (backgroundColor: string) => {\n    const color = Color(backgroundColor);\n\n    return `linear-gradient(\n        180deg,\n        ${color.alpha(0).string()} 0%,\n        ${color.alpha(0.0156863).string()} 8.62%,\n        ${color.alpha(0.054902).string()} 16.56%,\n        ${color.alpha(0.117647).string()} 23.93%,\n        ${color.alpha(0.2).string()} 30.85%,\n        ${color.alpha(0.290196).string()} 37.42%,\n        ${color.alpha(0.392157).string()} 43.77%,\n        ${color.alpha(0.501961).string()} 50%,\n        ${color.alpha(0.607843).string()} 56.23%,\n        ${color.alpha(0.709804).string()} 62.58%,\n        ${color.alpha(0.8).string()} 69.15%,\n        ${color.alpha(0.882353).string()} 76.07%,\n        ${color.alpha(0.945098).string()} 83.44%,\n        ${color.alpha(0.984314).string()} 91.38%,\n        ${backgroundColor} 100%\n    )`;\n};\n\nconst StyledCardContent = styled(CardContent)<{ $backgroundColor?: string; $cover?: boolean }>`\n    padding: 0.75rem;\n    border-radius: 0;\n    background-color: ${({ $backgroundColor }) => $backgroundColor};\n    transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'all 0.15s ease-in-out')};\n\n    &::after {\n        content: '';\n        position: absolute;\n        top: -2.5rem;\n        left: 0;\n        right: 0;\n        height: 2.5rem;\n        opacity: 0;\n        transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'all 0.15s ease-in-out')};\n        background: ${({ $backgroundColor }) => $backgroundColor && getGradient($backgroundColor)};\n    }\n\n    ${({ $cover }) =>\n        $cover &&\n        css`\n            margin-top: -1.875rem;\n\n            &::after {\n                opacity: 1;\n            }\n        `}\n`;\nconst StyledBadgeSlot = styled.div`\n    position: absolute;\n    top: 0.5rem;\n    left: 0.5rem;\n`;\nconst StyledText = styled(Footnote1)`\n    ${(props) =>\n        mediaQuery(\n            'XL',\n            props.theme.deviceScale,\n        )(\n            css`\n                ${body1}\n            `,\n        )}\n`;\nconst StyledBottom = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    margin-top: 0.25rem;\n`;\nconst StyledPrices = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    min-height: 2.375rem;\n`;\nconst StyledPrice = styled(Price)<{ $type?: 'new' | 'old' }>`\n    color: ${({ $type }) => {\n        switch ($type) {\n            case 'new':\n                return success;\n            case 'old':\n                return blackSecondary;\n            default:\n                return black;\n        }\n    }};\n`;\nconst StyledStepper = styled(ProductCardStepper)<{ $onTop?: boolean }>`\n    width: 100%;\n    transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'all 0.15s ease-in-out')};\n\n    ${({ $onTop }) =>\n        $onTop\n            ? css`\n                  margin-top: -2.5rem;\n              `\n            : css`\n                  margin-top: 0.5rem;\n              `}\n`;\n\n/**\n * Карточка продукта с возможностью указания картинки, текста, цены и выбора количества.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport const ProductCard = forwardRef<HTMLDivElement, ProductCardProps>(function ProductCard(\n    {\n        badge,\n        media,\n        text,\n        price,\n        oldPrice,\n        quantity,\n        quantityStep,\n        quantityMin,\n        quantityMax,\n        onQuantityChange,\n        disabled,\n        backgroundColor = '#FFFFFF',\n        ...rest\n    },\n    ref,\n) {\n    return (\n        <StyledCard {...rest} ref={ref} disabled={disabled} $backgroundColor={backgroundColor}>\n            <CardBody>\n                {media && <StyledMediaSlot>{media}</StyledMediaSlot>}\n                {badge && <StyledBadgeSlot>{badge}</StyledBadgeSlot>}\n                <StyledCardContent\n                    $backgroundColor={backgroundColor}\n                    $cover={media !== undefined && quantity !== undefined && quantity > 0}\n                >\n                    {text && <StyledText>{text}</StyledText>}\n                    {(price !== undefined || quantity !== undefined) && (\n                        <StyledBottom>\n                            {price !== undefined && (\n                                <StyledPrices>\n                                    <StyledPrice $type={oldPrice !== undefined ? 'new' : undefined} forwardedAs={Body2}>\n                                        {price}\n                                    </StyledPrice>\n                                    {oldPrice && (\n                                        <StyledPrice $type=\"old\" stroke forwardedAs={Caption}>\n                                            {oldPrice}\n                                        </StyledPrice>\n                                    )}\n                                </StyledPrices>\n                            )}\n                            {quantity !== undefined && (\n                                <StyledStepper\n                                    value={quantity}\n                                    step={quantityStep}\n                                    min={quantityMin}\n                                    max={quantityMax}\n                                    onChange={onQuantityChange}\n                                    $onTop={price !== undefined && quantity === 0}\n                                    disabled={disabled}\n                                />\n                            )}\n                        </StyledBottom>\n                    )}\n                </StyledCardContent>\n            </CardBody>\n        </StyledCard>\n    );\n});\n"],"file":"ProductCard.js"}