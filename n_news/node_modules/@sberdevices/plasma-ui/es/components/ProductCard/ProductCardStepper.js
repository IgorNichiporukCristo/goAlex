var _excluded = ["value", "step", "min", "max", "disabled", "onChange"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled, { css } from 'styled-components';
import { black } from '@sberdevices/plasma-core';
import { IconMinus, IconPlus } from '@sberdevices/plasma-icons';
import { Button } from '../Button';
import { StepperRoot, StepperValue, useStepper } from '../Stepper';
var StyledStepperRoot = /*#__PURE__*/styled(StepperRoot).withConfig({
  componentId: "plasma-ui__sc-1n0dt2r-0"
})(["width:100%;"]);
var StyledStepperValue = /*#__PURE__*/styled(StepperValue).withConfig({
  componentId: "plasma-ui__sc-1n0dt2r-1"
})(["color:", ";", ""], black, function (_ref) {
  var $isHidden = _ref.$isHidden;
  return $isHidden && css(["display:none;"]);
});
var StyledStepperButton = /*#__PURE__*/styled(Button).attrs(function () {
  return {
    size: 's',
    square: true
  };
}).withConfig({
  componentId: "plasma-ui__sc-1n0dt2r-2"
})(["background-color:rgba(8,8,8,0.12);color:", ";align-self:flex-end;transition:", ";", ""], black, function (_ref2) {
  var theme = _ref2.theme;
  return theme.lowPerformance ? 'unset' : 'opacity 0.15s ease-in-out';
}, function (_ref3) {
  var $isHidden = _ref3.$isHidden;
  return $isHidden && css(["pointer-events:none;opacity:0;visibility:hidden;"]);
});
/**
 * Степпер карточки продукта.
 */

export var ProductCardStepper = function ProductCardStepper(_ref4) {
  var value = _ref4.value,
      step = _ref4.step,
      min = _ref4.min,
      max = _ref4.max,
      disabled = _ref4.disabled,
      onChange = _ref4.onChange,
      rest = _objectWithoutProperties(_ref4, _excluded);

  var _useStepper = useStepper({
    value: value,
    step: step,
    min: min,
    max: max,
    onChange: onChange
  }),
      onLessClick = _useStepper.onLessClick,
      onMoreClick = _useStepper.onMoreClick,
      isMax = _useStepper.isMax,
      isMoreDisabled = _useStepper.isMoreDisabled;

  var isValuePositive = value > 0;
  return /*#__PURE__*/React.createElement(StyledStepperRoot, rest, /*#__PURE__*/React.createElement(StyledStepperButton, {
    disabled: disabled,
    $isHidden: !isValuePositive,
    onClick: onLessClick
  }, /*#__PURE__*/React.createElement(IconMinus, {
    color: "inherit",
    size: "s"
  })), /*#__PURE__*/React.createElement(StyledStepperValue, {
    $isHidden: !isValuePositive,
    value: value,
    showWarning: isMax
  }), /*#__PURE__*/React.createElement(StyledStepperButton, {
    disabled: disabled || isMoreDisabled,
    onClick: onMoreClick
  }, /*#__PURE__*/React.createElement(IconPlus, {
    color: "inherit",
    size: "s"
  })));
};
//# sourceMappingURL=ProductCardStepper.js.map