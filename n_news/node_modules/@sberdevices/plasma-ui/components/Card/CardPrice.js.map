{"version":3,"sources":["../../src/components/Card/CardPrice.tsx"],"names":["StyledRoot","Body2","StyledPrice","Price","primary","StyledOldPrice","tertiary","StyledCount","buttonAccent","CardPrice","count","currency","oldPrice","price","rest"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AASA,IAAMA,UAAU,gBAAG,kCAAOC,iBAAP,CAAH;AAAA;AAAA,8DAAhB;AAOA,IAAMC,WAAW,gBAAG,kCAAOC,YAAP,CAAH;AAAA;AAAA,kCAEJC,qBAFI,CAAjB;AAKA,IAAMC,cAAc,gBAAG,kCAAOF,YAAP,CAAH;AAAA;AAAA,qDAGPG,sBAHO,CAApB;AAMA,IAAMC,WAAW,gBAAG,kCAAON,iBAAP,CAAH;AAAA;AAAA,2EAKJO,0BALI,CAAjB;;AAQO,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAAmD;AAAA,MAAhDC,KAAgD,QAAhDA,KAAgD;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAXC,IAAW;;AAClG,sBACI,gCAAC,UAAD,EAAgBA,IAAhB,eACI,gCAAC,WAAD;AAAa,IAAA,QAAQ,EAAEH;AAAvB,KAAkCE,KAAlC,CADJ,EAEKD,QAAQ,iBACL,gCAAC,cAAD;AAAgB,IAAA,QAAQ,EAAED,QAA1B;AAAoC,IAAA,MAAM;AAA1C,KACKC,QADL,CAHR,EAOKF,KAAK,gBAAG,gCAAC,WAAD,gBAAeA,KAAf,CAAH,GAAyC,EAPnD,CADJ;AAWH,CAZM","sourcesContent":["import React from 'react'; // eslint-disable-line\nimport styled from 'styled-components';\nimport { buttonAccent, primary, tertiary } from '@sberdevices/plasma-tokens';\n\nimport { Price, PriceProps } from '../Price';\nimport { Body2 } from '../Typography';\n\nexport interface CardPriceProps extends React.HTMLAttributes<HTMLDivElement> {\n    price: number;\n    oldPrice?: number;\n    currency?: PriceProps['currency'];\n    count?: number;\n}\n\nconst StyledRoot = styled(Body2)`\n    display: flex;\n    box-sizing: border-box;\n\n    margin-top: 0.75rem;\n`;\n\nconst StyledPrice = styled(Price)`\n    height: 2.5rem;\n    color: ${primary};\n`;\n\nconst StyledOldPrice = styled(Price)`\n    height: 2.5rem;\n    margin-left: 0.5rem;\n    color: ${tertiary};\n`;\n\nconst StyledCount = styled(Body2)`\n    box-sizing: border-box;\n    height: 2.5rem;\n    margin-left: 0.5rem;\n\n    color: ${buttonAccent};\n`;\n\nexport const CardPrice: React.FC<CardPriceProps> = ({ count, currency, oldPrice, price, ...rest }) => {\n    return (\n        <StyledRoot {...rest}>\n            <StyledPrice currency={currency}>{price}</StyledPrice>\n            {oldPrice && (\n                <StyledOldPrice currency={currency} stroke>\n                    {oldPrice}\n                </StyledOldPrice>\n            )}\n            {count ? <StyledCount>Ã—{count}</StyledCount> : ''}\n        </StyledRoot>\n    );\n};\n"],"file":"CardPrice.js"}