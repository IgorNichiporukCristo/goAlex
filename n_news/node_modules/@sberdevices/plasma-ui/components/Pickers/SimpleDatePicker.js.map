{"version":3,"sources":["../../src/components/Pickers/SimpleDatePicker.tsx"],"names":["labelFormatter","day","value","year","month","monthLongName","monthShort","monthShortName","getFormatterKey","type","monthNameFormat","isMonth","isShortFormat","SimpleDatePicker","React","memo","id","from","to","rest","formatterKey","formatter","items","Array","length","_","i","label","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;AAKA,IAAMA,cAAc,GAAG;AACnBC,EAAAA,GAAG,EAAE,aAACC,KAAD;AAAA,qBAAsBA,KAAtB;AAAA,GADc;AAEnBC,EAAAA,IAAI,EAAE,cAACD,KAAD;AAAA,qBAAsBA,KAAtB;AAAA,GAFa;AAGnBE,EAAAA,KAAK,EAAEC,yBAHY;AAInBC,EAAAA,UAAU,EAAEC;AAJO,CAAvB;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAmBC,eAAnB,EAAsF;AAC1G,MAAMC,OAAO,GAAGF,IAAI,KAAK,OAAzB;AACA,MAAMG,aAAa,GAAGF,eAAe,KAAK,OAA1C;;AACA,MAAIC,OAAO,IAAIC,aAAf,EAA8B;AAC1B,WAAO,YAAP;AACH;;AACD,SAAOH,IAAP;AACH,CAPD;;AAgBO,IAAMI,gBAAgB,gBAAGC,kBAAMC,IAAN,CAC5B,gBAAsD;AAAA,MAAnDC,EAAmD,QAAnDA,EAAmD;AAAA,MAA/CP,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCQ,IAAyC,QAAzCA,IAAyC;AAAA,MAAnCC,EAAmC,QAAnCA,EAAmC;AAAA,MAA/BR,eAA+B,QAA/BA,eAA+B;AAAA,MAAXS,IAAW;;AAClD,MAAMC,YAAY,GAAGZ,eAAe,CAACC,IAAD,EAAOC,eAAP,CAApC;AACA,MAAMW,SAAS,GAAGrB,cAAc,CAACoB,YAAD,CAAhC;AAEA,MAAME,KAAK,GAAGC,KAAK,CAACN,IAAN,CAAW;AAAEO,IAAAA,MAAM,EAAEN,EAAE,GAAGD,IAAL,GAAY;AAAtB,GAAX,EAAsC,UAACQ,CAAD,EAAIC,CAAJ;AAAA,WAAW;AAC3DC,MAAAA,KAAK,EAAEN,SAAS,CAACJ,IAAI,GAAGS,CAAR,CAD2C;AAE3DxB,MAAAA,KAAK,EAAEe,IAAI,GAAGS;AAF6C,KAAX;AAAA,GAAtC,CAAd;AAKA,sBAAO,gCAAC,cAAD;AAAQ,IAAA,EAAE,EAAEV,EAAE,aAAMA,EAAN,cAAYP,IAAZ,IAAqBmB,SAAnC;AAA8C,IAAA,KAAK,EAAEN;AAArD,KAAgEH,IAAhE,EAAP;AACH,CAX2B,CAAzB","sourcesContent":["import React from 'react';\nimport { monthShortName, monthLongName } from '@sberdevices/plasma-core';\n\nimport { Picker, PickerProps } from './Picker';\n\ntype PickerType = 'day' | 'month' | 'year';\ntype MonthNameFormat = 'long' | 'short';\n\nconst labelFormatter = {\n    day: (value: number) => `${value}`,\n    year: (value: number) => `${value}`,\n    month: monthLongName,\n    monthShort: monthShortName,\n};\n\nconst getFormatterKey = (type: PickerType, monthNameFormat?: MonthNameFormat): keyof typeof labelFormatter => {\n    const isMonth = type === 'month';\n    const isShortFormat = monthNameFormat === 'short';\n    if (isMonth && isShortFormat) {\n        return 'monthShort';\n    }\n    return type;\n};\n\nexport interface SimpleDatePickerProps extends Omit<PickerProps, 'items'> {\n    from: number;\n    to: number;\n    type: PickerType;\n    monthNameFormat?: MonthNameFormat;\n}\n\nexport const SimpleDatePicker = React.memo<SimpleDatePickerProps>(\n    ({ id, type, from, to, monthNameFormat, ...rest }) => {\n        const formatterKey = getFormatterKey(type, monthNameFormat);\n        const formatter = labelFormatter[formatterKey];\n\n        const items = Array.from({ length: to - from + 1 }, (_, i) => ({\n            label: formatter(from + i),\n            value: from + i,\n        }));\n\n        return <Picker id={id ? `${id}-${type}` : undefined} items={items} {...rest} />;\n    },\n);\n"],"file":"SimpleDatePicker.js"}