{"version":3,"sources":["../../src/components/Cell/Cell.component-test.tsx"],"names":["Cell","CellIcon","CellListItem","CellDisclosure","TextBox","src","Icon","size","title","subTitle","describe","beforeEach","cy","intercept","req","reply","fixture","it","matchImageSnapshot","map","content","alignLeft","alignRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { mount, CypressTestDecorator, getComponent } from '@sberdevices/plasma-cy-utils';\nimport { IconDownload } from '@sberdevices/plasma-icons';\n\nconst Cell = getComponent('Cell');\nconst CellIcon = getComponent('CellIcon');\nconst CellListItem = getComponent('CellListItem');\nconst CellDisclosure = getComponent('CellDisclosure');\nconst TextBox = getComponent('TextBox');\n\nconst src = 'https://plasma.sberdevices.ru/ui-storybook/images/avocado.png';\n\nconst Icon = ({ size }) => <CellIcon size={size} as=\"img\" alt=\"avocado\" src={src} />;\n\nconst title = 'Hello World of Plasma';\nconst subTitle = 'Use with wisdom';\n\ndescribe('plasma-ui: Cell', () => {\n    beforeEach(() => {\n        cy.intercept(src, (req) => {\n            req.reply({\n                fixture: 'images/avocado.png',\n            });\n        });\n    });\n\n    it('simple', () => {\n        mount(\n            <CypressTestDecorator>\n                <Cell content={<TextBox title={title} subTitle={subTitle} />} />\n            </CypressTestDecorator>,\n        );\n        cy.matchImageSnapshot();\n    });\n\n    it('__icon', () => {\n        mount(\n            <CypressTestDecorator>\n                <Cell contentLeft={<Icon />} content={<TextBox title={title} subTitle={subTitle} />} />\n            </CypressTestDecorator>,\n        );\n        cy.matchImageSnapshot();\n    });\n\n    it('__icon_size', () => {\n        mount(\n            <CypressTestDecorator>\n                {['xs', 's', 'm', 'l', 'xl', 'xxl'].map((size) => (\n                    <Cell\n                        key={size}\n                        contentLeft={<Icon size={size} />}\n                        content={<TextBox title={title} subTitle={subTitle} />}\n                    />\n                ))}\n            </CypressTestDecorator>,\n        );\n        cy.matchImageSnapshot();\n    });\n\n    it('__right', () => {\n        const content = <TextBox title={title} subTitle={subTitle} />;\n\n        mount(\n            <CypressTestDecorator>\n                <Cell contentLeft={<Icon />} content={content} contentRight={<Icon />} />\n                <Cell contentLeft={<Icon />} content={content} contentRight={<TextBox title=\"Details\" />} />\n                <Cell\n                    contentLeft={<Icon />}\n                    content={content}\n                    contentRight={<TextBox title=\"Details\" subTitle=\"info\" />}\n                />\n                <Cell\n                    contentLeft={<Icon />}\n                    content={content}\n                    contentRight={\n                        <>\n                            <TextBox title=\"Details\" subTitle=\"info\" />\n                            <Icon size=\"s\" />\n                        </>\n                    }\n                />\n            </CypressTestDecorator>,\n        );\n        cy.matchImageSnapshot();\n    });\n\n    it('_align_left', () => {\n        const content = <TextBox label=\"indeed\" caption=\"Скидка 42%\" title={title} subTitle={subTitle} />;\n\n        mount(\n            <CypressTestDecorator>\n                {['top', 'center', 'bottom'].map((alignLeft) => (\n                    <>\n                        <Cell\n                            key={alignLeft}\n                            alignLeft={alignLeft}\n                            contentLeft={<Icon />}\n                            content={content}\n                            contentRight={<TextBox title=\"Details\" subTitle=\"info\" />}\n                        />\n                        <hr />\n                    </>\n                ))}\n            </CypressTestDecorator>,\n        );\n        cy.matchImageSnapshot();\n    });\n\n    it('_align_right', () => {\n        const content = <TextBox label=\"indeed\" caption=\"Скидка 42%\" title={title} subTitle={subTitle} />;\n\n        mount(\n            <CypressTestDecorator>\n                {['top', 'center'].map((alignRight) => (\n                    <>\n                        <Cell\n                            key={alignRight}\n                            alignRight={alignRight}\n                            contentLeft={<Icon />}\n                            content={content}\n                            contentRight={<TextBox title=\"Details\" subTitle=\"info\" />}\n                        />\n                        <hr />\n                    </>\n                ))}\n            </CypressTestDecorator>,\n        );\n        cy.matchImageSnapshot();\n    });\n\n    it('_list_item', () => {\n        mount(\n            <CypressTestDecorator>\n                <div>\n                    <CellListItem\n                        contentLeft={<Icon />}\n                        content={<TextBox label=\"lonely\" title={title} subTitle={subTitle} />}\n                        contentRight={<CellDisclosure />}\n                    />\n                </div>\n                <CellListItem\n                    contentLeft={<Icon />}\n                    content={<TextBox title={title} subTitle={subTitle} />}\n                    contentRight={<CellDisclosure />}\n                />\n                <CellListItem\n                    contentLeft={<Icon />}\n                    content={<TextBox title={title} subTitle={subTitle} />}\n                    contentRight={<CellDisclosure />}\n                />\n                <CellListItem\n                    contentLeft={<Icon />}\n                    content={<TextBox title={title} subTitle={subTitle} />}\n                    contentRight={<CellDisclosure />}\n                />\n            </CypressTestDecorator>,\n        );\n        cy.matchImageSnapshot();\n    });\n});\n"],"file":"Cell.component-test.js"}