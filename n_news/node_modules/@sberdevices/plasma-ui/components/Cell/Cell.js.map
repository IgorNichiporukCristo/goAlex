{"version":3,"sources":["../../src/components/Cell/Cell.tsx"],"names":["CellRoot","styled","div","focused","outlined","theme","lowPerformance","outlineOffset","outlineRadius","sizeMap","xs","margin","height","br","s","m","l","xl","xxl","alignToFlex","center","top","bottom","CellLeft","align","CellRight","CellContentWrapper","CellContent","CellIcon","size","Cell","props","left","contentLeft","content","right","contentRight","alignLeft","alignRight","rest"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { SelfPosition } from 'csstype';\nimport { addFocus, FocusProps, OutlinedProps } from '@sberdevices/plasma-core';\nimport type { AsProps } from '@sberdevices/plasma-core';\n\nexport const CellRoot = styled.div<FocusProps & OutlinedProps>`\n    display: flex;\n\n    &:focus {\n        outline: 0 none;\n    }\n\n    ${({ focused, outlined, theme }) =>\n        addFocus({\n            lowPerformance: theme.lowPerformance,\n            focused,\n            outlined,\n            outlineOffset: '0.25rem',\n            outlineRadius: '0.125rem',\n        })};\n`;\n\nexport type CellSize = 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl';\ntype sizeVal = { margin: number; height: number; br: number };\n\nconst sizeMap: Record<CellSize, sizeVal> = {\n    xs: { margin: 0.25, height: 1, br: 0.25 }, // 16px\n    s: { margin: 0.5, height: 1.5, br: 0.25 }, // 24px\n    m: { margin: 0.75, height: 2.25, br: 0.5 }, // 36px\n    l: { margin: 1, height: 3, br: 0.75 }, // 48px\n    xl: { margin: 1, height: 3.5, br: 0.75 }, // 56px\n    xxl: { margin: 1, height: 4, br: 0.75 }, // 64px\n};\n\ntype alignLeftProp = 'center' | 'top' | 'bottom';\ntype alignRightProp = 'center' | 'top';\n\nconst alignToFlex: Record<alignLeftProp, SelfPosition> = {\n    center: 'center',\n    top: 'flex-start',\n    bottom: 'flex-end',\n};\n\nexport const CellLeft = styled.div<{ align: alignLeftProp }>`\n    display: flex;\n    align-items: ${({ align = 'center' }) => alignToFlex[align]};\n    padding: 0.375rem 0;\n`;\n\nexport const CellRight = styled.div<{ align: alignRightProp }>`\n    display: flex;\n    align-items: ${({ align = 'center' }) => alignToFlex[align]};\n\n    text-align: right;\n`;\n\n/** Оборачивает ( content + right ) */\nexport const CellContentWrapper = styled.div`\n    display: flex;\n    flex: auto;\n    justify-content: space-between;\n\n    padding: 0.375rem 0;\n`;\n\nexport const CellContent = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport interface CellIconProps {\n    /** Размер Иконки ( по умолчанию – m ) */\n    size?: CellSize;\n}\n\nexport const CellIcon = styled.div<CellIconProps>`\n    height: ${({ size = 'm' }) => sizeMap[size].height}rem;\n    border-radius: ${({ size = 'm' }) => sizeMap[size].br}rem;\n    overflow: hidden;\n\n    margin: 0.125rem ${({ size = 'm' }) => sizeMap[size].margin}rem;\n\n    /* stylelint-disable-next-line declaration-block-semicolon-newline-after, rule-empty-line-before */\n    ${CellLeft} &:first-child {\n        margin-left: 0;\n    }\n\n    /* stylelint-disable-next-line declaration-block-semicolon-newline-after, rule-empty-line-before */\n    ${CellRight} &:last-child {\n        margin-right: 0;\n    }\n\n    & + & {\n        margin-left: 0;\n    }\n`;\n\nexport interface CellProps extends FocusProps, OutlinedProps, AsProps {\n    /**\n     * Слот для контента слева.\n     */\n    contentLeft?: React.ReactNode;\n    /**\n     * Контент.\n     */\n    content: React.ReactNode;\n    /**\n     * Слот для контента слева.\n     */\n    contentRight?: React.ReactNode;\n\n    /**\n     * Вертикальное выравнивание контента слева.\n     */\n    alignLeft?: alignLeftProp;\n    /**\n     * Вертикальное выравнивание контента справа.\n     */\n    alignRight?: alignRightProp;\n}\n\n/**\n * Базовый компонент для отображения блоков контента в списках и карточках.\n */\nexport const Cell: React.FC<CellProps & React.HTMLAttributes<HTMLDivElement>> = (props) => {\n    const {\n        contentLeft: left,\n        content,\n        contentRight: right,\n        alignLeft = 'center',\n        alignRight = 'center',\n        ...rest\n    } = props;\n\n    return (\n        <CellRoot {...rest}>\n            {left && <CellLeft align={alignLeft}>{left}</CellLeft>}\n            <CellContentWrapper>\n                <CellContent>{content}</CellContent>\n                {right && <CellRight align={alignRight}>{right}</CellRight>}\n            </CellContentWrapper>\n        </CellRoot>\n    );\n};\n"],"file":"Cell.js"}