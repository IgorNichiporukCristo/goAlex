{"version":3,"sources":["../../src/components/Tabs/TabItem.tsx"],"names":["StyledTabItem","BaseTabItem","button2","theme","lowPerformance","StyledSlider","disabled","animated","isActive","css","activeItemStyle","buttonFocused","TabItem","props","ref","refs","register","unregister"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;;;;;;;AAMA;AACA;AACA;AACO,IAAMA,aAAa,gBAAG,kCAAOC,mBAAP,CAAH;AAAA;AAAA,gtBACpBC,mBADoB,EAeR;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACVA,KAAK,CAACC,cAAN,GAAuB,OAAvB,GAAiC,+DADvB;AAAA,CAfQ,EAqBTC,wBArBS,EAsBL;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,SAAmBA,QAAQ,GAAG,MAAH,GAAY,aAAvC;AAAA,CAtBK,EA4BpB;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,MAAaC,QAAb,SAAaA,QAAb;AAAA,SACE,CAACD,QAAD,IACAC,QADA,QAEAC,qBAFA,YAGMC,2BAHN,CADF;AAAA,CA5BoB,EAkDJ;AAAA,MAAGP,KAAH,SAAGA,KAAH;AAAA,SAAgBA,KAAK,CAACC,cAAN,GAAuB,OAAvB,GAAiC,6BAAjD;AAAA,CAlDI,EA0DmCO,yBA1DnC,CAAnB;AA+DP;AACA;AACA;;;;AACO,IAAMC,OAAyB,GAAG,SAA5BA,OAA4B,CAACC,KAAD,EAAW;AAChD,MAAMC,GAAG,GAAG,mBAAoB,IAApB,CAAZ;;AACA,8BAAiB,oDAAjB;AAAA,MAAQC,IAAR,yBAAQA,IAAR;;AAEA,wBAAU,YAAM;AACZA,IAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,QAAN,CAAeF,GAAf;AACA,WAAO;AAAA,aAAMC,IAAN,aAAMA,IAAN,uBAAMA,IAAI,CAAEE,UAAN,CAAiBH,GAAjB,CAAN;AAAA,KAAP;AACH,GAHD,EAGG,CAACC,IAAD,CAHH;AAKA,sBAAO,gCAAC,aAAD;AAAe,IAAA,GAAG,EAAED;AAApB,KAA6BD,KAA7B,EAAP;AACH,CAVM","sourcesContent":["import React, { FC, useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { TabItem as BaseTabItem, button2, buttonFocused } from '@sberdevices/plasma-core';\nimport type { TabItemProps as BaseTabItemProps, AsProps } from '@sberdevices/plasma-core';\n\nimport { useTabsAnimationContext } from './TabsAnimationContext';\nimport { StyledSlider, activeItemStyle } from './TabsSlider';\n\nexport interface TabItemProps extends AsProps, BaseTabItemProps {\n    animated?: boolean;\n}\n\n/**\n * Элемент списка, недопустимо использовать вне компонента Tabs.\n */\nexport const StyledTabItem = styled(BaseTabItem)<TabItemProps>`\n    ${button2};\n\n    position: relative;\n\n    /**\n    * Определенные на компоненте Tabs css vars используем тут,\n    * потому что у айтемов нет свойства size,\n    * чтобы не приходилось передавать кучу пропсов\n    * на компонентах контейнере (Tabs) и элементах (TabItem).\n    */\n    height: var(--tab-item-height);\n    padding: var(--tab-item-padding-y) var(--tab-item-padding-x);\n\n    border-radius: var(--tab-item-border-radius);\n    transition: ${({ theme }) =>\n        theme.lowPerformance ? 'unset' : 'background-color 0.3s ease-in-out, transform 0.1s ease-in-out'};\n\n    /**\n    * При нажатии слайдер также прожимается\n    */\n    &:active ~ ${StyledSlider} {\n        transform: ${({ disabled }) => (disabled ? 'none' : 'scale(0.96)')};\n    }\n\n    /**\n    * Если анимация отключена\n    */\n    ${({ animated, isActive }) =>\n        !animated &&\n        isActive &&\n        css`\n            ${activeItemStyle}\n        `}\n\n    &::before {\n        content: '';\n\n        position: absolute;\n        top: calc(var(--tab-focus-border-size) * -1);\n        left: calc(var(--tab-focus-border-size) * -1);\n        right: calc(var(--tab-focus-border-size) * -1);\n        bottom: calc(var(--tab-focus-border-size) * -1);\n\n        display: block;\n        box-sizing: content-box;\n\n        border: var(--tab-focus-border-size) solid transparent;\n        border-radius: var(--tab-item-outline-radius);\n\n        transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'box-shadow 0.2s ease-in-out')};\n\n        pointer-events: none;\n    }\n\n    &.focus-visible,\n    &[data-focus-visible-added] {\n        &::before {\n            box-shadow: 0 0 0 var(--tab-focus-border-size) ${buttonFocused};\n        }\n    }\n`;\n\n/**\n * Элемент списка вкладок, недопустимо использовать вне компонента Tabs.\n */\nexport const TabItem: FC<TabItemProps> = (props) => {\n    const ref = useRef<HTMLElement>(null);\n    const { refs } = useTabsAnimationContext();\n\n    useEffect(() => {\n        refs?.register(ref);\n        return () => refs?.unregister(ref);\n    }, [refs]);\n\n    return <StyledTabItem ref={ref} {...props} />;\n};\n"],"file":"TabItem.js"}