import type { ButtonProps as BaseProps, ButtonContentProps, ButtonSizeProps, ButtonViewProps } from '@sberdevices/plasma-core';
import { InteractionProps } from '../../mixins';
export declare type ButtonProps = BaseProps & ButtonContentProps & Partial<ButtonSizeProps> & Partial<ButtonViewProps> & InteractionProps;
/**
 * Основной компонент для отображения кнопок.
 * Поддерживает несколько режимов отображения (`view`) и размеров (`size`).
 */
export declare const Button: import("react").ForwardRefExoticComponent<(BaseProps<HTMLElement> & {
    text?: import("react").ReactNode;
    contentLeft?: import("react").ReactNode;
    contentRight?: undefined;
    children?: undefined;
} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"primary" | "secondary" | "warning" | "checked" | "success" | "critical" | "overlay" | "clear">> & InteractionProps & import("react").RefAttributes<HTMLButtonElement>) | (BaseProps<HTMLElement> & {
    text?: import("react").ReactNode;
    contentLeft?: undefined;
    contentRight?: import("react").ReactNode;
    children?: undefined;
} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"primary" | "secondary" | "warning" | "checked" | "success" | "critical" | "overlay" | "clear">> & InteractionProps & import("react").RefAttributes<HTMLButtonElement>) | (BaseProps<HTMLElement> & {
    text?: undefined;
    contentLeft?: undefined;
    contentRight?: undefined;
    children?: import("react").ReactNode;
} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"primary" | "secondary" | "warning" | "checked" | "success" | "critical" | "overlay" | "clear">> & InteractionProps & import("react").RefAttributes<HTMLButtonElement>)>;
//# sourceMappingURL=Button.d.ts.map