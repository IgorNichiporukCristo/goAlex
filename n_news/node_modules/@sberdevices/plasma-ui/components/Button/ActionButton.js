"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionButton = void 0;

var _styledComponents = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@sberdevices/plasma-core");

var _mixins = /*#__PURE__*/require("../../mixins");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var buttonSizes = {
  l: {
    height: 'var(--plasma-actionbutton-l-height)',
    paddingY: 'var(--plasma-actionbutton-l-padding-y)',
    paddingX: 'var(--plasma-actionbutton-l-padding-x)',
    paddingContentX: 'var(--plasma-actionbutton-l-padding-content-x)',
    paddingStretchX: 'var(--plasma-actionbutton-l-padding-stretch-x)',
    radius: 'var(--plasma-actionbutton-l-radius)',
    radiusCircle: 'var(--plasma-actionbutton-l-radius-circle)'
  },
  m: {
    height: 'var(--plasma-actionbutton-m-height)',
    paddingY: 'var(--plasma-actionbutton-m-padding-y)',
    paddingX: 'var(--plasma-actionbutton-m-padding-x)',
    paddingContentX: 'var(--plasma-actionbutton-m-padding-content-x)',
    paddingStretchX: 'var(--plasma-actionbutton-m-padding-stretch-x)',
    radius: 'var(--plasma-actionbutton-m-radius)',
    radiusCircle: 'var(--plasma-actionbutton-m-radius-circle)'
  },
  s: {
    height: 'var(--plasma-actionbutton-s-height)',
    paddingY: 'var(--plasma-actionbutton-s-padding-y)',
    paddingX: 'var(--plasma-actionbutton-s-padding-x)',
    paddingContentX: 'var(--plasma-actionbutton-s-padding-content-x)',
    paddingStretchX: 'var(--plasma-actionbutton-s-padding-stretch-x)',
    radius: 'var(--plasma-actionbutton-s-radius)',
    radiusCircle: 'var(--plasma-actionbutton-s-radius-circle)'
  }
};
var buttonTypography = {
  xs: _plasmaCore.button2,
  xxs: _plasmaCore.caption,
  xxxs: _plasmaCore.caption
};
var applySizes = /*#__PURE__*/(0, _plasmaCore.getButtonSizesMixin)(buttonSizes, buttonTypography);

var applyViews = function applyViews(_ref) {
  var view = _ref.view;
  return _plasmaCore.buttonViews[view];
};

var StyledButtonRoot = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.ButtonRoot).withConfig({
  componentId: "plasma-ui__sc-yuc3mq-0"
})(["", " ", " ", " ", ""], applySizes, applyViews, _mixins.applyInteraction, _plasmaCore.applyNoSelect);
/**
 * Кнопка для размещения внутри карточек.
 * Упрощенная версия ``Button`` для создания квадратных кнопок (с соотношением сторон 1:1).
 * Размеры ``ActionButton`` меньше размеров ``Button``.
 * Обладает теми же цветами, размерами и модификаторами, что и основная кнопка.
 */

var ActionButton = /*#__PURE__*/(0, _plasmaCore.createButton)(StyledButtonRoot);
exports.ActionButton = ActionButton;
ActionButton.defaultProps = {
  size: 'm',
  view: 'secondary',
  pin: 'square-square',
  square: true,
  outlined: true,
  scaleOnInteraction: true
};
//# sourceMappingURL=ActionButton.js.map