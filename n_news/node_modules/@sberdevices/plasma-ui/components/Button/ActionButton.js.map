{"version":3,"sources":["../../src/components/Button/ActionButton.tsx"],"names":["buttonSizes","l","height","paddingY","paddingX","paddingContentX","paddingStretchX","radius","radiusCircle","m","s","buttonTypography","xs","button2","xxs","caption","xxxs","applySizes","applyViews","view","buttonViews","StyledButtonRoot","ButtonRoot","applyInteraction","applyNoSelect","ActionButton","defaultProps","size","pin","square","outlined","scaleOnInteraction"],"mappings":";;;;;;;AAAA;;AACA;;AAWA;;;;AAOA,IAAMA,WAAW,GAAG;AAChBC,EAAAA,CAAC,EAAE;AACCC,IAAAA,MAAM,EAAE,qCADT;AAECC,IAAAA,QAAQ,EAAE,wCAFX;AAGCC,IAAAA,QAAQ,EAAE,wCAHX;AAICC,IAAAA,eAAe,EAAE,gDAJlB;AAKCC,IAAAA,eAAe,EAAE,gDALlB;AAMCC,IAAAA,MAAM,EAAE,qCANT;AAOCC,IAAAA,YAAY,EAAE;AAPf,GADa;AAUhBC,EAAAA,CAAC,EAAE;AACCP,IAAAA,MAAM,EAAE,qCADT;AAECC,IAAAA,QAAQ,EAAE,wCAFX;AAGCC,IAAAA,QAAQ,EAAE,wCAHX;AAICC,IAAAA,eAAe,EAAE,gDAJlB;AAKCC,IAAAA,eAAe,EAAE,gDALlB;AAMCC,IAAAA,MAAM,EAAE,qCANT;AAOCC,IAAAA,YAAY,EAAE;AAPf,GAVa;AAmBhBE,EAAAA,CAAC,EAAE;AACCR,IAAAA,MAAM,EAAE,qCADT;AAECC,IAAAA,QAAQ,EAAE,wCAFX;AAGCC,IAAAA,QAAQ,EAAE,wCAHX;AAICC,IAAAA,eAAe,EAAE,gDAJlB;AAKCC,IAAAA,eAAe,EAAE,gDALlB;AAMCC,IAAAA,MAAM,EAAE,qCANT;AAOCC,IAAAA,YAAY,EAAE;AAPf;AAnBa,CAApB;AA6BA,IAAMG,gBAAgB,GAAG;AACrBC,EAAAA,EAAE,EAAEC,mBADiB;AAErBC,EAAAA,GAAG,EAAEC,mBAFgB;AAGrBC,EAAAA,IAAI,EAAED;AAHe,CAAzB;AAMA,IAAME,UAAU,gBAAG,qCAAoBjB,WAApB,EAAiCW,gBAAjC,CAAnB;;AACA,IAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAA+BC,wBAAYD,IAAZ,CAA/B;AAAA,CAAnB;;AAEA,IAAME,gBAAgB,gBAAG,kCAAOC,sBAAP,CAAH;AAAA;AAAA,4BAChBL,UADgB,EAEhBC,UAFgB,EAGhBK,wBAHgB,EAIhBC,yBAJgB,CAAtB;AAOA;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMC,YAAY,gBAAG,8BAAmDJ,gBAAnD,CAArB;;AAEPI,YAAY,CAACC,YAAb,GAA4B;AACxBC,EAAAA,IAAI,EAAE,GADkB;AAExBR,EAAAA,IAAI,EAAE,WAFkB;AAGxBS,EAAAA,GAAG,EAAE,eAHmB;AAIxBC,EAAAA,MAAM,EAAE,IAJgB;AAKxBC,EAAAA,QAAQ,EAAE,IALc;AAMxBC,EAAAA,kBAAkB,EAAE;AANI,CAA5B","sourcesContent":["import styled from 'styled-components';\nimport {\n    createButton,\n    ButtonRoot,\n    getButtonSizesMixin,\n    buttonViews,\n    applyNoSelect,\n    button2,\n    caption,\n} from '@sberdevices/plasma-core';\nimport type { ButtonProps as BaseProps, ButtonSizeProps, ButtonViewProps, PinProps } from '@sberdevices/plasma-core';\n\nimport { applyInteraction, InteractionProps } from '../../mixins';\n\nexport type ActionButtonProps = Omit<BaseProps, 'stretch' | 'pin'> &\n    Partial<ButtonSizeProps> &\n    Partial<ButtonViewProps> &\n    InteractionProps & { pin?: Extract<PinProps['pin'], 'square-square' | 'circle-circle'> };\n\nconst buttonSizes = {\n    l: {\n        height: 'var(--plasma-actionbutton-l-height)',\n        paddingY: 'var(--plasma-actionbutton-l-padding-y)',\n        paddingX: 'var(--plasma-actionbutton-l-padding-x)',\n        paddingContentX: 'var(--plasma-actionbutton-l-padding-content-x)',\n        paddingStretchX: 'var(--plasma-actionbutton-l-padding-stretch-x)',\n        radius: 'var(--plasma-actionbutton-l-radius)',\n        radiusCircle: 'var(--plasma-actionbutton-l-radius-circle)',\n    },\n    m: {\n        height: 'var(--plasma-actionbutton-m-height)',\n        paddingY: 'var(--plasma-actionbutton-m-padding-y)',\n        paddingX: 'var(--plasma-actionbutton-m-padding-x)',\n        paddingContentX: 'var(--plasma-actionbutton-m-padding-content-x)',\n        paddingStretchX: 'var(--plasma-actionbutton-m-padding-stretch-x)',\n        radius: 'var(--plasma-actionbutton-m-radius)',\n        radiusCircle: 'var(--plasma-actionbutton-m-radius-circle)',\n    },\n    s: {\n        height: 'var(--plasma-actionbutton-s-height)',\n        paddingY: 'var(--plasma-actionbutton-s-padding-y)',\n        paddingX: 'var(--plasma-actionbutton-s-padding-x)',\n        paddingContentX: 'var(--plasma-actionbutton-s-padding-content-x)',\n        paddingStretchX: 'var(--plasma-actionbutton-s-padding-stretch-x)',\n        radius: 'var(--plasma-actionbutton-s-radius)',\n        radiusCircle: 'var(--plasma-actionbutton-s-radius-circle)',\n    },\n};\nconst buttonTypography = {\n    xs: button2,\n    xxs: caption,\n    xxxs: caption,\n};\n\nconst applySizes = getButtonSizesMixin(buttonSizes, buttonTypography);\nconst applyViews = ({ view }: ButtonViewProps) => buttonViews[view];\n\nconst StyledButtonRoot = styled(ButtonRoot)<InteractionProps>`\n    ${applySizes}\n    ${applyViews}\n    ${applyInteraction}\n    ${applyNoSelect}\n`;\n\n/**\n * Кнопка для размещения внутри карточек.\n * Упрощенная версия ``Button`` для создания квадратных кнопок (с соотношением сторон 1:1).\n * Размеры ``ActionButton`` меньше размеров ``Button``.\n * Обладает теми же цветами, размерами и модификаторами, что и основная кнопка.\n */\nexport const ActionButton = createButton<HTMLButtonElement, ActionButtonProps>(StyledButtonRoot);\n\nActionButton.defaultProps = {\n    size: 'm',\n    view: 'secondary',\n    pin: 'square-square',\n    square: true,\n    outlined: true,\n    scaleOnInteraction: true,\n};\n"],"file":"ActionButton.js"}