"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextField = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@sberdevices/plasma-core");

var _Field = /*#__PURE__*/require("../Field");

var _excluded = ["id", "size", "disabled", "status", "label", "placeholder", "contentLeft", "contentRight", "helperText", "style", "className"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var StyledInput = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.Input).withConfig({
  componentId: "plasma-ui__sc-1vvf73-0"
})(["", " border-radius:1rem;"], _Field.applyInputStyles);
/**
 * Поле ввода текста.
 */
// eslint-disable-next-line prefer-arrow-callback

var TextField = /*#__PURE__*/(0, _react.forwardRef)(function TextField(_ref, ref) {
  var id = _ref.id,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'l' : _ref$size,
      disabled = _ref.disabled,
      status = _ref.status,
      label = _ref.label,
      placeholder = _ref.placeholder,
      contentLeft = _ref.contentLeft,
      contentRight = _ref.contentRight,
      helperText = _ref.helperText,
      style = _ref.style,
      className = _ref.className,
      rest = _objectWithoutProperties(_ref, _excluded);

  var placeLabel = label || placeholder;
  return /*#__PURE__*/_react["default"].createElement(_plasmaCore.FieldRoot, {
    $size: size,
    $disabled: disabled,
    $isContentLeft: Boolean(contentLeft),
    $isContentRight: Boolean(contentRight),
    $isHelper: Boolean(helperText),
    status: status,
    style: style,
    className: className
  }, contentLeft && /*#__PURE__*/_react["default"].createElement(_plasmaCore.FieldContent, {
    pos: "left"
  }, contentLeft), /*#__PURE__*/_react["default"].createElement(StyledInput, _extends({
    $size: size,
    ref: ref,
    id: id,
    placeholder: placeLabel,
    disabled: disabled,
    status: status,
    "aria-describedby": id ? "".concat(id, "-helpertext") : undefined
  }, rest)), placeLabel && size === 'l' && /*#__PURE__*/_react["default"].createElement(_plasmaCore.FieldPlaceholder, {
    htmlFor: id
  }, placeLabel), contentRight && /*#__PURE__*/_react["default"].createElement(_plasmaCore.FieldContent, {
    pos: "right"
  }, contentRight), helperText && /*#__PURE__*/_react["default"].createElement(_Field.FieldHelper, {
    id: id ? "".concat(id, "-helpertext") : undefined
  }, helperText));
});
exports.TextField = TextField;
//# sourceMappingURL=TextField.js.map