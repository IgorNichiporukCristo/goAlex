{"version":3,"sources":["../../src/components/Header/HeaderArrow.tsx"],"names":["StyledButton","Button","theme","deviceScale","css","StyledIcon","IconChevronLeft","lowPerformance","arrow","HeaderArrow","iconSize","rest"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;AAYA,IAAMA,YAAY,gBAAG,kCAAOC,cAAP,CAAH;AAAA;AAAA,gHASZ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACE,4BACI,GADJ,EAEIA,KAAK,CAACC,WAFV,MAGEC,qBAHF,0MADF;AAAA,CATY,CAAlB;AAsBA,IAAMC,UAAU,gBAAG,kCAAOC,4BAAP,CAAH;AAAA;AAAA,6BACE;AAAA,MAAGJ,KAAH,SAAGA,KAAH;AAAA,SAAgBA,KAAK,CAACK,cAAN,GAAuB,OAAvB,GAAiC,6BAAjD;AAAA,CADF,EAGV;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SACEA,KAAK,KAAK,UAAV,QACAJ,qBADA,gCADF;AAAA,CAHU,CAAhB;AAUA;AACA;AACA;;AACO,IAAMK,WAAuC,GAAG,SAA1CA,WAA0C;AAAA,MAAGD,KAAH,SAAGA,KAAH;AAAA,6BAAUE,QAAV;AAAA,MAAUA,QAAV,+BAAqB,GAArB;AAAA,MAA6BC,IAA7B;;AAAA,sBACnD,gCAAC,YAAD;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAuB,IAAA,MAAM,MAA7B;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAA2C,IAAA,QAAQ,EAAE,CAAC,CAAtD;AAAyD,IAAA,QAAQ,EAAE,KAAnE;AAA0E,IAAA,WAAW,EAAC;AAAtF,KAAgGA,IAAhG,gBACI,gCAAC,UAAD;AAAY,IAAA,IAAI,EAAED,QAAlB;AAA4B,IAAA,KAAK,EAAEF;AAAnC,IADJ,CADmD;AAAA,CAAhD","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { IconChevronLeft, IconSize } from '@sberdevices/plasma-icons';\nimport type { PickOptional } from '@sberdevices/plasma-core';\nimport { mediaQuery } from '@sberdevices/plasma-core';\n\nimport { Button, ButtonProps } from '../Button';\n\nexport interface HeaderArrowProps\n    extends PickOptional<ButtonProps, 'as' | 'size' | 'scaleOnInteraction' | 'disabled'>,\n        React.ButtonHTMLAttributes<HTMLButtonElement> {\n    /**\n     * Тип стрелки.\n     */\n    arrow: 'back' | 'minimize';\n    iconSize?: IconSize;\n}\n\nconst StyledButton = styled(Button)`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    margin-top: auto;\n    margin-bottom: auto;\n    right: 100%;\n    margin-right: 0.5rem;\n\n    ${({ theme }) =>\n        mediaQuery(\n            'S',\n            theme.deviceScale,\n        )(css`\n            position: static;\n            width: auto;\n            height: calc(var(--plasma-header-pt) + var(--plasma-header-height) + var(--plasma-header-pb));\n            padding: 0;\n            margin-right: 1rem;\n            margin-top: calc(var(--plasma-header-pt) * -1);\n        `)}\n`;\nconst StyledIcon = styled(IconChevronLeft)<Pick<HeaderArrowProps, 'arrow'>>`\n    transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'transform 0.15s ease-in-out')};\n\n    ${({ arrow }) =>\n        arrow === 'minimize' &&\n        css`\n            transform: rotate(-90deg);\n        `}\n`;\n\n/**\n * Кнопка-стрелка с возможностью отображения в двух типах - \"назад\" или \"свернуть\".\n */\nexport const HeaderArrow: React.FC<HeaderArrowProps> = ({ arrow, iconSize = 's', ...rest }) => (\n    <StyledButton size=\"s\" square view=\"clear\" tabIndex={-1} outlined={false} forwardedAs=\"div\" {...rest}>\n        <StyledIcon size={iconSize} arrow={arrow} />\n    </StyledButton>\n);\n"],"file":"HeaderArrow.js"}