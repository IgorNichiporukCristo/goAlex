"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NeuHeader = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _HeaderRoot = /*#__PURE__*/require("./HeaderRoot");

var _HeaderArrow = /*#__PURE__*/require("./HeaderArrow");

var _HeaderLogo = /*#__PURE__*/require("./HeaderLogo");

var _HeaderSubtitle = /*#__PURE__*/require("./HeaderSubtitle");

var _HeaderTitle = /*#__PURE__*/require("./HeaderTitle");

var _HeaderTitleWrapper = /*#__PURE__*/require("./HeaderTitleWrapper");

var _HeaderContent = /*#__PURE__*/require("./HeaderContent");

var _excluded = ["arrow", "onArrowClick", "logo", "logoAlt", "title", "subTitle", "children"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Сборный компонент для отрисовки шапки страницы.
 * Уже включает в себя все составные части шапки.
 * Компонент реализован для упрощения работы с шапкой при разработке проекта на Typescript.
 * Изменения в свойствах:
 * * Имеет упрощенный интерфейс - свойства `back` и `minimize` заменены на свойство `arrow`;
 * * Обработчики клика по стрелке `onBackClick` и `onMinimizeClick` заменены на обработчик `onArrowClick`;
 * * Свойство `subtitle` переименовано в `subTitle`.
 * `NeuHeader` заменит собой исходный `Header` в будущих версиях.
 */
var NeuHeader = function NeuHeader(_ref) {
  var arrow = _ref.arrow,
      onArrowClick = _ref.onArrowClick,
      logo = _ref.logo,
      logoAlt = _ref.logoAlt,
      title = _ref.title,
      subTitle = _ref.subTitle,
      children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react["default"].createElement(_HeaderRoot.HeaderRoot, rest, /*#__PURE__*/_react["default"].createElement(_HeaderArrow.HeaderArrow, {
    onClick: onArrowClick,
    arrow: arrow
  }), logo && /*#__PURE__*/_react["default"].createElement(_HeaderLogo.HeaderLogo, {
    src: logo,
    alt: logoAlt
  }), title && /*#__PURE__*/_react["default"].createElement(_HeaderTitleWrapper.HeaderTitleWrapper, null, /*#__PURE__*/_react["default"].createElement(_HeaderTitle.HeaderTitle, null, title), subTitle && /*#__PURE__*/_react["default"].createElement(_HeaderSubtitle.HeaderSubtitle, null, subTitle)), children && /*#__PURE__*/_react["default"].createElement(_HeaderContent.HeaderContent, null, children));
};

exports.NeuHeader = NeuHeader;
//# sourceMappingURL=NeuHeader.js.map