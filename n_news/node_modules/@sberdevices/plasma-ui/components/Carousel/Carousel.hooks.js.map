{"version":3,"sources":["../../src/components/Carousel/Carousel.hooks.tsx"],"names":["throttlingParamsDefault","leading","trailing","useRemoteHandlers","initialIndex","axis","delay","longDelay","min","max","count","longCount","throttlingParams","indexState","React","useState","setIndex","step","useCallback","cmd","prevIndex","jump","key","ev","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport throttle from 'lodash.throttle';\nimport { ScrollAxis } from '@sberdevices/plasma-core';\n\nimport { useRemoteListener } from '../../hooks';\n\nconst throttlingParamsDefault = {\n    leading: true,\n    trailing: false,\n};\n\nexport { useCarouselContext, useCarouselItem } from '@sberdevices/plasma-core';\n\n/**\n * Хук для навигации. Слушает нажатие кнопок на пульте/клавиатуре.\n */\nexport function useRemoteHandlers({\n    initialIndex = 0,\n    axis,\n    delay,\n    longDelay,\n    min,\n    max,\n    count = 1,\n    longCount = 5,\n    throttlingParams = throttlingParamsDefault,\n}: {\n    initialIndex: number;\n    axis: ScrollAxis;\n    delay: number;\n    longDelay: number;\n    min: number;\n    max: number;\n    count?: number;\n    longCount?: number;\n    throttlingParams?: typeof throttlingParamsDefault;\n}) {\n    const indexState = React.useState(initialIndex);\n    const [, setIndex] = indexState;\n\n    const step = React.useCallback(\n        throttle(\n            (cmd: '+' | '-') =>\n                setIndex((prevIndex) => {\n                    if (cmd === '+') {\n                        return prevIndex + count <= max ? prevIndex + count : min;\n                    }\n                    return prevIndex - count >= min ? prevIndex - count : max;\n                }),\n            delay,\n            throttlingParams,\n        ),\n        [min, max],\n    );\n    const jump = React.useCallback(\n        throttle(\n            (cmd: '+' | '-') =>\n                setIndex((prevIndex) => {\n                    if (cmd === '+') {\n                        return prevIndex + longCount <= max ? prevIndex + longCount : min;\n                    }\n                    return prevIndex - longCount >= min ? prevIndex - longCount : max;\n                }),\n            longDelay,\n            throttlingParams,\n        ),\n        [min, max],\n    );\n\n    useRemoteListener((key, ev) => {\n        ev.preventDefault();\n        if (axis === 'x') {\n            switch (key) {\n                case 'LEFT':\n                    step('-');\n                    break;\n                case 'RIGHT':\n                    step('+');\n                    break;\n                case 'LONG_LEFT':\n                    jump('-');\n                    break;\n                case 'LONG_RIGHT':\n                    jump('+');\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            switch (key) {\n                case 'UP':\n                    step('-');\n                    break;\n                case 'DOWN':\n                    step('+');\n                    break;\n                case 'LONG_UP':\n                    jump('-');\n                    break;\n                case 'LONG_DOWN':\n                    jump('+');\n                    break;\n                default:\n                    break;\n            }\n        }\n    });\n\n    return indexState;\n}\n"],"file":"Carousel.hooks.js"}