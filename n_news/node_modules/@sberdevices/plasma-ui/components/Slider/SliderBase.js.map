{"version":3,"sources":["../../src/components/Slider/SliderBase.tsx"],"names":["handleDiameter","handleBorderWidth","railHeight","railBorderRadius","indentation","Slider","styled","div","disabled","css","Rail","surfaceLiquid03","Fill","buttonAccent","SliderBase","max","min","setStepSize","railFillWidth","children","railFillXPosition","ref","React","useRef","theme","useContext","ThemeContext","useLayoutEffect","resizeHandler","current","rootElementFontSize","deviceScale","sberPortalScale","scalingPixelBasis","railSize","offsetWidth","totalSteps","window","addEventListener","removeEventListener","left","width"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,cAAc,GAAG,GAAvB;;AACA,IAAMC,iBAAiB,GAAG,MAA1B;;AACA,IAAMC,UAAU,GAAG,IAAnB;;AACA,IAAMC,gBAAgB,GAAGD,UAAU,GAAG,CAAtC;;AACA,IAAME,WAAW,GAAGJ,cAAc,GAAG,CAAjB,GAAqBC,iBAAzC;;;AAWP,IAAMI,MAAM,gBAAGC,6BAAOC,GAAV;AAAA;AAAA,gEAIN;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACEA,QAAQ,QACRC,qBADQ,mBADV;AAAA,CAJM,CAAZ;;AAWA,IAAMC,IAAI,gBAAGJ,6BAAOC,GAAV;AAAA;AAAA,kLAEIL,UAFJ,EAGWC,gBAHX,EAIcQ,6BAJd,EAOSP,WAPT,EAQUA,WARV,CAAV;;AAYA,IAAMQ,IAAI,gBAAGN,6BAAOC,GAAV;AAAA;AAAA,kFAKcM,0BALd,CAAV;;AASO,IAAMC,UAAiC,GAAG,SAApCA,UAAoC,QAQ3C;AAAA,MAPFC,GAOE,SAPFA,GAOE;AAAA,MANFC,GAME,SANFA,GAME;AAAA,MALFC,WAKE,SALFA,WAKE;AAAA,MAJFC,aAIE,SAJFA,aAIE;AAAA,MAHFC,QAGE,SAHFA,QAGE;AAAA,oCAFFC,iBAEE;AAAA,MAFFA,iBAEE,sCAFkB,CAElB;AAAA,MADFZ,QACE,SADFA,QACE;;AACF,MAAMa,GAAG,GAAGC,kBAAMC,MAAN,CAAoC,IAApC,CAAZ;;AACA,MAAMC,KAAK,GAAGF,kBAAMG,UAAN,CAAiBC,8BAAjB,CAAd;;AAEAJ,oBAAMK,eAAN,CAAsB,YAAM;AACxB,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,UAAIP,GAAG,CAACQ,OAAR,EAAiB;AAAA;;AACb,YAAMC,mBAAmB,GAAG,uBAACN,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEO,WAAR,mEAAuBC,6BAAvB,IAA0CC,+BAAtE;AACA,YAAMC,QAAQ,GAAGb,GAAG,CAACQ,OAAJ,CAAYM,WAAZ,GAA0B/B,WAAW,GAAG0B,mBAAd,GAAoC,CAA/E;AACA,YAAMM,UAAU,GAAGrB,GAAG,GAAGC,GAAzB;AACAC,QAAAA,WAAW,CAACiB,QAAQ,GAAGE,UAAZ,CAAX;AACH;AACJ,KAPD;;AAQAR,IAAAA,aAAa;AACbS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCV,aAAlC;AACA,WAAO;AAAA,aAAMS,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCX,aAArC,CAAN;AAAA,KAAP;AACH,GAZD,EAYG,CAACZ,GAAD,EAAMD,GAAN,EAAWE,WAAX,CAZH;;AAcA,sBACI,gCAAC,MAAD;AAAQ,IAAA,QAAQ,EAAET,QAAlB;AAA4B,IAAA,GAAG,EAAEa;AAAjC,kBACI,gCAAC,IAAD,qBACI,gCAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmB,MAAAA,IAAI,YAAKpB,iBAAL,OAAN;AAAkCqB,MAAAA,KAAK,YAAKvB,aAAL;AAAvC;AAAb,IADJ,CADJ,EAIKC,QAJL,CADJ;AAQH,CAlCM","sourcesContent":["import React from 'react';\nimport styled, { css, ThemeContext } from 'styled-components';\nimport { surfaceLiquid03, buttonAccent, scalingPixelBasis, sberPortalScale } from '@sberdevices/plasma-tokens';\n\nexport const handleDiameter = 1.5;\nexport const handleBorderWidth = 0.0625;\nexport const railHeight = 0.25;\nexport const railBorderRadius = railHeight / 2;\nexport const indentation = handleDiameter / 2 + handleBorderWidth;\n\ninterface SliderProps {\n    min: number;\n    max: number;\n    railFillWidth: number;\n    railFillXPosition?: number;\n    disabled?: boolean;\n    setStepSize(stepSize: number): void;\n}\n\nconst Slider = styled.div<{ disabled?: boolean }>`\n    position: relative;\n    height: 1.625rem;\n    user-select: none;\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            opacity: 0.4;\n        `}\n`;\n\nconst Rail = styled.div`\n    position: relative;\n    height: ${railHeight}rem;\n    border-radius: ${railBorderRadius}rem;\n    background-color: ${surfaceLiquid03};\n    overflow: hidden;\n    top: 50%;\n    margin-left: ${indentation}rem;\n    margin-right: ${indentation}rem;\n    transform: translateY(-50%);\n`;\n\nconst Fill = styled.div`\n    position: absolute;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: ${buttonAccent};\n    width: 0;\n`;\n\nexport const SliderBase: React.FC<SliderProps> = ({\n    max,\n    min,\n    setStepSize,\n    railFillWidth,\n    children,\n    railFillXPosition = 0,\n    disabled,\n}) => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n    const theme = React.useContext(ThemeContext);\n\n    React.useLayoutEffect(() => {\n        const resizeHandler = () => {\n            if (ref.current) {\n                const rootElementFontSize = (theme?.deviceScale ?? sberPortalScale) * scalingPixelBasis;\n                const railSize = ref.current.offsetWidth - indentation * rootElementFontSize * 2;\n                const totalSteps = max - min;\n                setStepSize(railSize / totalSteps);\n            }\n        };\n        resizeHandler();\n        window.addEventListener('resize', resizeHandler);\n        return () => window.removeEventListener('resize', resizeHandler);\n    }, [min, max, setStepSize]);\n\n    return (\n        <Slider disabled={disabled} ref={ref}>\n            <Rail>\n                <Fill style={{ left: `${railFillXPosition}px`, width: `${railFillWidth}px` }} />\n            </Rail>\n            {children}\n        </Slider>\n    );\n};\n"],"file":"SliderBase.js"}