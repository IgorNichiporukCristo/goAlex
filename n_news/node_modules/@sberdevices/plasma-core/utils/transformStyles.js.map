{"version":3,"sources":["../src/utils/transformStyles.ts"],"names":["uppercaseCheck","uppercasePattern","prefixAndLowerCase","char","toLowerCase","hyphenate","str","test","replace","transformStyles","styles","Object","entries","map","key","value","join"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAG,SAAvB;AACA,IAAMC,gBAAgB,GAAG,UAAzB;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD;AAAA,oBAA8BA,KAAI,CAACC,WAAL,EAA9B;AAAA,CAA3B;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,SAAkBN,cAAc,CAACO,IAAf,CAAoBD,GAApB,IAA2BA,GAAG,CAACE,OAAJ,CAAYP,gBAAZ,EAA8BC,kBAA9B,CAA3B,GAA+EI,GAAjG;AAAA,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD;AAAA,SAC3BC,MAAM,CAACC,OAAP,CAAeF,MAAf,EACKG,GADL,CACS;AAAA;AAAA,QAAEC,GAAF;AAAA,QAAOC,KAAP;;AAAA,qBAAqBV,SAAS,CAACS,GAAD,CAA9B,eAAwCC,KAAxC;AAAA,GADT,EAEKC,IAFL,CAEU,GAFV,CAD2B;AAAA,CAAxB","sourcesContent":["const uppercaseCheck = /([A-Z])/;\nconst uppercasePattern = /([A-Z])/g;\nconst prefixAndLowerCase = (char: string): string => `-${char.toLowerCase()}`;\nconst hyphenate = (str: string) => (uppercaseCheck.test(str) ? str.replace(uppercasePattern, prefixAndLowerCase) : str);\n\n/**\n * Транформирует объект стилей,\n * оставляя значения как есть (например, не добавляя \"px\" к числам),\n * а ключи переводя в kebab-case.\n * Подходит для подготовки типографической темы.\n */\nexport const transformStyles = (styles: object) =>\n    Object.entries(styles)\n        .map(([key, value]) => `${hyphenate(key)}: ${value}`)\n        .join(';');\n"],"file":"transformStyles.js"}