{"version":3,"sources":["../src/utils/mediaQuery.ts"],"names":["breakpoints","XL","L","M","S","columns","margins","gutters","sizes","Object","keys","mediaQuery","breakpoint","deviceScale","index","indexOf","nextBreakpoint","min","max","content","css"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,WAAW,GAAG;AACvBC,EAAAA,EAAE,EAAE,GADmB;AACd;AACTC,EAAAA,CAAC,EAAE,GAFoB;AAEf;AACRC,EAAAA,CAAC,EAAE,GAHoB;AAGf;AACRC,EAAAA,CAAC,EAAE,CAJoB,CAIjB;;AAJiB,CAApB;;AAMA,IAAMC,OAAO,GAAG;AACnBJ,EAAAA,EAAE,EAAE,EADe;AAEnBC,EAAAA,CAAC,EAAE,CAFgB;AAGnBC,EAAAA,CAAC,EAAE,CAHgB;AAInBC,EAAAA,CAAC,EAAE;AAJgB,CAAhB;;AAMA,IAAME,OAAO,GAAG;AACnBL,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,CAAC,EAAE,GAFgB;AAGnBC,EAAAA,CAAC,EAAE,GAHgB;AAInBC,EAAAA,CAAC,EAAE;AAJgB,CAAhB;;AAMA,IAAMG,OAAO,GAAG;AACnBN,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,CAAC,EAAE,CAFgB;AAGnBC,EAAAA,CAAC,EAAE,CAHgB;AAInBC,EAAAA,CAAC,EAAE;AAJgB,CAAhB;;AAUA,IAAMI,KAAK,gBAAGC,MAAM,CAACC,IAAP,CAAYV,WAAZ,CAAd;AAEP;AACA;AACA;;;;AACO,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAiE;AAAA,MAAxCC,WAAwC,uEAA1B,CAA0B;AACvF,MAAMC,KAAK,GAAGN,KAAK,CAACO,OAAN,CAAcH,UAAd,CAAd;AACA,MAAMI,cAAc,GAAGR,KAAK,CAACM,KAAK,GAAG,CAAT,CAA5B;AACA,MAAMG,GAAG,GAAGjB,WAAW,CAACY,UAAD,CAAX,GAA0B,CAA1B,GAA8BZ,WAAW,CAACY,UAAD,CAAX,GAA0BC,WAAxD,GAAsE,IAAlF;AACA,MAAMK,GAAG,GAAGlB,WAAW,CAACgB,cAAD,CAAX,GAA8B,CAAChB,WAAW,CAACgB,cAAD,CAAX,GAA8B,CAA/B,IAAoCH,WAAlE,GAAgF,IAA5F;;AAEA,MAAII,GAAG,KAAK,IAAR,IAAgBC,GAAG,KAAK,IAA5B,EAAkC;AAC9B,WAAO,UAACC,OAAD;AAAA,iBACHC,qBADG,uCAEsBF,GAFtB,EAGOC,OAHP;AAAA,KAAP;AAMH;;AAED,MAAIF,GAAG,KAAK,IAAR,IAAgBC,GAAG,KAAK,IAA5B,EAAkC;AAC9B,WAAO,UAACC,OAAD;AAAA,iBACHC,qBADG,yEAEiCH,GAFjC,EAE2DC,GAF3D,EAGOC,OAHP;AAAA,KAAP;AAMH;;AAED,SAAO,UAACA,OAAD;AAAA,eACHC,qBADG,uCAEsBH,GAFtB,EAGOE,OAHP;AAAA,GAAP;AAMH,CA9BM","sourcesContent":["import { FlattenSimpleInterpolation, css } from 'styled-components';\n\nexport const breakpoints = {\n    XL: 960, // TV\n    L: 769, // Portal 8 cols\n    M: 560, // Portal 6 cols\n    S: 0, // Mobile\n};\nexport const columns = {\n    XL: 12,\n    L: 8,\n    M: 6,\n    S: 4,\n};\nexport const margins = {\n    XL: 4,\n    L: 3.5,\n    M: 3.5,\n    S: 1,\n};\nexport const gutters = {\n    XL: 1,\n    L: 1,\n    M: 1,\n    S: 0.5,\n};\n\nexport type MediaQueryFunction = (content: FlattenSimpleInterpolation | string) => FlattenSimpleInterpolation;\nexport type Breakpoint = keyof typeof breakpoints;\n\nexport const sizes = Object.keys(breakpoints) as Breakpoint[];\n\n/**\n * Обертка над css-медиазапросами с заранее определенными брейкпоинтами.\n */\nexport const mediaQuery = (breakpoint: Breakpoint, deviceScale = 2): MediaQueryFunction => {\n    const index = sizes.indexOf(breakpoint);\n    const nextBreakpoint = sizes[index - 1] as Breakpoint;\n    const min = breakpoints[breakpoint] > 0 ? breakpoints[breakpoint] * deviceScale : null;\n    const max = breakpoints[nextBreakpoint] ? (breakpoints[nextBreakpoint] - 1) * deviceScale : null;\n\n    if (min === null && max !== null) {\n        return (content) =>\n            css`\n                @media (max-width: ${max}px) {\n                    ${content}\n                }\n            `;\n    }\n\n    if (min !== null && max !== null) {\n        return (content) =>\n            css`\n                @media screen and (min-width: ${min}px) and (max-width: ${max}px) {\n                    ${content}\n                }\n            `;\n    }\n\n    return (content) =>\n        css`\n            @media (min-width: ${min}px) {\n                ${content}\n            }\n        `;\n};\n"],"file":"mediaQuery.js"}