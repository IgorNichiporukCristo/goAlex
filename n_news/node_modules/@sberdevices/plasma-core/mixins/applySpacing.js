"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.applySpacing = exports.spacing = void 0;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var baseSpacing = {
  0: '0',
  2: '0.125rem',
  4: '0.25rem',
  8: '0.5rem',
  10: '0.625rem',
  12: '0.75rem',
  16: '1rem',
  18: '1.125rem',
  20: '1.25rem',
  24: '1.5rem',
  32: '2rem'
};

var spacing = /*#__PURE__*/_objectSpread( /*#__PURE__*/_objectSpread({}, baseSpacing), {}, {
  '0x': baseSpacing[0],
  '1x': baseSpacing[2],
  '2x': baseSpacing[4],
  '4x': baseSpacing[8],
  '5x': baseSpacing[10],
  '6x': baseSpacing[12],
  '8x': baseSpacing[16],
  '9x': baseSpacing[18],
  '10x': baseSpacing[20],
  '12x': baseSpacing[24],
  '16x': baseSpacing[32]
});

exports.spacing = spacing;

var createSpacingFn = function createSpacingFn(params) {
  return function (value) {
    return params.reduce(function (acc, cur) {
      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur, spacing[value]));
    }, {});
  };
};

var m = /*#__PURE__*/createSpacingFn(['margin']);
var mt = /*#__PURE__*/createSpacingFn(['marginTop']);
var mr = /*#__PURE__*/createSpacingFn(['marginRight']);
var ml = /*#__PURE__*/createSpacingFn(['marginLeft']);
var mb = /*#__PURE__*/createSpacingFn(['marginBottom']);
var mx = /*#__PURE__*/createSpacingFn(['marginLeft', 'marginRight']);
var my = /*#__PURE__*/createSpacingFn(['marginTop', 'marginBottom']);
var p = /*#__PURE__*/createSpacingFn(['padding']);
var pt = /*#__PURE__*/createSpacingFn(['paddingTop']);
var pr = /*#__PURE__*/createSpacingFn(['paddingRight']);
var pl = /*#__PURE__*/createSpacingFn(['paddingLeft']);
var pb = /*#__PURE__*/createSpacingFn(['paddingBottom']);
var px = /*#__PURE__*/createSpacingFn(['paddingLeft', 'paddingRight']);
var py = /*#__PURE__*/createSpacingFn(['paddingTop', 'paddingBottom']);
var spacingFns = {
  m: m,
  mt: mt,
  mr: mr,
  ml: ml,
  mb: mb,
  mx: mx,
  my: my,
  p: p,
  pt: pt,
  pr: pr,
  pl: pl,
  pb: pb,
  px: px,
  py: py
};
var spacingFnsList = /*#__PURE__*/Object.entries(spacingFns);

/**
 * Миксин для добавления пропсов стандартных отступов в компонент.
 */
var applySpacing = function applySpacing(props) {
  return spacingFnsList.reduce(function (styles, _ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        fnName = _ref2[0],
        fn = _ref2[1];

    if (fnName in props) {
      return _objectSpread(_objectSpread({}, styles), fn(props[fnName]));
    }

    return styles;
  }, {});
};

exports.applySpacing = applySpacing;
//# sourceMappingURL=applySpacing.js.map