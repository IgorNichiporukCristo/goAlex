{"version":3,"sources":["../src/mixins/applySpacing.ts"],"names":["baseSpacing","spacing","createSpacingFn","params","value","reduce","acc","cur","m","mt","mr","ml","mb","mx","my","p","pt","pr","pl","pb","px","py","spacingFns","spacingFnsList","Object","entries","applySpacing","props","styles","fnName","fn"],"mappings":"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","sourcesContent":["import type { InterpolationFunction } from 'styled-components';\n\nconst baseSpacing = {\n    0: '0',\n    2: '0.125rem',\n    4: '0.25rem',\n    8: '0.5rem',\n    10: '0.625rem',\n    12: '0.75rem',\n    16: '1rem',\n    18: '1.125rem',\n    20: '1.25rem',\n    24: '1.5rem',\n    32: '2rem',\n};\n\nexport const spacing = {\n    ...baseSpacing,\n    '0x': baseSpacing[0],\n    '1x': baseSpacing[2],\n    '2x': baseSpacing[4],\n    '4x': baseSpacing[8],\n    '5x': baseSpacing[10],\n    '6x': baseSpacing[12],\n    '8x': baseSpacing[16],\n    '9x': baseSpacing[18],\n    '10x': baseSpacing[20],\n    '12x': baseSpacing[24],\n    '16x': baseSpacing[32],\n};\n\ntype Spacing = keyof typeof spacing;\n\nconst createSpacingFn = (params: string[]) => (value: Spacing) => {\n    return params.reduce((acc, cur) => ({ ...acc, [cur]: spacing[value] }), {});\n};\n\nconst m = createSpacingFn(['margin']);\nconst mt = createSpacingFn(['marginTop']);\nconst mr = createSpacingFn(['marginRight']);\nconst ml = createSpacingFn(['marginLeft']);\nconst mb = createSpacingFn(['marginBottom']);\nconst mx = createSpacingFn(['marginLeft', 'marginRight']);\nconst my = createSpacingFn(['marginTop', 'marginBottom']);\n\nconst p = createSpacingFn(['padding']);\nconst pt = createSpacingFn(['paddingTop']);\nconst pr = createSpacingFn(['paddingRight']);\nconst pl = createSpacingFn(['paddingLeft']);\nconst pb = createSpacingFn(['paddingBottom']);\nconst px = createSpacingFn(['paddingLeft', 'paddingRight']);\nconst py = createSpacingFn(['paddingTop', 'paddingBottom']);\n\nconst spacingFns = { m, mt, mr, ml, mb, mx, my, p, pt, pr, pl, pb, px, py };\nconst spacingFnsList = Object.entries(spacingFns);\n\ntype SpacingFn = keyof typeof spacingFns;\n\nexport interface SpacingProps {\n    m?: Spacing;\n    mt?: Spacing;\n    mr?: Spacing;\n    mb?: Spacing;\n    ml?: Spacing;\n    mx?: Spacing;\n    my?: Spacing;\n    p?: Spacing;\n    pt?: Spacing;\n    pr?: Spacing;\n    pb?: Spacing;\n    pl?: Spacing;\n    px?: Spacing;\n    py?: Spacing;\n}\n\n/**\n * Миксин для добавления пропсов стандартных отступов в компонент.\n */\nexport const applySpacing: InterpolationFunction<SpacingProps> = (props) =>\n    spacingFnsList.reduce((styles, [fnName, fn]) => {\n        if (fnName in props) {\n            return { ...styles, ...fn(props[fnName as SpacingFn] as Spacing) };\n        }\n        return styles;\n    }, {});\n"],"file":"applySpacing.js"}