import { MutableRefObject } from 'react';
import { TimingFunction } from '../../utils';
import { ScrollAxis, ScrollAlign } from './types';
/**
 * Подсчет скролла до переданного индекса.
 */
export declare const getCalculatedPos: ({ scrollEl, items, axis, index, offset, scrollAlign, }: {
    scrollEl: HTMLElement;
    items: MutableRefObject<HTMLElement | null>[];
    axis: ScrollAxis;
    index: number;
    offset: number;
    scrollAlign: ScrollAlign;
}) => number;
/**
 * Подсчет смещения из-за паддингов.
 */
export declare const getCalculatedOffset: (scrollEl: Element, trackEl: Element, axis: ScrollAxis) => number;
/**
 * Прокрутка к указанной позиции с анимацией или без.
 */
export declare const scrollToPos: ({ scrollEl, pos, axis, animated, duration, timingFunction, }: {
    scrollEl: HTMLElement;
    pos: number;
    axis: ScrollAxis;
    animated?: boolean | undefined;
    duration?: number | undefined;
    timingFunction?: "linear" | "easeIn" | "easeOut" | "easeInOut" | undefined;
}) => void;
/**
 * Получить позицию (слот) айтема в каруселе.
 * Каждый айтем имеет свой слот относительно вьюпорта карусели.
 */
export declare const getItemSlot: (itemIndex: number, itemEnd: number, itemSize: number, scrollStart: number, scrollSize: number, scrollAlign: ScrollAlign, prevIndex?: number, offset?: number) => number | null;
//# sourceMappingURL=utils.d.ts.map