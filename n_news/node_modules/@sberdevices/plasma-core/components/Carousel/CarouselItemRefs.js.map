{"version":3,"sources":["../../src/components/Carousel/CarouselItemRefs.ts"],"names":["CarouselItemRefs","children","items","find","item","current","parentNode","childrenArray","Array","from","sort","a","b","indexOf","ref","push","order","length","splice"],"mappings":";;;;;;;;;;;;;;;AAEA;AACA;AACA;IACaA,gB;;;;mCAC8C,E;;;;;WAEvD,iBAAgB;AAAA;;AACZ,UAAMC,QAAQ,uBAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgB,UAACC,IAAD;AAAA;;AAAA,gCAAUA,IAAI,CAACC,OAAf,2EAAU,cAAcC,UAAxB,0DAAU,sBAA0BL,QAApC;AAAA,OAAhB,CAAH,8EAAG,iBAA+DI,OAAlE,oFAAG,sBAAwEC,UAA3E,2DAAG,uBAAoFL,QAArG;;AAEA,UAAI,CAACA,QAAL,EAAe;AACX;AACH;;AAED,UAAMM,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWR,QAAX,CAAtB;AAEA,WAAKC,KAAL,CAAWQ,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAAA;;AACtB,YAAI,cAAAD,CAAC,CAACN,OAAF,2EAAWC,UAAX,wEAAuBL,QAAvB,kBAAmCW,CAAC,CAACP,OAArC,gEAAmC,WAAWC,UAA9C,kDAAmC,sBAAuBL,QAA9D,EAAwE;AACpE,iBAAOM,aAAa,CAACM,OAAd,CAAsBF,CAAC,CAACN,OAAxB,IAAmCE,aAAa,CAACM,OAAd,CAAsBD,CAAC,CAACP,OAAxB,CAA1C;AACH;;AACD,eAAO,CAAP;AACH,OALD;AAMH;;;WAED,kBAAgBS,GAAhB,EAAmE;AAC/D,WAAKZ,KAAL,CAAWa,IAAX,CAAgBD,GAAhB;AACA,WAAKE,KAAL;AAEA,aAAO,KAAKd,KAAL,CAAWe,MAAX,GAAoB,CAA3B;AACH;;;WAED,oBAAkBH,GAAlB,EAAmE;AAC/D,WAAKZ,KAAL,CAAWgB,MAAX,CAAkB,KAAKhB,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CAAlB,EAA2C,CAA3C;AACA,WAAKE,KAAL;AACH","sourcesContent":["import { MutableRefObject } from 'react';\n\n/**\n * Хранилище элементов карусели.\n */\nexport class CarouselItemRefs {\n    public items: MutableRefObject<HTMLElement | null>[] = [];\n\n    private order() {\n        const children = this.items.find((item) => item.current?.parentNode?.children)?.current?.parentNode?.children;\n\n        if (!children) {\n            return;\n        }\n\n        const childrenArray = Array.from(children);\n\n        this.items.sort((a, b) => {\n            if (a.current?.parentNode?.children && b.current?.parentNode?.children) {\n                return childrenArray.indexOf(a.current) - childrenArray.indexOf(b.current);\n            }\n            return 0;\n        });\n    }\n\n    public register(ref: MutableRefObject<HTMLElement | null>): number {\n        this.items.push(ref);\n        this.order();\n\n        return this.items.length - 1;\n    }\n\n    public unregister(ref: React.MutableRefObject<HTMLElement | null>) {\n        this.items.splice(this.items.indexOf(ref), 1);\n        this.order();\n    }\n}\n"],"file":"CarouselItemRefs.js"}