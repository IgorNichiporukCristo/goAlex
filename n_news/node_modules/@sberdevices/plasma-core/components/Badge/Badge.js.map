{"version":3,"sources":["../../src/components/Badge/Badge.tsx"],"names":["badgeSizes","l","textMarginX","textMarginLeftAfterContent","s","badgeRootSizes","height","padding","minWidth","borderRadius","fontSize","StyledText","styled","span","StyledContent","div","StyledBadge","caption","size","circled","css","Badge","text","contentLeft","rest"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACO,IAAMA,UAAU,GAAG;AACtBC,EAAAA,CAAC,EAAE;AACCC,IAAAA,WAAW,EAAE,SADd;AAECC,IAAAA,0BAA0B,EAAE;AAF7B,GADmB;AAKtBC,EAAAA,CAAC,EAAE;AACCF,IAAAA,WAAW,EAAE,UADd;AAECC,IAAAA,0BAA0B,EAAE;AAF7B;AALmB,CAAnB;;AAWA,IAAME,cAAc,GAAG;AAC1BJ,EAAAA,CAAC,EAAE;AACCK,IAAAA,MAAM,EAAE,QADT;AAECC,IAAAA,OAAO,EAAE,SAFV;AAGCC,IAAAA,QAAQ,EAAE,QAHX;AAICC,IAAAA,YAAY,EAAE,SAJf;AAKCC,IAAAA,QAAQ,EAAE;AALX,GADuB;AAQ1BN,EAAAA,CAAC,EAAE;AACCE,IAAAA,MAAM,EAAE,MADT;AAECC,IAAAA,OAAO,EAAE,UAFV;AAGCC,IAAAA,QAAQ,EAAE,MAHX;AAICC,IAAAA,YAAY,EAAE,QAJf;AAKCC,IAAAA,QAAQ,EAAE;AALX;AARuB,CAAvB;;;AAiBP,IAAMC,UAAU,gBAAGC,6BAAOC,IAAV;AAAA;AAAA,QAAhB;;AACA,IAAMC,aAAa,gBAAGF,6BAAOG,GAAV;AAAA;AAAA,qBAAnB;;AAiBA,IAAMC,WAAW,gBAAGJ,6BAAOG,GAAV;AAAA;AAAA,yHACXE,eADW,EAUX;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,aAAuBC,qBAAvB,yFACIf,cAAc,CAACa,IAAD,CADlB,EAGMC,OAAO,QACPC,qBADO,kDAEMf,cAAc,CAACa,IAAD,CAAd,CAAqBV,QAF3B,CAHb,EAWIG,UAXJ,EAYqBX,UAAU,CAACkB,IAAD,CAAV,CAAiBhB,WAZtC,EAasBF,UAAU,CAACkB,IAAD,CAAV,CAAiBhB,WAbvC,EAgBIY,aAhBJ,EAgBuBH,UAhBvB,EAiBqBX,UAAU,CAACkB,IAAD,CAAV,CAAiBf,0BAjBtC;AAAA,CAVW,CAAjB;;AA2CA;AACA;AACA;AACA;AACO,IAAMkB,KAA2B,GAAG,SAA9BA,KAA8B;AAAA,yBAAGH,IAAH;AAAA,MAAGA,IAAH,2BAAU,GAAV;AAAA,MAAeI,IAAf,SAAeA,IAAf;AAAA,MAAqBC,WAArB,SAAqBA,WAArB;AAAA,MAAqCC,IAArC;;AAAA,sBACvC,gCAAC,WAAD;AAAa,IAAA,IAAI,EAAEN;AAAnB,KAA6BM,IAA7B,GACKD,WAAW,iBAAI,gCAAC,aAAD,QAAgBA,WAAhB,CADpB,EAEKD,IAAI,iBAAI,gCAAC,UAAD,QAAaA,IAAb,CAFb,CADuC;AAAA,CAApC","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { caption } from '../../tokens';\n\n/**\n * Размеры в ремах.\n */\nexport const badgeSizes = {\n    l: {\n        textMarginX: '0.25rem',\n        textMarginLeftAfterContent: '0.25rem',\n    },\n    s: {\n        textMarginX: '0.125rem',\n        textMarginLeftAfterContent: '0.125rem',\n    },\n};\n\nexport const badgeRootSizes = {\n    l: {\n        height: '1.5rem',\n        padding: '0.25rem',\n        minWidth: '1.5rem',\n        borderRadius: '0.75rem',\n        fontSize: '0.75rem',\n    },\n    s: {\n        height: '1rem',\n        padding: '0.125rem',\n        minWidth: '1rem',\n        borderRadius: '0.5rem',\n        fontSize: '0.625rem',\n    },\n};\n\nconst StyledText = styled.span``;\nconst StyledContent = styled.div`\n    display: flex;\n`;\n\nexport type BadgeSize = keyof typeof badgeSizes;\n\ninterface StyledBadgeProps {\n    /**\n     * Размер компонента\n     */\n    size: BadgeSize;\n    /**\n     * Компонент примет форму круга с соотношением сторон 1x1\n     */\n    circled?: boolean;\n}\n\nconst StyledBadge = styled.div<StyledBadgeProps>`\n    ${caption};\n\n    display: inline-flex;\n    align-items: center;\n    box-sizing: border-box;\n    justify-content: center;\n\n    width: max-content;\n\n    ${({ size, circled }) => css`\n        ${badgeRootSizes[size]};\n        ${\n            circled &&\n            css`\n                width: ${badgeRootSizes[size].minWidth};\n                padding-left: 0;\n                padding-right: 0;\n            `\n        }\n\n        ${StyledText} {\n            margin-left: ${badgeSizes[size].textMarginX};\n            margin-right: ${badgeSizes[size].textMarginX};\n        }\n\n        ${StyledContent} ~ ${StyledText} {\n            margin-left: ${badgeSizes[size].textMarginLeftAfterContent};\n        }\n    `};\n`;\n\nexport interface BadgeProps extends StyledBadgeProps, React.HTMLAttributes<HTMLDivElement> {\n    /**\n     * Текст для отображения.\n     */\n    text?: string;\n    /**\n     * Слот для контента слева от текста.\n     */\n    contentLeft?: React.ReactElement;\n}\n\n/**\n * Небольшая бирка для ячеек и карточек.\n * Компонент может отображаться в нескольких размерах и цветах, может содержать текст и/или иконку.\n */\nexport const Badge: React.FC<BadgeProps> = ({ size = 'l', text, contentLeft, ...rest }) => (\n    <StyledBadge size={size} {...rest}>\n        {contentLeft && <StyledContent>{contentLeft}</StyledContent>}\n        {text && <StyledText>{text}</StyledText>}\n    </StyledBadge>\n);\n"],"file":"Badge.js"}