{"version":3,"sources":["../../src/components/Image/Image.tsx"],"names":["ratios","StyledRoot","styled","div","$ratio","$customRatio","css","$width","$height","StyledImg","img","src","ratio","StyledDivImg","Image","base","alt","width","height","props","undefined","customRatio","backgroundImage"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG;AACX,WAAS,KADE;AAEX,SAAO,KAFI;AAGX,WAAS,UAHE;AAIX,SAAO,UAJI;AAKX,WAAS,IALE;AAMX,SAAO,IANI;AAOX,YAAU,UAPC;AAQX,UAAQ,UARG;AASX,YAAU,OATC;AAUX,UAAQ,OAVG;AAWX,WAAS,KAXE;AAYX,SAAO,KAZI;AAaX,WAAS,IAbE;AAcX,SAAO;AAdI,CAAf;;AAiDA,IAAMC,UAAU,gBAAGC,6BAAOC,GAAV;AAAA;AAAA,wIAUV;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,YAAX,QAAWA,YAAX;AAAA,SACE,CAACD,MAAM,IAAIC,YAAX,SACAC,qBADA,sCAGsBF,MAAM,GAAGJ,MAAM,CAACI,MAAD,CAAT,GAAoBC,YAHhD,CADF;AAAA,CAVU,EAiBV;AAAA,MAAGE,MAAH,SAAGA,MAAH;AAAA,MAAWC,OAAX,SAAWA,OAAX;AAAA,aACEF,qBADF,iBAEQC,MAAM,qBAAc,sBAAUA,MAAV,CAAd,MAFd,EAGQC,OAAO,sBAAe,sBAAUA,OAAV,CAAf,MAHf;AAAA,CAjBU,CAAhB;;AAwBA,IAAMC,SAAS,gBAAGP,6BAAOQ,GAAV;AAAA;AAAA,yBAET;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,MAAQC,KAAR,SAAQA,KAAR;AAAA,SACED,GAAG,IACHC,KADA,QAEAN,qBAFA,sDADF;AAAA,CAFS,CAAf;;AAYA,IAAMO,YAAY,gBAAGX,6BAAOC,GAAV;AAAA;AAAA,kGAAlB;AAQA;AACA;AACA;;;AACO,IAAMW,KAA2B,GAAG,SAA9BA,KAA8B,QAAyD;AAAA,MAAtDH,GAAsD,SAAtDA,GAAsD;AAAA,yBAAjDI,IAAiD;AAAA,MAAjDA,IAAiD,2BAA1C,KAA0C;AAAA,MAAnCC,GAAmC,SAAnCA,GAAmC;AAAA,MAA9BC,KAA8B,SAA9BA,KAA8B;AAAA,MAAvBC,MAAuB,SAAvBA,MAAuB;AAAA,MAAZC,KAAY;;AAChG,MAAMP,KAAK,GAAG,WAAWO,KAAX,GAAmBA,KAAK,CAACP,KAAzB,GAAiCQ,SAA/C;AACA,MAAMC,WAAW,GAAG,iBAAiBF,KAAjB,GAAyBA,KAAK,CAACE,WAA/B,GAA6CD,SAAjE;AAEA,sBACI,gCAAC,UAAD;AAAY,IAAA,MAAM,EAAER,KAApB;AAA2B,IAAA,YAAY,EAAES,WAAzC;AAAsD,IAAA,MAAM,EAAEJ,KAA9D;AAAqE,IAAA,OAAO,EAAEC;AAA9E,KAA0FC,KAA1F,GACKJ,IAAI,KAAK,KAAT,iBAAkB,gCAAC,SAAD;AAAW,IAAA,GAAG,EAAEJ,GAAhB;AAAqB,IAAA,GAAG,EAAEK,GAA1B;AAA+B,IAAA,KAAK,EAAEJ;AAAtC,IADvB,EAEKG,IAAI,KAAK,KAAT,iBAAkB,gCAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,gBAASX,GAAT;AAAjB,KAArB;AAAyD,IAAA,IAAI,EAAC,KAA9D;AAAoE,kBAAYK;AAAhF,IAFvB,CADJ;AAMH,CAVM","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { toCssSize } from '../../utils';\n\nconst ratios = {\n    '1 / 1': '100',\n    '1/1': '100',\n    '3 / 4': '133.3333',\n    '3/4': '133.3333',\n    '4 / 3': '75',\n    '4/3': '75',\n    '9 / 16': '177.7778',\n    '9/16': '177.7778',\n    '16 / 9': '56.25',\n    '16/9': '56.25',\n    '1 / 2': '200',\n    '1/2': '200',\n    '2 / 1': '50',\n    '2/1': '50',\n};\n\nexport type Ratio = keyof typeof ratios;\n\ninterface StyledRootProps {\n    $ratio?: Ratio;\n    $customRatio?: string;\n    $width?: string | number;\n    $height?: string | number;\n}\n\ninterface HeightProps {\n    height?: string | number;\n}\n\ninterface RatioProps {\n    ratio?: Ratio;\n}\n\ninterface CustomRatioProps {\n    customRatio?: string;\n}\n\nexport type ImageBaseProps = (HeightProps | RatioProps | CustomRatioProps) &\n    React.ImgHTMLAttributes<HTMLImageElement> & {\n        src: string;\n        alt?: string;\n        base?: 'div' | 'img';\n    };\n\nexport type ImageProps = ImageBaseProps & {\n    children?: never;\n};\n\nconst StyledRoot = styled.div<StyledRootProps>`\n    position: relative;\n    display: block;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    width: 100%;\n    height: inherit;\n    border-radius: inherit;\n\n    ${({ $ratio, $customRatio }) =>\n        ($ratio || $customRatio) &&\n        css`\n            height: 0;\n            padding-bottom: ${$ratio ? ratios[$ratio] : $customRatio}%;\n        `}\n\n    ${({ $width, $height }) =>\n        css`\n            ${$width && `width: ${toCssSize($width)};`}\n            ${$height && `height: ${toCssSize($height)};`}\n        `}\n`;\n\nconst StyledImg = styled.img<RatioProps>`\n    width: 100%;\n    ${({ src, ratio }) =>\n        src &&\n        ratio &&\n        css`\n            height: 100%;\n            object-fit: cover;\n            position: absolute;\n        `};\n`;\n\nconst StyledDivImg = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-position: center;\n    background-size: cover;\n`;\n\n/**\n * Компонент для отображения картинок.\n */\nexport const Image: React.FC<ImageProps> = ({ src, base = 'img', alt, width, height, ...props }) => {\n    const ratio = 'ratio' in props ? props.ratio : undefined;\n    const customRatio = 'customRatio' in props ? props.customRatio : undefined;\n\n    return (\n        <StyledRoot $ratio={ratio} $customRatio={customRatio} $width={width} $height={height} {...props}>\n            {base === 'img' && <StyledImg src={src} alt={alt} ratio={ratio} />}\n            {base === 'div' && <StyledDivImg style={{ backgroundImage: `url(${src})` }} role=\"img\" aria-label={alt} />}\n        </StyledRoot>\n    );\n};\n"],"file":"Image.js"}