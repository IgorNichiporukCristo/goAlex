{"version":3,"sources":["../../../src/components/Button/createButton.tsx"],"names":["React","forwardRef","ButtonRoot","ButtonText","createButton","Root","Button","ref","children","text","contentLeft","contentRight","square","rest","isContentLeft","Boolean","isContentRight","undefined"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,UAAvC;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAT,GAAmE;AAAA,MAAnBC,IAAmB,uEAAZH,UAAY;AACtE;AACA,sBAAOD,UAAU,CAAO,SAASK,MAAT,OAEpBC,GAFoB,EAGtB;AAAA,QAFIC,QAEJ,QAFIA,QAEJ;AAAA,QAFcC,IAEd,QAFcA,IAEd;AAAA,QAFoBC,WAEpB,QAFoBA,WAEpB;AAAA,QAFiCC,YAEjC,QAFiCA,YAEjC;AAAA,QAF+CC,MAE/C,QAF+CA,MAE/C;AAAA,QAF0DC,IAE1D;;AACE,QAAMC,aAAa,GAAGC,OAAO,CAACL,WAAD,CAA7B;AACA,QAAMM,cAAc,GAAGD,OAAO,CAACJ,YAAD,CAA9B;AAEA,wBACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEJ,GADT;AAEI,MAAA,cAAc,EAAEO,aAFpB;AAGI,MAAA,eAAe,EAAEE,cAHrB;AAII,MAAA,MAAM,EAAEJ,MAAM,KAAKK,SAAX,GAAuBL,MAAvB,GAAgC,CAACH,IAAD,IAAS,CAACD;AAJtD,OAKQK,IALR,GAOKL,QAPL,EAQK,CAACA,QAAD,IAAaE,WARlB,EASK,CAACF,QAAD,IAAaC,IAAb,iBACG,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAEK,aAA5B;AAA2C,MAAA,eAAe,EAAEE;AAA5D,OACKP,IADL,CAVR,EAcK,CAACD,QAAD,IAAaG,YAdlB,CADJ;AAkBH,GAzBgB,CAAjB;AA0BH","sourcesContent":["import React, { forwardRef } from 'react';\n\nimport { ButtonRoot, ButtonText } from './Button';\nimport type { ButtonProps, ButtonAllContentProps } from './Button.types';\n\n/**\n * Функция для создания компонента Button,\n * что дает возможность кастомизировать вид, пропсы и т.п.,\n * при этом сохраняя в базе общий интерфейс.\n */\nexport function createButton<T, P extends ButtonProps>(Root = ButtonRoot) {\n    // eslint-disable-next-line prefer-arrow-callback\n    return forwardRef<T, P>(function Button(\n        { children, text, contentLeft, contentRight, square, ...rest }: ButtonProps & ButtonAllContentProps,\n        ref,\n    ) {\n        const isContentLeft = Boolean(contentLeft);\n        const isContentRight = Boolean(contentRight);\n\n        return (\n            <Root\n                ref={ref}\n                $isContentLeft={isContentLeft}\n                $isContentRight={isContentRight}\n                square={square !== undefined ? square : !text && !children}\n                {...rest}\n            >\n                {children}\n                {!children && contentLeft}\n                {!children && text && (\n                    <ButtonText $isContentLeft={isContentLeft} $isContentRight={isContentRight}>\n                        {text}\n                    </ButtonText>\n                )}\n                {!children && contentRight}\n            </Root>\n        );\n    });\n}\n"],"file":"createButton.js"}