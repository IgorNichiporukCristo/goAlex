var _excluded = ["id", "size", "color"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled, { keyframes, css } from 'styled-components';
import { accent } from '../../tokens';
import { SpinnerSvg } from './SpinnerSvg';
var rotateAnimation = /*#__PURE__*/keyframes(["from{transform:rotate(0);}to{transform:rotate(360deg);}"]);
var StyledRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-1cb12de-0"
})(["display:flex;box-sizing:border-box;", " animation:", " 1s linear infinite;"], function (_ref) {
  var $size = _ref.$size;
  return css(["width:", ";height:", ";"], $size, $size);
}, rotateAnimation);

/**
 * Компонент для отображения индикатора загрузки.
 */
export var Spinner = function Spinner(_ref2) {
  var id = _ref2.id,
      _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? 56 : _ref2$size,
      _ref2$color = _ref2.color,
      color = _ref2$color === void 0 ? accent : _ref2$color,
      rest = _objectWithoutProperties(_ref2, _excluded);

  return /*#__PURE__*/React.createElement(StyledRoot, _extends({
    id: id,
    $size: typeof size === 'number' ? "".concat(size, "px") : size
  }, rest), /*#__PURE__*/React.createElement(SpinnerSvg, {
    id: id,
    width: size,
    height: size,
    color: color
  }));
};
//# sourceMappingURL=Spinner.js.map