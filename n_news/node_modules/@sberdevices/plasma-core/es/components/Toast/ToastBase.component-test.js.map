{"version":3,"sources":["../../../src/components/Toast/ToastBase.component-test.tsx"],"names":["React","mount","CypressTestDecorator","getComponent","IconClose","critical","describe","Toast","useToast","ToastProvider","it","skip","cy","matchImageSnapshot","text","textLong","Button","Interactive","_text","position","timeout","showToast","get","click","wait"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount, CypressTestDecorator, getComponent } from '@sberdevices/plasma-cy-utils';\nimport { IconClose } from '@sberdevices/plasma-icons';\nimport { critical } from '@sberdevices/plasma-tokens-b2c';\n\ndescribe('plasma-core: Toast', () => {\n    const Toast = getComponent('Toast');\n    const useToast = getComponent('useToast');\n    const ToastProvider = getComponent('ToastProvider');\n\n    it.skip('default', () => {\n        mount(\n            <CypressTestDecorator>\n                <Toast text=\"Short Text Message Without Action\" />\n            </CypressTestDecorator>,\n        );\n\n        cy.matchImageSnapshot();\n    });\n\n    it.skip('__content-left', () => {\n        mount(\n            <CypressTestDecorator>\n                <Toast\n                    text=\"Short Text Message Without Action\"\n                    contentLeft={<IconClose size=\"xs\" color={critical} />}\n                />\n            </CypressTestDecorator>,\n        );\n\n        cy.matchImageSnapshot();\n    });\n\n    it.skip('_role', () => {\n        mount(\n            <CypressTestDecorator>\n                <Toast role=\"alert\" text=\"Short Text Message Without Action\" />\n                <Toast role=\"log\" text=\"Short Text Message Without Action\" />\n                <Toast role=\"status\" text=\"Short Text Message Without Action\" />\n            </CypressTestDecorator>,\n        );\n\n        cy.matchImageSnapshot();\n    });\n\n    describe('useToast', () => {\n        const text = 'Short Text Message Without Action';\n        const textLong =\n            'Long Text Message Without Action Long Text Message Without Action Long Text Message Without Action';\n        const Button = getComponent('Button');\n\n        const Interactive = ({ text: _text, position, timeout }) => {\n            const { showToast } = useToast();\n\n            return <Button id=\"show\" text=\"show\" onClick={() => showToast(_text, position, timeout)} />;\n        };\n\n        it.skip('showToast', () => {\n            mount(\n                <CypressTestDecorator>\n                    <ToastProvider>\n                        <Interactive text={text} />\n                    </ToastProvider>\n                </CypressTestDecorator>,\n            );\n\n            cy.get('#show').click();\n\n            // eslint-disable-next-line cypress/no-unnecessary-waiting\n            cy.wait(300);\n            cy.matchImageSnapshot();\n        });\n\n        it.skip('_position', () => {\n            mount(\n                <CypressTestDecorator>\n                    <ToastProvider>\n                        <Interactive text={text} position=\"top\" />\n                    </ToastProvider>\n                </CypressTestDecorator>,\n            );\n\n            cy.get('#show').click();\n\n            // eslint-disable-next-line cypress/no-unnecessary-waiting\n            cy.wait(300);\n            cy.matchImageSnapshot();\n        });\n\n        it.skip('dumm', () => {\n            mount(\n                <CypressTestDecorator>\n                    <ToastProvider>\n                        <Interactive />\n                    </ToastProvider>\n                </CypressTestDecorator>,\n            );\n\n            cy.get('#show').click();\n\n            cy.matchImageSnapshot();\n        });\n\n        it.skip('timeout', () => {\n            mount(\n                <CypressTestDecorator>\n                    <ToastProvider>\n                        <Interactive text={text} timeout={0} />\n                    </ToastProvider>\n                </CypressTestDecorator>,\n            );\n\n            cy.get('#show').click();\n\n            // eslint-disable-next-line cypress/no-unnecessary-waiting\n            cy.wait(600);\n            cy.matchImageSnapshot();\n        });\n\n        it('two lines', () => {\n            mount(\n                <CypressTestDecorator>\n                    <ToastProvider>\n                        <Interactive text={textLong} />\n                    </ToastProvider>\n                </CypressTestDecorator>,\n            );\n\n            cy.get('#show').click();\n\n            // eslint-disable-next-line cypress/no-unnecessary-waiting\n            cy.wait(300);\n            cy.matchImageSnapshot();\n        });\n    });\n});\n"],"file":"ToastBase.component-test.js"}