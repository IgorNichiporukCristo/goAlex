{"version":3,"sources":["../../../src/components/Toast/ToastProvider.tsx"],"names":["React","useState","useCallback","ToastController","ToastContext","DEFAULT_POSITION","DEFAULT_TIMEOUT","DEFAULT_FADE","ToastProvider","children","text","position","timeout","value","setValue","showToast","fade","contentLeft","role","undefined","hideToast"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AAGA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,IAAMC,gBAAgB,GAAG,QAAzB;AACA,IAAMC,eAAe,GAAG,IAAxB;AACA,IAAMC,YAAY,GAAG,IAArB;AAEA,OAAO,IAAMC,aAAuB,GAAG,SAA1BA,aAA0B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACrD,kBAA0BR,QAAQ,CAAY;AAAES,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,QAAQ,EAAE,IAAxB;AAA8BC,IAAAA,OAAO,EAAE;AAAvC,GAAZ,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,SAAS,GAAGb,WAAW,CACzB,UACIQ,IADJ,EAEIC,QAFJ,EAGIC,OAHJ,EAIII,IAJJ,EAKIC,WALJ,EAMIC,IANJ,EAOK;AACDJ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAJA,IADK;AAELR,MAAAA,IAAI,EAAJA,IAFK;AAGLO,MAAAA,WAAW,EAAXA,WAHK;AAILN,MAAAA,QAAQ,EAAEA,QAAQ,IAAIN,gBAJjB;AAKLO,MAAAA,OAAO,EAAEA,OAAO,KAAKO,SAAZ,GAAwBP,OAAxB,GAAkCN,eALtC;AAMLU,MAAAA,IAAI,EAAEA,IAAI,KAAKG,SAAT,GAAqBH,IAArB,GAA4BT;AAN7B,KAAD,CAAR;AAQH,GAjBwB,EAkBzB,EAlByB,CAA7B;AAqBA,MAAMa,SAAS,GAAGlB,WAAW,CAAC,YAAM;AAChCY,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,QAAQ,EAAE,IAAxB;AAA8BC,MAAAA,OAAO,EAAE;AAAvC,KAAD,CAAR;AACH,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,kCAAOC,KAAP;AAAcE,MAAAA,SAAS,EAATA,SAAd;AAAyBK,MAAAA,SAAS,EAATA;AAAzB;AAA5B,KACKX,QADL,eAEI,oBAAC,eAAD,EAAqBI,KAArB,CAFJ,CADJ;AAMH,CAlCM","sourcesContent":["import React, { ReactNode, useState, useCallback } from 'react';\n\nimport { ToastInfo, ToastPosition, ToastRole } from './Toast.types';\nimport { ToastController } from './ToastController';\nimport { ToastContext } from './ToastContext';\n\nconst DEFAULT_POSITION = 'bottom';\nconst DEFAULT_TIMEOUT = 3000;\nconst DEFAULT_FADE = true;\n\nexport const ToastProvider: React.FC = ({ children }) => {\n    const [value, setValue] = useState<ToastInfo>({ text: null, position: null, timeout: null });\n\n    const showToast = useCallback(\n        (\n            text: string,\n            position?: ToastPosition,\n            timeout?: number,\n            fade?: boolean,\n            contentLeft?: ReactNode,\n            role?: ToastRole,\n        ) => {\n            setValue({\n                role,\n                text,\n                contentLeft,\n                position: position || DEFAULT_POSITION,\n                timeout: timeout !== undefined ? timeout : DEFAULT_TIMEOUT,\n                fade: fade !== undefined ? fade : DEFAULT_FADE,\n            });\n        },\n        [],\n    );\n\n    const hideToast = useCallback(() => {\n        setValue({ text: null, position: null, timeout: null });\n    }, []);\n\n    return (\n        <ToastContext.Provider value={{ ...value, showToast, hideToast }}>\n            {children}\n            <ToastController {...value} />\n        </ToastContext.Provider>\n    );\n};\n"],"file":"ToastProvider.js"}