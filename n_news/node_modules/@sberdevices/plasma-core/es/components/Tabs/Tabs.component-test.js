function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import React, { useState } from 'react';
import { mount, CypressTestDecorator, getComponent } from '@sberdevices/plasma-cy-utils';
import { IconDone } from '@sberdevices/plasma-icons';
var items = [{
  label: 'Joy'
}, {
  label: 'Sber'
}, {
  label: 'Athena'
}];
describe('plasma-core: Tabs', function () {
  var Tabs = getComponent('Tabs');
  var TabItem = getComponent('TabItem');
  var TabsController = getComponent('TabsController');

  var ControlledTabsController = function ControlledTabsController() {
    var _useState = useState(0),
        _useState2 = _slicedToArray(_useState, 2),
        index = _useState2[0],
        setIndex = _useState2[1];

    return /*#__PURE__*/React.createElement(TabsController, {
      items: items,
      index: index,
      onIndexChange: function onIndexChange(i) {
        return setIndex(i);
      }
    });
  };

  it('simple', function () {
    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(Tabs, {
      forwardedAs: "ul"
    }, items.map(function (item, i) {
      return /*#__PURE__*/React.createElement(TabItem, {
        key: i,
        isActive: i === 1,
        forwardedAs: "li"
      }, item.label);
    }))));
    cy.matchImageSnapshot();
  });
  it('with icon', function () {
    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(Tabs, {
      forwardedAs: "ul"
    }, items.map(function (item, i) {
      return /*#__PURE__*/React.createElement(TabItem, {
        key: i,
        isActive: i === 1,
        forwardedAs: "li",
        contentLeft: /*#__PURE__*/React.createElement(IconDone, {
          size: "s",
          color: "inherit"
        })
      }, item.label);
    }))));
    cy.matchImageSnapshot();
  });
  it('_disabled', function () {
    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(Tabs, {
      disabled: true,
      forwardedAs: "ul"
    }, items.map(function (item, i) {
      return /*#__PURE__*/React.createElement(TabItem, {
        key: i,
        isActive: i === 1,
        forwardedAs: "li"
      }, item.label);
    }))));
    cy.matchImageSnapshot();
  });
  it('controller', function () {
    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(ControlledTabsController, null)));
    cy.get('div > button:nth-child(2)').click();
    cy.matchImageSnapshot();
  });
  it('controller with keydown', function () {
    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(ControlledTabsController, null)));
    cy.root().get('[role="tablist"]').trigger('keydown', {
      keyCode: 13
    });
    cy.get('div > button:nth-child(1)').should('have.attr', 'tabindex', '0');
    cy.root().get('[role="tablist"]').trigger('keydown', {
      keyCode: 39
    });
    cy.get('div > button:nth-child(2)').should('have.attr', 'tabindex', '0');
    cy.root().get('[role="tablist"]').trigger('keydown', {
      keyCode: 37
    });
    cy.get('div > button:nth-child(1)').should('have.attr', 'tabindex', '0');
    cy.root().get('[role="tablist"]').trigger('keydown', {
      keyCode: 35
    });
    cy.get('div > button:nth-child(3)').should('have.attr', 'tabindex', '0');
    cy.root().get('[role="tablist"]').trigger('keydown', {
      keyCode: 36
    });
    cy.get('div > button:nth-child(1)').should('have.attr', 'tabindex', '0');
  });
  it('scrollable', function () {
    var Container = function Container(_ref) {
      var children = _ref.children;
      return /*#__PURE__*/React.createElement("div", {
        style: {
          width: '75px'
        }
      }, children);
    };

    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(TabItem, null, "Joy"), /*#__PURE__*/React.createElement(TabItem, {
      isActive: true
    }, "Sber"), /*#__PURE__*/React.createElement(TabItem, null, "Eva")))));
    cy.get('[role="tablist"]').parent().scrollTo(500, 0);
    cy.matchImageSnapshot();
  });
  it('_stretch', function () {
    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(Tabs, {
      stretch: true
    }, /*#__PURE__*/React.createElement(TabItem, null, "Joy"), /*#__PURE__*/React.createElement(TabItem, {
      isActive: true
    }, "Sber"), /*#__PURE__*/React.createElement(TabItem, null, "Eva"))));
    cy.matchImageSnapshot();
  });
  it('try click by disabled tabs', function () {
    var onIndexChange = cy.stub();
    mount( /*#__PURE__*/React.createElement(CypressTestDecorator, null, /*#__PURE__*/React.createElement(TabsController, {
      items: items,
      index: 0,
      disabled: true,
      onIndexChange: onIndexChange
    })));
    cy.get('div > button:nth-child(2)').click({
      force: true
    }).then(function () {
      expect(onIndexChange).not.called;
    });
    cy.root().get('[role="tablist"]').trigger('keydown', {
      keyCode: 39
    }).then(function () {
      expect(onIndexChange).not.called;
    });
  });
});
//# sourceMappingURL=Tabs.component-test.js.map