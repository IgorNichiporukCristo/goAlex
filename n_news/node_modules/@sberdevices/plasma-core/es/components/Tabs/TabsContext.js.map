{"version":3,"sources":["../../../src/components/Tabs/TabsContext.tsx"],"names":["createContext","TabItemRefs","ref","items","push","length","splice","indexOf","initialValue","TabsContext"],"mappings":";;;;;;;;AAAA,SAA2BA,aAA3B,QAAgD,OAAhD;AAEA,WAAaC,WAAb;AAAA;AAAA;;AAAA,mCAC2D,EAD3D;AAAA;;AAAA;AAAA;AAAA,WAGI,kBAAgBC,GAAhB,EAAmE;AAC/D,WAAKC,KAAL,CAAWC,IAAX,CAAgBF,GAAhB;AACA,aAAO,KAAKC,KAAL,CAAWE,MAAX,GAAoB,CAA3B;AACH;AANL;AAAA;AAAA,WAQI,oBAAkBH,GAAlB,EAA6D;AACzD,WAAKC,KAAL,CAAWG,MAAX,CAAkB,KAAKH,KAAL,CAAWI,OAAX,CAAmBL,GAAnB,CAAlB,EAA2C,CAA3C;AACH;AAVL;;AAAA;AAAA;AAiBA,IAAMM,YAAuB,GAAG,EAAhC;AAEA,OAAO,IAAMC,WAAW,gBAAGT,aAAa,CAAYQ,YAAZ,CAAjC","sourcesContent":["import { MutableRefObject, createContext } from 'react';\n\nexport class TabItemRefs {\n    public items: MutableRefObject<HTMLElement | null>[] = [];\n\n    public register(ref: MutableRefObject<HTMLElement | null>): number {\n        this.items.push(ref);\n        return this.items.length - 1;\n    }\n\n    public unregister(ref: MutableRefObject<HTMLElement | null>) {\n        this.items.splice(this.items.indexOf(ref), 1);\n    }\n}\n\ninterface TabsState {\n    refs?: TabItemRefs;\n}\n\nconst initialValue: TabsState = {};\n\nexport const TabsContext = createContext<TabsState>(initialValue);\n"],"file":"TabsContext.js"}