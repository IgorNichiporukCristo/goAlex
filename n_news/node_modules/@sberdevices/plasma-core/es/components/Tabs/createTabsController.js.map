{"version":3,"sources":["../../../src/components/Tabs/createTabsController.tsx"],"names":["React","forwardRef","useMemo","useCallback","TabItemRefs","TabsContext","Tabs","TabItem","Keys","createTabsController","ListComponent","ItemComponent","TabsController","ref","items","index","onIndexChange","rest","disabled","refs","onItemFocus","event","focusIndex","findIndex","itemRef","current","target","onKeyDown","minIndex","maxIndex","length","nextIndex","keyCode","end","left","right","home","preventDefault","focus","map","i","label","contentLeft"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAAuCC,OAAvC,EAAgDC,WAAhD,QAAsF,OAAtF;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,SAASC,IAAT,QAAgC,QAAhC;AACA,SAASC,OAAT,QAAsC,WAAtC;IASKC,I;AAOL;AACA;AACA;AACA;;WAVKA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AAWL,OAAO,SAASC,oBAAT,GAGL;AAAA,MAFEC,aAEF,uEAFkBJ,IAElB;AAAA,MADEK,aACF,uEADmDJ,OACnD;AACE;AACA,sBAAON,UAAU,CAAO,SAASW,cAAT,OAAkEC,GAAlE,EAAuE;AAAA,QAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,QAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,QAA/BC,aAA+B,QAA/BA,aAA+B;AAAA,QAAbC,IAAa;;AAC3F,QAAQC,QAAR,GAAqBD,IAArB,CAAQC,QAAR;AACA,QAAMC,IAAI,GAAGjB,OAAO,CAAC;AAAA,aAAM,IAAIE,WAAJ,EAAN;AAAA,KAAD,EAA0B,EAA1B,CAApB;AAEA,QAAMgB,WAAW,GAAGjB,WAAW,CAC3B,UAACkB,KAAD,EAAW;AACP,UAAIH,QAAJ,EAAc;AACV;AACH;;AAED,UAAMI,UAAU,GAAGH,IAAI,CAACL,KAAL,CAAWS,SAAX,CAAqB,UAACC,OAAD;AAAA,eAAaA,OAAO,CAACC,OAAR,KAAoBJ,KAAK,CAACK,MAAvC;AAAA,OAArB,CAAnB;;AAEA,UAAIJ,UAAU,KAAKP,KAAnB,EAA0B;AACtBC,QAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAGM,UAAH,CAAb;AACH;AACJ,KAX0B,EAY3B,CAACH,IAAD,EAAOJ,KAAP,EAAcC,aAAd,EAA6BE,QAA7B,CAZ2B,CAA/B;AAeA,QAAMS,SAAS,GAAGxB,WAAW,CACzB,UAACkB,KAAD,EAA0B;AACtB,UAAIH,QAAJ,EAAc;AACV;AACH;;AAED,UAAMU,QAAQ,GAAG,CAAjB;AACA,UAAMC,QAAQ,GAAGV,IAAI,CAACL,KAAL,CAAWgB,MAAX,GAAoB,CAArC;AACA,UAAIC,SAAJ;;AAEA,cAAQV,KAAK,CAACW,OAAd;AACI,aAAKxB,IAAI,CAACyB,GAAV;AACIF,UAAAA,SAAS,GAAGF,QAAZ;AACA;;AACJ,aAAKrB,IAAI,CAAC0B,IAAV;AACIH,UAAAA,SAAS,GAAGhB,KAAK,GAAGa,QAAR,GAAmBb,KAAK,GAAG,CAA3B,GAA+BA,KAA3C;AACA;;AACJ,aAAKP,IAAI,CAAC2B,KAAV;AACIJ,UAAAA,SAAS,GAAGhB,KAAK,GAAGc,QAAR,GAAmBd,KAAK,GAAG,CAA3B,GAA+BA,KAA3C;AACA;;AACJ,aAAKP,IAAI,CAAC4B,IAAV;AACIL,UAAAA,SAAS,GAAGH,QAAZ;AACA;;AACJ;AACI;AAdR;;AAiBA,UAAIG,SAAS,KAAKhB,KAAlB,EAAyB;AAAA;;AACrBM,QAAAA,KAAK,CAACgB,cAAN;AACA,iCAAAlB,IAAI,CAACL,KAAL,CAAWiB,SAAX,EAAsBN,OAAtB,gFAA+Ba,KAA/B;AACH;AACJ,KA/BwB,EAgCzB,CAACvB,KAAD,EAAQC,aAAR,EAAuBE,QAAvB,CAhCyB,CAA7B;AAmCA,wBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAJA;AAAF;AAA7B,oBACI,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEN,GAApB;AAAyB,MAAA,SAAS,EAAEc;AAApC,OAAmDV,IAAnD,GACKH,KAAK,CAACyB,GAAN,CAAU,iBAAyBC,CAAzB;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,UAAUC,WAAV,SAAUA,WAAV;AAAA,0BACP,oBAAC,aAAD;AACI,QAAA,GAAG,EAAEF,CADT;AAEI,QAAA,QAAQ,EAAEA,CAAC,KAAKzB,KAFpB;AAGI,QAAA,QAAQ,EAAE,CAACG,QAAD,IAAasB,CAAC,KAAKzB,KAAnB,GAA2B,CAA3B,GAA+B,CAAC,CAH9C;AAII,QAAA,WAAW,EAAE2B,WAJjB;AAKI,QAAA,OAAO,EAAE;AAAA,iBAAM1B,aAAN,aAAMA,aAAN,uBAAMA,aAAa,CAAGwB,CAAH,CAAnB;AAAA,SALb;AAMI,QAAA,OAAO,EAAEpB,WANb;AAOI,QAAA,QAAQ,EAAEF;AAPd,SASKuB,KATL,CADO;AAAA,KAAV,CADL,CADJ,CADJ;AAmBH,GAzEgB,CAAjB;AA0EH","sourcesContent":["import React, { forwardRef, ReactNode, useMemo, useCallback, FunctionComponent } from 'react';\n\nimport { TabItemRefs, TabsContext } from './TabsContext';\nimport { Tabs, TabsProps } from './Tabs';\nimport { TabItem, TabItemProps } from './TabItem';\n\nexport interface TabsControllerProps extends TabsProps {\n    items: Array<{ label: string; contentLeft?: ReactNode }>;\n    index: number;\n    onIndexChange: (index: number) => void;\n    children?: never;\n}\n\nenum Keys {\n    end = 35,\n    home = 36,\n    left = 37,\n    right = 39,\n}\n\n/**\n * Функция для создания `TabController`, которая дает возможность\n * кастомизировать стили, при этом сохраняя единый интерфейс и функционал.\n */\nexport function createTabsController<T extends HTMLDivElement, P extends TabsControllerProps>(\n    ListComponent = Tabs,\n    ItemComponent: FunctionComponent<TabItemProps> = TabItem,\n) {\n    // eslint-disable-next-line prefer-arrow-callback\n    return forwardRef<T, P>(function TabsController({ items, index, onIndexChange, ...rest }, ref) {\n        const { disabled } = rest;\n        const refs = useMemo(() => new TabItemRefs(), []);\n\n        const onItemFocus = useCallback(\n            (event) => {\n                if (disabled) {\n                    return;\n                }\n\n                const focusIndex = refs.items.findIndex((itemRef) => itemRef.current === event.target);\n\n                if (focusIndex !== index) {\n                    onIndexChange?.(focusIndex);\n                }\n            },\n            [refs, index, onIndexChange, disabled],\n        );\n\n        const onKeyDown = useCallback(\n            (event: KeyboardEvent) => {\n                if (disabled) {\n                    return;\n                }\n\n                const minIndex = 0;\n                const maxIndex = refs.items.length - 1;\n                let nextIndex;\n\n                switch (event.keyCode) {\n                    case Keys.end:\n                        nextIndex = maxIndex;\n                        break;\n                    case Keys.left:\n                        nextIndex = index > minIndex ? index - 1 : index;\n                        break;\n                    case Keys.right:\n                        nextIndex = index < maxIndex ? index + 1 : index;\n                        break;\n                    case Keys.home:\n                        nextIndex = minIndex;\n                        break;\n                    default:\n                        return;\n                }\n\n                if (nextIndex !== index) {\n                    event.preventDefault();\n                    refs.items[nextIndex].current?.focus();\n                }\n            },\n            [index, onIndexChange, disabled],\n        );\n\n        return (\n            <TabsContext.Provider value={{ refs }}>\n                <ListComponent ref={ref} onKeyDown={onKeyDown} {...rest}>\n                    {items.map(({ label, contentLeft }, i) => (\n                        <ItemComponent\n                            key={i}\n                            isActive={i === index}\n                            tabIndex={!disabled && i === index ? 0 : -1}\n                            contentLeft={contentLeft}\n                            onClick={() => onIndexChange?.(i)}\n                            onFocus={onItemFocus}\n                            disabled={disabled}\n                        >\n                            {label}\n                        </ItemComponent>\n                    ))}\n                </ListComponent>\n            </TabsContext.Provider>\n        );\n    });\n}\n"],"file":"createTabsController.js"}