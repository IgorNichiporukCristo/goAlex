{"version":3,"sources":["../../../src/components/PaginationDots/usePaginationDots.ts"],"names":["useRef","usePaginationDots","items","index","visibleItems","activeId","id","prevIndex","direction","current","start","end","Math","min","max","length","floor","sliced","slice"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AAQA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAkE;AAAA,MAA/DC,KAA+D,QAA/DA,KAA+D;AAAA,MAAxDC,KAAwD,QAAxDA,KAAwD;AAAA,+BAAjDC,YAAiD;AAAA,MAAjDA,YAAiD,kCAAlC,CAAkC;AAC/F,MAAMC,QAAQ,GAAGH,KAAK,CAACC,KAAD,CAAL,CAAaG,EAA9B;AACA,MAAMC,SAAS,GAAGP,MAAM,CAAgB,IAAhB,CAAxB;AACA,MAAIQ,SAAS,GAAG,CAAhB;;AAEA,MAAID,SAAS,CAACE,OAAV,KAAsB,IAA1B,EAAgC;AAC5BD,IAAAA,SAAS,GAAGL,KAAK,GAAGI,SAAS,CAACE,OAAlB,GAA4B,CAA5B,GAAgC,CAAC,CAA7C;AACH;;AAED,MAAIC,KAAJ;AACA,MAAIC,GAAJ;;AAEA,MAAIH,SAAS,KAAK,CAAlB,EAAqB;AACjBG,IAAAA,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASX,KAAK,GAAG,CAAjB,EAAoBC,YAApB,CAAT,EAA4CF,KAAK,CAACa,MAAlD,CAAN;AACAL,IAAAA,KAAK,GAAGE,IAAI,CAACE,GAAL,CAASH,GAAG,GAAGP,YAAf,EAA6B,CAA7B,CAAR;AACH,GAHD,MAGO,IAAII,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACzBE,IAAAA,KAAK,GAAGE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASX,KAAK,GAAG,CAAjB,EAAoB,CAApB,CAAT,EAAiCD,KAAK,CAACa,MAAN,GAAeX,YAAhD,CAAR;AACAO,IAAAA,GAAG,GAAGD,KAAK,GAAGN,YAAd;AACH,GAHM,MAGA;AACHM,IAAAA,KAAK,GAAGE,IAAI,CAACE,GAAL,CAASX,KAAK,GAAGS,IAAI,CAACI,KAAL,CAAWZ,YAAY,GAAG,CAA1B,CAAjB,EAA+C,CAA/C,CAAR;AACAO,IAAAA,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGN,YAAjB,EAA+BF,KAAK,CAACa,MAArC,CAAN;AACAL,IAAAA,KAAK,GAAGC,GAAG,GAAGP,YAAd;AACH;;AAED,MAAMa,MAAM,GAAGf,KAAK,CAACgB,KAAN,CAAYR,KAAZ,EAAmBC,GAAnB,CAAf;AAEAJ,EAAAA,SAAS,CAACE,OAAV,GAAoBN,KAApB;AAEA,SAAO;AACHc,IAAAA,MAAM,EAANA,MADG;AAEHZ,IAAAA,QAAQ,EAARA;AAFG,GAAP;AAIH,CAhCM","sourcesContent":["import { useRef } from 'react';\n\nexport interface SmartPaginationDotsProps {\n    items: Array<{ id: number | string }>;\n    index: number;\n    visibleItems?: number;\n}\n\nexport const usePaginationDots = ({ items, index, visibleItems = 7 }: SmartPaginationDotsProps) => {\n    const activeId = items[index].id;\n    const prevIndex = useRef<number | null>(null);\n    let direction = 0;\n\n    if (prevIndex.current !== null) {\n        direction = index > prevIndex.current ? 1 : -1;\n    }\n\n    let start;\n    let end;\n\n    if (direction === 1) {\n        end = Math.min(Math.max(index + 2, visibleItems), items.length);\n        start = Math.max(end - visibleItems, 0);\n    } else if (direction === -1) {\n        start = Math.min(Math.max(index - 1, 0), items.length - visibleItems);\n        end = start + visibleItems;\n    } else {\n        start = Math.max(index - Math.floor(visibleItems / 2), 0);\n        end = Math.min(start + visibleItems, items.length);\n        start = end - visibleItems;\n    }\n\n    const sliced = items.slice(start, end);\n\n    prevIndex.current = index;\n\n    return {\n        sliced,\n        activeId,\n    };\n};\n"],"file":"usePaginationDots.js"}