{"version":3,"sources":["../../../src/components/Field/Field.tsx"],"names":["styled","css","applyEllipsis","applyDisabled","secondary","tertiary","body1","caption","fieldStatuses","FieldPlaceholder","label","theme","lowPerformance","FieldContent","div","pos","FieldHelper","span","FieldRoot","$size","$isContentLeft","$isContentRight","$isHelper","status"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAGA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,cAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,KAA9B,EAAqCC,OAArC,QAAoD,cAApD;AAEA,SAASC,aAAT,QAA8B,kBAA9B;;AA8BA;AACA;AACA;AACA,OAAO,IAAMC,gBAAgB,gBAAGT,MAAM,CAACU,KAAV;AAAA;AAAA,kKAShBL,QATgB,EAYX;AAAA,MAAGM,KAAH,QAAGA,KAAH;AAAA,SAAgBA,KAAK,CAACC,cAAN,GAAuB,OAAvB,GAAiC,kBAAjD;AAAA,CAZW,EAevBV,aAfuB,CAAtB;AAkBP;AACA;AACA;;AACA,OAAO,IAAMW,YAAY,gBAAGb,MAAM,CAACc,GAAV;AAAA;AAAA,2FAGnB;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,SAAcA,GAAG,KAAK,MAAR,GAAiB,YAAjB,GAAgC,aAA9C;AAAA,CAHmB,CAAlB;AAWP;AACA;AACA;;AACA,OAAO,IAAMC,WAAW,gBAAGhB,MAAM,CAACiB,IAAV;AAAA;AAAA,mDAClBV,OADkB,EAOlBL,aAPkB,CAAjB;;AAkBP;AACA;AACA;AACA,OAAO,IAAMgB,SAAS,gBAAGlB,MAAM,CAACc,GAAV;AAAA;AAAA,kGAChBR,KADgB,EAQTF,SARS,EAUhBD,aAVgB,EAYhB;AAAA,0BAAGgB,KAAH;AAAA,MAAGA,KAAH,4BAAW,GAAX;AAAA,SACEA,KAAK,KAAK,GAAV,GACMlB,GADN,4IAGYQ,gBAHZ,EAS4CA,gBAT5C,EAcYI,YAdZ,IAkBMZ,GAlBN,yBAoBYY,YApBZ,CADF;AAAA,CAZgB,EAsChB;AAAA,MAAGO,cAAH,SAAGA,cAAH;AAAA,MAAmBC,eAAnB,SAAmBA,eAAnB;AAAA,SAAyCpB,GAAzC,iDAEQmB,cAAc,IAAI,yBAF1B,EAGQC,eAAe,IAAI,0BAH3B,EAMIZ,gBANJ,EAOQW,cAAc,IAAI,iBAP1B,EAQQC,eAAe,IAAI,kBAR3B;AAAA,CAtCgB,EAkDhB;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,MAAcC,MAAd,SAAcA,MAAd;AAAA,SACEA,MAAM,KACLD,SAAS,GACJrB,GADI,wBAEEe,WAFF,EAGaR,aAAa,CAACe,MAAD,CAH1B,IAMJtB,GANI,wBAOEQ,gBAPF,EAQaD,aAAa,CAACe,MAAD,CAR1B,CADJ,CADR;AAAA,CAlDgB,CAAf","sourcesContent":["import styled, { css } from 'styled-components';\nimport { HTMLAttributes } from 'react';\n\nimport { applyEllipsis, applyDisabled } from '../../mixins';\nimport { secondary, tertiary, body1, caption } from '../../tokens';\n\nimport { fieldStatuses } from './Field.statuses';\n\nexport interface FieldProps {\n    $isFocused?: boolean;\n    /**\n     * Размер контрола.\n     */\n    size?: 'm' | 'l';\n    /**\n     * Статус компонента: заполнен успешно / с ошибкой.\n     */\n    status?: keyof typeof fieldStatuses;\n    /**\n     * Надпись лейбла.\n     */\n    label?: string | number; // ToDo: v2.0 переименовать в placeholder; убрать тип number\n    /**\n     * Подсказка для поля ввода.\n     */\n    helperText?: string;\n    /**\n     * Слот для контента слева.\n     */\n    contentLeft?: React.ReactElement;\n    /**\n     * Слот для контента справа.\n     */\n    contentRight?: React.ReactElement;\n}\n\n/**\n * Common dynamic placeholder.\n */\nexport const FieldPlaceholder = styled.label`\n    position: absolute;\n    top: 0;\n    left: 0;\n    box-sizing: border-box;\n\n    width: 100%;\n    height: 100%;\n\n    color: ${tertiary};\n    pointer-events: none;\n\n    transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'all 0.1s ease-in')};\n    transform-origin: top left;\n\n    ${applyEllipsis}\n`;\n\n/**\n * Content wrapper for left and right slots of the field.\n */\nexport const FieldContent = styled.div<{ pos: 'left' | 'right' }>`\n    position: absolute;\n    top: 0;\n    ${({ pos }) => (pos === 'left' ? 'left: 1rem' : 'right: 1rem')};\n    bottom: 0;\n\n    display: flex;\n    align-items: center;\n    height: 3rem;\n`;\n\n/**\n * An inline block to place a helper text under the form item.\n */\nexport const FieldHelper = styled.span`\n    ${caption};\n\n    display: block;\n\n    margin-top: 0.25rem;\n\n    ${applyEllipsis}\n`;\n\nexport interface FieldRootProps extends Pick<FieldProps, 'status'>, HTMLAttributes<HTMLDivElement> {\n    $size?: FieldProps['size'];\n    $disabled?: boolean;\n    $isContentLeft?: boolean;\n    $isContentRight?: boolean;\n    $isHelper?: boolean;\n}\n\n/**\n * Common container for singular form item.\n */\nexport const FieldRoot = styled.div<FieldRootProps>`\n    ${body1};\n\n    position: relative;\n\n    display: block;\n    box-sizing: border-box;\n\n    color: ${secondary};\n\n    ${applyDisabled}\n\n    ${({ $size = 'm' }) =>\n        $size === 'l'\n            ? css`\n                  /* stylelint-disable-next-line selector-nested-pattern */\n                  ${FieldPlaceholder} {\n                      top: 1.125rem;\n                      left: 1rem;\n                      right: 1rem;\n                  }\n                  /* stylelint-disable-next-line selector-nested-pattern */\n                  input:not(:placeholder-shown) ~ ${FieldPlaceholder} {\n                      transform: scale(0.75);\n                      top: 0.375rem;\n                  }\n                  /* stylelint-disable-next-line selector-nested-pattern */\n                  ${FieldContent} {\n                      height: 3.5rem;\n                  }\n              `\n            : css`\n                  /* stylelint-disable-next-line selector-nested-pattern */\n                  ${FieldContent} {\n                      height: 3rem;\n                  }\n              `}\n\n    ${({ $isContentLeft, $isContentRight }) => css`\n        input, textarea {\n            ${$isContentLeft && 'padding-left: 3.125rem;'} // 50px\n            ${$isContentRight && 'padding-right: 3.125rem;'}\n        }\n\n        ${FieldPlaceholder} {\n            ${$isContentLeft && 'left: 3.125rem;'} // 50px\n            ${$isContentRight && 'right: 3.125rem;'}\n        }\n    `}\n\n    ${({ $isHelper, status }) =>\n        status &&\n        ($isHelper\n            ? css`\n                  ${FieldHelper} {\n                      color: ${fieldStatuses[status]};\n                  }\n              `\n            : css`\n                  ${FieldPlaceholder} {\n                      color: ${fieldStatuses[status]};\n                  }\n              `)}\n`;\n"],"file":"Field.js"}