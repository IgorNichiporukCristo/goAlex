{"version":3,"sources":["../../../src/components/Switch/Switch.tsx"],"names":["React","styled","css","body1","applyDisabled","addFocus","shadows","applyEllipsis","triggerWidth","triggerHeight","StyledRoot","label","StyledInput","input","synthesizeFocus","ruleset","focused","StyledTrigger","div","theme","lowPerformance","tiny","$disabled","pressed","outlined","outlineRadius","StyledLabel","span","Switch","forwardRef","ref","name","value","checked","defaultChecked","disabled","readOnly","tabIndex","onChange","onFocus","onBlur","rest","exactChecked","Boolean","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled, { css, FlattenSimpleInterpolation } from 'styled-components';\n\nimport { body1 } from '../../tokens';\nimport { applyDisabled, addFocus, shadows, applyEllipsis } from '../../mixins';\nimport type { DisabledProps, FocusProps, OutlinedProps } from '../../mixins';\nimport type { InputHTMLAttributes } from '../../types';\nimport type { ControlProps } from '../Basebox/Basebox';\n\ninterface PressedProps {\n    pressed?: boolean;\n}\n\nexport interface SwitchProps\n    extends ControlProps,\n        DisabledProps,\n        PressedProps,\n        FocusProps,\n        OutlinedProps,\n        Omit<React.LabelHTMLAttributes<HTMLLabelElement>, 'onChange' | 'onFocus' | 'onBlur'>,\n        Pick<\n            InputHTMLAttributes<HTMLInputElement>,\n            'name' | 'value' | 'checked' | 'disabled' | 'readOnly' | 'onChange' | 'onFocus' | 'onBlur'\n        > {}\n\nconst triggerWidth = 'var(--plasma-switch-trigger-width, 2.75rem)';\nconst triggerHeight = 'var(--plasma-switch-trigger-height, 1.75rem)';\n\nconst StyledRoot = styled.label<{ $disabled?: boolean }>`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    cursor: pointer;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n    &:focus {\n        outline: 0 none;\n    }\n\n    ${applyDisabled}\n`;\nconst StyledInput = styled.input`\n    position: absolute;\n    right: 0;\n    margin: 0;\n    opacity: 0;\n\n    width: ${triggerWidth};\n    height: ${triggerHeight};\n\n    &:focus {\n        outline: 0 none;\n    }\n`;\n\nconst synthesizeFocus = (ruleset: FlattenSimpleInterpolation, focused?: boolean) => css`\n    /* stylelint-disable-next-line selector-nested-pattern, selector-type-no-unknown */\n    .focus-visible:focus > &,\n    ${StyledInput}.focus-visible:focus ~ & {\n        ${ruleset};\n    }\n\n    ${focused && ruleset};\n`;\n\nconst StyledTrigger = styled.div<{ $disabled?: boolean } & PressedProps & FocusProps & OutlinedProps>`\n    position: relative;\n    display: flex;\n    flex: 0 0 ${triggerWidth};\n    width: ${triggerWidth};\n    height: ${triggerHeight};\n    margin-left: auto;\n    border-radius: 0.875rem;\n    background-color: var(--plasma-switch-trigger-background);\n    transition: ${({ theme }) => (theme.lowPerformance ? 'unset' : 'background-color 0.15s ease-in-out 0.1s')};\n\n    &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        margin: auto 0.125rem;\n        width: 1.5rem;\n        height: 1.5rem;\n        border-radius: 1.5rem;\n        background-color: var(--plasma-switch-ellipse-background);\n        box-shadow: ${shadows.tiny};\n        transition: ${({ theme }) =>\n            theme.lowPerformance ? 'unset' : 'width 0.15s ease-in-out, left 0.3s ease-in-out, right 0.3s ease-in-out'};\n    }\n\n    ${({ $disabled, pressed }) =>\n        !$disabled &&\n        css`\n            /* stylelint-disable-next-line selector-nested-pattern, selector-type-no-unknown */\n            ${StyledRoot}:active &::after {\n                width: 1.875rem;\n            }\n\n            ${pressed &&\n            css`\n                &::after {\n                    width: 1.875rem;\n                }\n            `}\n        `}\n\n    /* stylelint-disable-next-line selector-nested-pattern, selector-type-no-unknown */\n    ${StyledInput}:checked ~ & {\n        background-color: var(--plasma-switch-trigger-background-checked);\n\n        &::after {\n            left: auto;\n            right: 0;\n        }\n    }\n\n    ${({ focused, outlined, theme }) =>\n        addFocus({\n            ...theme,\n            focused,\n            outlined,\n            outlineRadius: '1rem',\n            synthesizeFocus,\n        })}\n`;\nconst StyledLabel = styled.span`\n    ${body1};\n    margin-right: 0.75rem;\n    user-select: none;\n\n    ${applyEllipsis}\n`;\n\n/**\n * Визуальный переключатель между двумя взаимоисключающими состояниями — вкл. и выкл.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(function Switch(\n    {\n        name,\n        value,\n        label,\n        checked,\n        defaultChecked,\n        disabled,\n        readOnly,\n        pressed,\n        focused,\n        outlined,\n        tabIndex,\n        onChange,\n        onFocus,\n        onBlur,\n        ...rest\n    },\n    ref,\n) {\n    const exactChecked = Boolean(checked !== undefined ? checked : defaultChecked);\n\n    return (\n        <StyledRoot $disabled={disabled} {...rest}>\n            <StyledInput\n                ref={ref}\n                role=\"switch\"\n                aria-checked={exactChecked}\n                type=\"checkbox\"\n                name={name}\n                value={value}\n                checked={checked}\n                defaultChecked={defaultChecked}\n                readOnly={readOnly}\n                disabled={disabled}\n                tabIndex={tabIndex}\n                onChange={onChange}\n                onFocus={onFocus}\n                onBlur={onBlur}\n            />\n            {label && <StyledLabel tabIndex={-1}>{label}</StyledLabel>}\n            <StyledTrigger aria-hidden $disabled={disabled} pressed={pressed} focused={focused} outlined={outlined} />\n        </StyledRoot>\n    );\n});\n"],"file":"Switch.js"}