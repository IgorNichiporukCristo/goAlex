/** Цвет фона паранжи светлый */
export declare const overlaySoft = "var(--overlay-soft, rgba(0, 0, 0, 0.56))";
/** Цвет фона паранжи темный */
export declare const overlayHard = "var(--overlay-hard, rgba(0, 0, 0, 0.9))";
/** Цвет фона паранжи светлый на темном фоне */
export declare const onDarkOverlaySoft = "var(--on-dark-overlay-soft, rgba(0, 0, 0, 0.56))";
/** Цвет фона паранжи темный на темном фоне */
export declare const onDarkOverlayHard = "var(--on-dark-overlay-hard, rgba(0, 0, 0, 0.9))";
/** Цвет фона паранжи светлый на светлом фоне */
export declare const onLightOverlaySoft = "var(--on-light-overlay-soft, rgba(0, 0, 0, 0.56))";
/** Цвет фона паранжи темный на светлом фоне */
export declare const onLightOverlayHard = "var(--on-light-overlay-hard, rgba(0, 0, 0, 0.9))";
/** Инвертированный цвет фона паранжи светлый */
export declare const inverseOverlaySoft = "var(--inverse-overlay-soft, rgba(0, 0, 0, 0.56))";
/** Инвертированный цвет фона паранжи темный */
export declare const inverseOverlayHard = "var(--inverse-overlay-hard, rgba(0, 0, 0, 0.9))";
/** Акцентный цвет */
export declare const textAccent = "var(--text-accent, #FFFFFF)";
/** Акцентный цвет с градиентом */
export declare const textAccentGradient = "var(--text-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))";
/** Цвет ошибки */
export declare const textNegative = "var(--text-negative, #FF293E)";
/** Сплошной наборный текст */
export declare const textParagraph = "var(--text-paragraph, #ECECEC)";
/** Цвет успеха */
export declare const textPositive = "var(--text-positive, #1A9E32)";
/** Основной цвет текста */
export declare const textPrimary = "var(--text-primary, #F5F5F5)";
/** Вторичный цвет текста */
export declare const textSecondary = "var(--text-secondary, #B3B3B3)";
/** Третичный цвет текста */
export declare const textTertiary = "var(--text-tertiary, #7A7A7A)";
/** Цвет предупреждения */
export declare const textWarning = "var(--text-warning, #FA5F05)";
/** Прозрачный акцентный цвет */
export declare const textTransparentAccent = "var(--text-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный акцентный цвет с градиентом */
export declare const textTransparentAccentGradient = "var(--text-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Прозрачный цвет ошибки */
export declare const textTransparentNegative = "var(--text-transparent-negative, rgba(255, 41, 62, 0.12))";
/** Прозрачный цвет успеха */
export declare const textTransparentPositive = "var(--text-transparent-positive, rgba(26, 158, 50, 0.12))";
/** Прозрачный цвет предупреждения */
export declare const textTransparentWarning = "var(--text-transparent-warning, rgba(250, 95, 5, 0.12))";
/** Акцентный цвет на темном фоне */
export declare const onDarkTextAccent = "var(--on-dark-text-accent, #FFFFFF)";
/** Акцентный цвет с градиентом на темном фоне */
export declare const onDarkTextAccentGradient = "var(--on-dark-text-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))";
/** Цвет ошибки на темном фоне */
export declare const onDarkTextNegative = "var(--on-dark-text-negative, #FF293E)";
/** Сплошной наборный текст на темном фоне */
export declare const onDarkTextParagraph = "var(--on-dark-text-paragraph, #ECECEC)";
/** Цвет успеха на темном фоне */
export declare const onDarkTextPositive = "var(--on-dark-text-positive, #1A9E32)";
/** Основной цвет текста на темном фоне */
export declare const onDarkTextPrimary = "var(--on-dark-text-primary, #F5F5F5)";
/** Вторичный цвет текста на темном фоне */
export declare const onDarkTextSecondary = "var(--on-dark-text-secondary, #B3B3B3)";
/** Третичный цвет текста на темном фоне */
export declare const onDarkTextTertiary = "var(--on-dark-text-tertiary, #7A7A7A)";
/** Цвет предупреждения на темном фоне */
export declare const onDarkTextWarning = "var(--on-dark-text-warning, #FA5F05)";
/** Прозрачный акцентный цвет на темном фоне */
export declare const onDarkTextTransparentAccent = "var(--on-dark-text-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный акцентный цвет с градиентом на темном фоне */
export declare const onDarkTextTransparentAccentGradient = "var(--on-dark-text-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Прозрачный цвет ошибки на темном фоне */
export declare const onDarkTextTransparentNegative = "var(--on-dark-text-transparent-negative, rgba(255, 41, 62, 0.12))";
/** Прозрачный цвет успеха на темном фоне */
export declare const onDarkTextTransparentPositive = "var(--on-dark-text-transparent-positive, rgba(26, 158, 50, 0.12))";
/** Прозрачный цвет предупреждения на темном фоне */
export declare const onDarkTextTransparentWarning = "var(--on-dark-text-transparent-warning, rgba(250, 95, 5, 0.12))";
/** Акцентный цвет на светлом фоне */
export declare const onLightTextAccent = "var(--on-light-text-accent, #FFFFFF)";
/** Акцентный цвет с градиентом на светлом фоне */
export declare const onLightTextAccentGradient = "var(--on-light-text-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))";
/** Цвет ошибки на светлом фоне */
export declare const onLightTextNegative = "var(--on-light-text-negative, #F31B30)";
/** Сплошной наборный текст на светлом фоне */
export declare const onLightTextParagraph = "var(--on-light-text-paragraph, #262626)";
/** Цвет успеха на светлом фоне */
export declare const onLightTextPositive = "var(--on-light-text-positive, #108E25)";
/** Основной цвет текста на светлом фоне */
export declare const onLightTextPrimary = "var(--on-light-text-primary, #171717)";
/** Вторичный цвет текста на светлом фоне */
export declare const onLightTextSecondary = "var(--on-light-text-secondary, #4E4E4E)";
/** Третичный цвет текста на светлом фоне */
export declare const onLightTextTertiary = "var(--on-light-text-tertiary, #858585)";
/** Цвет предупреждения на светлом фоне */
export declare const onLightTextWarning = "var(--on-light-text-warning, #E85702)";
/** Прозрачный акцентный цвет на светлом фоне */
export declare const onLightTextTransparentAccent = "var(--on-light-text-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный акцентный цвет с градиентом на светлом фоне */
export declare const onLightTextTransparentAccentGradient = "var(--on-light-text-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Прозрачный цвет ошибки на светлом фоне */
export declare const onLightTextTransparentNegative = "var(--on-light-text-transparent-negative, rgba(243, 27, 48, 0.12))";
/** Прозрачный цвет успеха на светлом фоне */
export declare const onLightTextTransparentPositive = "var(--on-light-text-transparent-positive, rgba(16, 142, 37, 0.12))";
/** Прозрачный цвет предупреждения на светлом фоне */
export declare const onLightTextTransparentWarning = "var(--on-light-text-transparent-warning, rgba(232, 87, 2, 0.12))";
/** Инвертированный акцентный цвет */
export declare const inverseTextAccent = "var(--inverse-text-accent, #FFFFFF)";
/** Инвертированный акцентный цвет с градиентом */
export declare const inverseTextAccentGradient = "var(--inverse-text-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))";
/** Инвертированный цвет ошибки */
export declare const inverseTextNegative = "var(--inverse-text-negative, #F31B30)";
/** Инвертированный cплошной наборный текст */
export declare const inverseTextParagraph = "var(--inverse-text-paragraph, #262626)";
/** Инвертированный цвет успеха */
export declare const inverseTextPositive = "var(--inverse-text-positive, #108E25)";
/** Инвертированный основной цвет текста */
export declare const inverseTextPrimary = "var(--inverse-text-primary, #171717)";
/** Инвертированный вторичный цвет текста */
export declare const inverseTextSecondary = "var(--inverse-text-secondary, #4E4E4E)";
/** Инвертированный третичный цвет текста */
export declare const inverseTextTertiary = "var(--inverse-text-tertiary, #858585)";
/** Инвертированный цвет предупреждения */
export declare const inverseTextWarning = "var(--inverse-text-warning, #E85702)";
/** Прозрачный инвертированный акцентный цвет */
export declare const inverseTextTransparentAccent = "var(--inverse-text-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный инвертированный акцентный цвет с градиентом */
export declare const inverseTextTransparentAccentGradient = "var(--inverse-text-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Прозрачный инвертированный цвет ошибки */
export declare const inverseTextTransparentNegative = "var(--inverse-text-transparent-negative, rgba(243, 27, 48, 0.12))";
/** Прозрачный инвертированный цвет успеха */
export declare const inverseTextTransparentPositive = "var(--inverse-text-transparent-positive, rgba(16, 142, 37, 0.12))";
/** Прозрачный инвертированный цвет предупреждения */
export declare const inverseTextTransparentWarning = "var(--inverse-text-transparent-warning, rgba(232, 87, 2, 0.12))";
/** Акцентный фон поверхности/контрола */
export declare const surfaceAccent = "var(--surface-accent, #FFFFFF)";
/** Акцентный фон поверхности/контрола с градиентом */
export declare const surfaceAccentGradient = "var(--surface-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))";
/** Фон поверхности/контрола без заливки */
export declare const surfaceClear = "var(--surface-clear, rgba(0, 0, 0, 0))";
/** Цвет фона поверхности/контрола ошибка */
export declare const surfaceNegative = "var(--surface-negative, #FF293E)";
/** Цвет фона поверхности/контрола успех */
export declare const surfacePositive = "var(--surface-positive, #1A9E32)";
/** Цвет фона поверхности/контрола предупреждение */
export declare const surfaceWarning = "var(--surface-warning, #FA5F05)";
/** Непрозрачный фон поверхности/контрола по умолчанию */
export declare const surfaceSolidDefault = "var(--surface-solid-default, #FFFFFF)";
/** Основной непрозрачный фон поверхности/контрола */
export declare const surfaceSolidPrimary = "var(--surface-solid-primary, #171717)";
/** Вторичный непрозрачный фон поверхности/контрола */
export declare const surfaceSolidSecondary = "var(--surface-solid-secondary, #262626)";
/** Третичный непрозрачный фон поверхности/контрола */
export declare const surfaceSolidTertiary = "var(--surface-solid-tertiary, #363636)";
/** Основной фон для карточек */
export declare const surfaceSolidCard = "var(--surface-solid-card, #171717)";
/** Прозрачный акцентный фон поверхности/контрола */
export declare const surfaceTransparentAccent = "var(--surface-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный акцентный фон поверхности/контрола с градиентом */
export declare const surfaceTransparentAccentGradient = "var(--surface-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Прозрачный фон для карточек */
export declare const surfaceTransparentCard = "var(--surface-transparent-card, rgba(255, 255, 255, 0.12))";
/** Непрозрачный фон поверхности/контрола */
export declare const surfaceTransparentDeep = "var(--surface-transparent-deep, rgba(255, 255, 255, 0.64))";
/** Прозрачный цвет фона поверхности/контрола ошибка */
export declare const surfaceTransparentNegative = "var(--surface-transparent-negative, rgba(255, 41, 62, 0.12))";
/** Прозрачный цвет фона поверхности/контрола успех */
export declare const surfaceTransparentPositive = "var(--surface-transparent-positive, rgba(26, 158, 50, 0.12))";
/** Основной прозрачный фон поверхности/контрола */
export declare const surfaceTransparentPrimary = "var(--surface-transparent-primary, rgba(255, 255, 255, 0.06))";
/** Вторичный прозрачный фон поверхности/контрола */
export declare const surfaceTransparentSecondary = "var(--surface-transparent-secondary, rgba(255, 255, 255, 0.12))";
/** Третичный прозрачный фон поверхности/контрола */
export declare const surfaceTransparentTertiary = "var(--surface-transparent-tertiary, rgba(255, 255, 255, 0.2))";
/** Прозрачный цвет фона поверхности/контрола предупреждение */
export declare const surfaceTransparentWarning = "var(--surface-transparent-warning, rgba(250, 95, 5, 0.12))";
/** Акцентный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceAccent = "var(--on-dark-surface-accent, #FFFFFF)";
/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
export declare const onDarkSurfaceAccentGradient = "var(--on-dark-surface-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))";
/** Фон поверхности/контрола без заливки на темном фоне */
export declare const onDarkSurfaceClear = "var(--on-dark-surface-clear, rgba(0, 0, 0, 0))";
/** Цвет фона поверхности/контрола ошибка на темном фоне */
export declare const onDarkSurfaceNegative = "var(--on-dark-surface-negative, #FF293E)";
/** Цвет фона поверхности/контрола успех на темном фоне */
export declare const onDarkSurfacePositive = "var(--on-dark-surface-positive, #1A9E32)";
/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export declare const onDarkSurfaceWarning = "var(--on-dark-surface-warning, #FA5F05)";
/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export declare const onDarkSurfaceSolidDefault = "var(--on-dark-surface-solid-default, #FFFFFF)";
/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceSolidPrimary = "var(--on-dark-surface-solid-primary, #171717)";
/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceSolidSecondary = "var(--on-dark-surface-solid-secondary, #262626)";
/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceSolidTertiary = "var(--on-dark-surface-solid-tertiary, #363636)";
/** Основной фон для карточек на темном фоне */
export declare const onDarkSurfaceSolidCard = "var(--on-dark-surface-solid-card, #171717)";
/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceTransparentAccent = "var(--on-dark-surface-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный акцентный фон поверхности/контрола с градиентом на темном фоне */
export declare const onDarkSurfaceTransparentAccentGradient = "var(--on-dark-surface-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Прозрачный фон для карточек на темном фоне */
export declare const onDarkSurfaceTransparentCard = "var(--on-dark-surface-transparent-card, rgba(255, 255, 255, 0.12))";
/** Непрозрачный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceTransparentDeep = "var(--on-dark-surface-transparent-deep, rgba(255, 255, 255, 0.64))";
/** Прозрачный цвет фона поверхности/контрола ошибка на темном фоне */
export declare const onDarkSurfaceTransparentNegative = "var(--on-dark-surface-transparent-negative, rgba(255, 41, 62, 0.12))";
/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export declare const onDarkSurfaceTransparentPositive = "var(--on-dark-surface-transparent-positive, rgba(26, 158, 50, 0.12))";
/** Основной прозрачный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceTransparentPrimary = "var(--on-dark-surface-transparent-primary, rgba(255, 255, 255, 0.06))";
/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceTransparentSecondary = "var(--on-dark-surface-transparent-secondary, rgba(255, 255, 255, 0.12))";
/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export declare const onDarkSurfaceTransparentTertiary = "var(--on-dark-surface-transparent-tertiary, rgba(255, 255, 255, 0.2))";
/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export declare const onDarkSurfaceTransparentWarning = "var(--on-dark-surface-transparent-warning, rgba(250, 95, 5, 0.12))";
/** Акцентный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceAccent = "var(--on-light-surface-accent, #FFFFFF)";
/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
export declare const onLightSurfaceAccentGradient = "var(--on-light-surface-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))";
/** Фон поверхности/контрола без заливки на светлом фоне */
export declare const onLightSurfaceClear = "var(--on-light-surface-clear, rgba(0, 0, 0, 0))";
/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export declare const onLightSurfaceNegative = "var(--on-light-surface-negative, #F31B30)";
/** Цвет фона поверхности/контрола успех на светлом фоне */
export declare const onLightSurfacePositive = "var(--on-light-surface-positive, #108E25)";
/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export declare const onLightSurfaceWarning = "var(--on-light-surface-warning, #E85702)";
/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export declare const onLightSurfaceSolidDefault = "var(--on-light-surface-solid-default, #080808)";
/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceSolidPrimary = "var(--on-light-surface-solid-primary, #F5F5F5)";
/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceSolidSecondary = "var(--on-light-surface-solid-secondary, #ECECEC)";
/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceSolidTertiary = "var(--on-light-surface-solid-tertiary, #DDDDDD)";
/** Основной фон для карточек на светлом фоне */
export declare const onLightSurfaceSolidCard = "var(--on-light-surface-solid-card, #F7F7F7)";
/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceTransparentAccent = "var(--on-light-surface-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный акцентный фон поверхности/контрола с градиентом на светлом фоне */
export declare const onLightSurfaceTransparentAccentGradient = "var(--on-light-surface-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Прозрачный фон для карточек на светлом фоне */
export declare const onLightSurfaceTransparentCard = "var(--on-light-surface-transparent-card, rgba(8, 8, 8, 0.06))";
/** Непрозрачный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceTransparentDeep = "var(--on-light-surface-transparent-deep, rgba(0, 0, 0, 0.64))";
/** Прозрачный цвет фона поверхности/контрола ошибка на светлом фоне */
export declare const onLightSurfaceTransparentNegative = "var(--on-light-surface-transparent-negative, rgba(243, 27, 48, 0.12))";
/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export declare const onLightSurfaceTransparentPositive = "var(--on-light-surface-transparent-positive, rgba(16, 142, 37, 0.12))";
/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceTransparentPrimary = "var(--on-light-surface-transparent-primary, rgba(8, 8, 8, 0.02))";
/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceTransparentSecondary = "var(--on-light-surface-transparent-secondary, rgba(8, 8, 8, 0.06))";
/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export declare const onLightSurfaceTransparentTertiary = "var(--on-light-surface-transparent-tertiary, rgba(8, 8, 8, 0.12))";
/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export declare const onLightSurfaceTransparentWarning = "var(--on-light-surface-transparent-warning, rgba(232, 87, 2, 0.12))";
/** Инвертированный акцентный фон поверхности/контрола */
export declare const inverseSurfaceAccent = "var(--inverse-surface-accent, #FFFFFF)";
/** Инвертированный акцентный фон поверхности/контрола с градиентом */
export declare const inverseSurfaceAccentGradient = "var(--inverse-surface-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))";
/** Инвертированный фон поверхности/контрола без заливки */
export declare const inverseSurfaceClear = "var(--inverse-surface-clear, rgba(0, 0, 0, 0))";
/** Инвертированный цвет фона поверхности/контрола ошибка */
export declare const inverseSurfaceNegative = "var(--inverse-surface-negative, #F31B30)";
/** Инвертированный цвет фона поверхности/контрола успех */
export declare const inverseSurfacePositive = "var(--inverse-surface-positive, #108E25)";
/** Инвертированный цвет фона поверхности/контрола предупреждение */
export declare const inverseSurfaceWarning = "var(--inverse-surface-warning, #E85702)";
/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export declare const inverseSurfaceSolidDefault = "var(--inverse-surface-solid-default, #080808)";
/** Инвертированный основной непрозрачный фон поверхности/контрола */
export declare const inverseSurfaceSolidPrimary = "var(--inverse-surface-solid-primary, #F5F5F5)";
/** Инвертированный вторичный непрозрачный фон поверхности/контрола */
export declare const inverseSurfaceSolidSecondary = "var(--inverse-surface-solid-secondary, #ECECEC)";
/** Инвертированный третичный непрозрачный фон поверхности/контрола */
export declare const inverseSurfaceSolidTertiary = "var(--inverse-surface-solid-tertiary, #DDDDDD)";
/** Инвертированный основной фон для карточек */
export declare const inverseSurfaceSolidCard = "var(--inverse-surface-solid-card, #F7F7F7)";
/** Прозрачный инвертированный акцентный фон поверхности/контрола */
export declare const inverseSurfaceTransparentAccent = "var(--inverse-surface-transparent-accent, rgba(255, 255, 255, 0.12))";
/** Прозрачный инвертированный акцентный фон поверхности/контрола с градиентом */
export declare const inverseSurfaceTransparentAccentGradient = "var(--inverse-surface-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))";
/** Инвертированный прозрачный фон для карточек */
export declare const inverseSurfaceTransparentCard = "var(--inverse-surface-transparent-card, rgba(8, 8, 8, 0.06))";
/** Инвертированный непрозрачный фон поверхности/контрола */
export declare const inverseSurfaceTransparentDeep = "var(--inverse-surface-transparent-deep, rgba(0, 0, 0, 0.64))";
/** Прозрачный инвертированный цвет фона поверхности/контрола ошибка */
export declare const inverseSurfaceTransparentNegative = "var(--inverse-surface-transparent-negative, rgba(243, 27, 48, 0.12))";
/** Прозрачный инвертированный цвет фона поверхности/контрола успех */
export declare const inverseSurfaceTransparentPositive = "var(--inverse-surface-transparent-positive, rgba(16, 142, 37, 0.12))";
/** Инвертированный основной прозрачный фон поверхности/контрола */
export declare const inverseSurfaceTransparentPrimary = "var(--inverse-surface-transparent-primary, rgba(8, 8, 8, 0.02))";
/** Инвертированный вторичный прозрачный фон поверхности/контрола */
export declare const inverseSurfaceTransparentSecondary = "var(--inverse-surface-transparent-secondary, rgba(8, 8, 8, 0.06))";
/** Инвертированный третичный прозрачный фон поверхности/контрола */
export declare const inverseSurfaceTransparentTertiary = "var(--inverse-surface-transparent-tertiary, rgba(8, 8, 8, 0.12))";
/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export declare const inverseSurfaceTransparentWarning = "var(--inverse-surface-transparent-warning, rgba(232, 87, 2, 0.12))";
/** Основной фон */
export declare const backgroundPrimary = "var(--background-primary, #000000)";
/** Вторичный фон */
export declare const backgroundSecondary = "var(--background-secondary, #080808)";
/** Третичный фон */
export declare const backgroundTertiary = "var(--background-tertiary, #171717)";
/** Основной фон на темном фоне */
export declare const darkBackgroundPrimary = "var(--dark-background-primary, #000000)";
/** Вторичный фон на темном фоне */
export declare const darkBackgroundSecondary = "var(--dark-background-secondary, #080808)";
/** Третичный фон на темном фоне */
export declare const darkBackgroundTertiary = "var(--dark-background-tertiary, #171717)";
/** Основной фон на светлом фоне */
export declare const lightBackgroundPrimary = "var(--light-background-primary, #FFFFFF)";
/** Вторичный фон на светлом фоне */
export declare const lightBackgroundSecondary = "var(--light-background-secondary, #FFFFFF)";
/** Третичный фон на светлом фоне */
export declare const lightBackgroundTertiary = "var(--light-background-tertiary, #FFFFFF)";
/** Инвертированный основной фон */
export declare const inverseBackgroundPrimary = "var(--inverse-background-primary, #FFFFFF)";
/** Инвертированный вторичный фон */
export declare const inverseBackgroundSecondary = "var(--inverse-background-secondary, #FFFFFF)";
/** Инвертированный третичный фон */
export declare const inverseBackgroundTertiary = "var(--inverse-background-tertiary, #FFFFFF)";
export declare const skeletonGradient = "var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))";
export declare const skeletonGradientLighter = "var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))";
/** @deprecated instead use onDarkTextPrimary */
export declare const whitePrimary = "var(--plasma-colors-white-primary, var(--on-dark-text-primary))";
/** @deprecated instead use onDarkTextSecondary */
export declare const whiteSecondary = "var(--plasma-colors-white-secondary, var(--on-dark-text-secondary))";
/** @deprecated instead use onDarkTextTertiary */
export declare const whiteTertiary = "var(--plasma-colors-white-tertiary, var(--on-dark-text-tertiary))";
/** @deprecated instead use onLightTextPrimary */
export declare const blackPrimary = "var(--plasma-colors-black-primary, var(--on-light-text-primary))";
/** @deprecated instead use onLightTextSecondary */
export declare const blackSecondary = "var(--plasma-colors-black-secondary, var(--on-light-text-secondary))";
/** @deprecated instead use onLightTextTertiary */
export declare const blackTertiary = "var(--plasma-colors-black-tertiary, var(--on-light-text-tertiary))";
/** @deprecated instead use onLightSurfaceSolidDefault */
export declare const buttonBlack = "var(--plasma-colors-button-black, var(--on-light-surface-solid-default))";
/** @deprecated instead use onLightSurfaceTransparentSecondary */
export declare const buttonBlackSecondary = "var(--plasma-colors-button-black-secondary, var(--on-light-surface-transparent-secondary))";
/** @deprecated instead use onDarkSurfaceSolidDefault */
export declare const buttonWhite = "var(--plasma-colors-button-white, var(--on-dark-surface-solid-default))";
/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export declare const buttonWhiteSecondary = "var(--plasma-colors-button-white-secondary, var(--on-dark-surface-transparent-secondary))";
/** @deprecated instead use textPrimary */
export declare const text = "var(--plasma-colors-text, var(--text-primary))";
/** @deprecated instead use textPrimary */
export declare const primary = "var(--plasma-colors-primary, var(--text-primary))";
/** @deprecated instead use textSecondary */
export declare const secondary = "var(--plasma-colors-secondary, var(--text-secondary))";
/** @deprecated instead use textTertiary */
export declare const tertiary = "var(--plasma-colors-tertiary, var(--text-tertiary))";
/** @deprecated instead use textParagraph */
export declare const paragraph = "var(--plasma-colors-paragraph, var(--text-paragraph))";
/** @deprecated instead use backgroundPrimary */
export declare const background = "var(--plasma-colors-background, var(--background-primary))";
/** @deprecated instead use textAccent */
export declare const accent = "var(--plasma-colors-accent, var(--text-accent))";
/** @deprecated instead use textPositive */
export declare const success = "var(--plasma-colors-success, var(--text-positive))";
/** @deprecated instead use textWarning */
export declare const warning = "var(--plasma-colors-warning, var(--text-warning))";
/** @deprecated instead use textNegative */
export declare const critical = "var(--plasma-colors-critical, var(--text-negative))";
/** @deprecated instead use overlaySoft */
export declare const overlay = "var(--plasma-colors-overlay, var(--overlay-soft))";
/** @deprecated instead use surfaceTransparentPrimary */
export declare const surfaceLiquid01 = "var(--plasma-colors-surface-liquid01, var(--surface-transparent-primary))";
/** @deprecated instead use surfaceTransparentSecondary */
export declare const surfaceLiquid02 = "var(--plasma-colors-surface-liquid02, var(--surface-transparent-secondary))";
/** @deprecated instead use surfaceTransparentTertiary */
export declare const surfaceLiquid03 = "var(--plasma-colors-surface-liquid03, var(--surface-transparent-tertiary))";
/** @deprecated instead use surfaceSolidPrimary */
export declare const surfaceSolid01 = "var(--plasma-colors-surface-solid01, var(--surface-solid-primary))";
/** @deprecated instead use surfaceSolidSecondary */
export declare const surfaceSolid02 = "var(--plasma-colors-surface-solid02, var(--surface-solid-secondary))";
/** @deprecated instead use surfaceSolidTertiary */
export declare const surfaceSolid03 = "var(--plasma-colors-surface-solid03, var(--surface-solid-tertiary))";
/** @deprecated instead use surfaceTransparentCard */
export declare const surfaceCard = "var(--plasma-colors-surface-card, var(--surface-transparent-card))";
/** @deprecated instead use surfaceTransparentSecondary */
export declare const buttonSecondary = "var(--plasma-colors-button-secondary, var(--surface-transparent-secondary))";
/** @deprecated instead use textAccent */
export declare const buttonAccent = "var(--plasma-colors-button-accent, var(--text-accent))";
/** @deprecated instead use surfacePositive */
export declare const buttonSuccess = "var(--plasma-colors-button-success, var(--surface-positive))";
/** @deprecated instead use surfaceWarning */
export declare const buttonWarning = "var(--plasma-colors-button-warning, var(--surface-warning))";
/** @deprecated instead use surfaceNegative */
export declare const buttonCritical = "var(--plasma-colors-button-critical, var(--surface-negative))";
export declare const shadowDownSoftS = "var(--shadow-down-soft-s, 0px 4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-down-soft-s, 0px 1px 4px -1px rgba(0, 0, 0, 0.04))";
export declare const shadowDownSoftM = "var(--shadow-down-soft-m, 0px 24px 48px -8px rgba(0, 0, 0, 0.08))";
export declare const shadowDownSoftL = "var(--shadow-down-soft-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.08))";
export declare const shadowDownHardS = "var(--shadow-down-hard-s, 0px 4px 12px -3px rgba(8, 8, 8, 0.16)), var(--shadow-down-hard-s, 0px 1px 4px -2px rgba(0, 0, 0, 0.08))";
export declare const shadowDownHardM = "var(--shadow-down-hard-m, 0px 16px 32px -8px rgba(0, 0, 0, 0.24))";
export declare const shadowDownHardL = "var(--shadow-down-hard-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.40))";
export declare const shadowUpSoftS = "var(--shadow-up-soft-s, 0px -4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-up-soft-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))";
export declare const shadowUpSoftM = "var(--shadow-up-soft-m, 0px -24px 48px -8px rgba(0, 0, 0, 0.08))";
export declare const shadowUpSoftL = "var(--shadow-up-soft-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.08))";
export declare const shadowUpHardS = "var(--shadow-up-hard-s, 0px -4px 12px -3px rgba(8, 8, 8, 0.20)), var(--shadow-up-hard-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))";
export declare const shadowUpHardM = "var(--shadow-up-hard-m, 0px -16px 32px -8px rgba(0, 0, 0, 0.24))";
export declare const shadowUpHardL = "var(--shadow-up-hard-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.40))";
export declare const borderRadiusXxs = "var(--border-radius-xxs, 4px)";
export declare const borderRadiusXs = "var(--border-radius-xs, 6px)";
export declare const borderRadiusS = "var(--border-radius-s, 8px)";
export declare const borderRadiusM = "var(--border-radius-m, 12px)";
export declare const borderRadiusL = "var(--border-radius-l, 16px)";
export declare const borderRadiusXl = "var(--border-radius-xl, 20px)";
export declare const borderRadiusXxl = "var(--border-radius-xxl, 40px)";
