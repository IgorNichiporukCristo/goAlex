// Generated by robots, do not change this manually!
/** Цвет фона паранжи светлый */
export var overlaySoft = 'var(--overlay-soft, rgba(0, 0, 0, 0.56))';
/** Цвет фона паранжи темный */
export var overlayHard = 'var(--overlay-hard, rgba(0, 0, 0, 0.9))';
/** Цвет фона паранжи светлый на темном фоне */
export var onDarkOverlaySoft = 'var(--on-dark-overlay-soft, rgba(0, 0, 0, 0.56))';
/** Цвет фона паранжи темный на темном фоне */
export var onDarkOverlayHard = 'var(--on-dark-overlay-hard, rgba(0, 0, 0, 0.9))';
/** Цвет фона паранжи светлый на светлом фоне */
export var onLightOverlaySoft = 'var(--on-light-overlay-soft, rgba(0, 0, 0, 0.56))';
/** Цвет фона паранжи темный на светлом фоне */
export var onLightOverlayHard = 'var(--on-light-overlay-hard, rgba(0, 0, 0, 0.9))';
/** Инвертированный цвет фона паранжи светлый */
export var inverseOverlaySoft = 'var(--inverse-overlay-soft, rgba(0, 0, 0, 0.56))';
/** Инвертированный цвет фона паранжи темный */
export var inverseOverlayHard = 'var(--inverse-overlay-hard, rgba(0, 0, 0, 0.9))';
/** Акцентный цвет */
export var textAccent = 'var(--text-accent, #FFFFFF)';
/** Акцентный цвет с градиентом */
export var textAccentGradient = 'var(--text-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';
/** Цвет ошибки */
export var textNegative = 'var(--text-negative, #FF293E)';
/** Сплошной наборный текст */
export var textParagraph = 'var(--text-paragraph, #ECECEC)';
/** Цвет успеха */
export var textPositive = 'var(--text-positive, #1A9E32)';
/** Основной цвет текста */
export var textPrimary = 'var(--text-primary, #F5F5F5)';
/** Вторичный цвет текста */
export var textSecondary = 'var(--text-secondary, #B3B3B3)';
/** Третичный цвет текста */
export var textTertiary = 'var(--text-tertiary, #7A7A7A)';
/** Цвет предупреждения */
export var textWarning = 'var(--text-warning, #FA5F05)';
/** Прозрачный акцентный цвет */
export var textTransparentAccent = 'var(--text-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный акцентный цвет с градиентом */
export var textTransparentAccentGradient = 'var(--text-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Прозрачный цвет ошибки */
export var textTransparentNegative = 'var(--text-transparent-negative, rgba(255, 41, 62, 0.12))';
/** Прозрачный цвет успеха */
export var textTransparentPositive = 'var(--text-transparent-positive, rgba(26, 158, 50, 0.12))';
/** Прозрачный цвет предупреждения */
export var textTransparentWarning = 'var(--text-transparent-warning, rgba(250, 95, 5, 0.12))';
/** Акцентный цвет на темном фоне */
export var onDarkTextAccent = 'var(--on-dark-text-accent, #FFFFFF)';
/** Акцентный цвет с градиентом на темном фоне */
export var onDarkTextAccentGradient = 'var(--on-dark-text-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';
/** Цвет ошибки на темном фоне */
export var onDarkTextNegative = 'var(--on-dark-text-negative, #FF293E)';
/** Сплошной наборный текст на темном фоне */
export var onDarkTextParagraph = 'var(--on-dark-text-paragraph, #ECECEC)';
/** Цвет успеха на темном фоне */
export var onDarkTextPositive = 'var(--on-dark-text-positive, #1A9E32)';
/** Основной цвет текста на темном фоне */
export var onDarkTextPrimary = 'var(--on-dark-text-primary, #F5F5F5)';
/** Вторичный цвет текста на темном фоне */
export var onDarkTextSecondary = 'var(--on-dark-text-secondary, #B3B3B3)';
/** Третичный цвет текста на темном фоне */
export var onDarkTextTertiary = 'var(--on-dark-text-tertiary, #7A7A7A)';
/** Цвет предупреждения на темном фоне */
export var onDarkTextWarning = 'var(--on-dark-text-warning, #FA5F05)';
/** Прозрачный акцентный цвет на темном фоне */
export var onDarkTextTransparentAccent = 'var(--on-dark-text-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный акцентный цвет с градиентом на темном фоне */
export var onDarkTextTransparentAccentGradient = 'var(--on-dark-text-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Прозрачный цвет ошибки на темном фоне */
export var onDarkTextTransparentNegative = 'var(--on-dark-text-transparent-negative, rgba(255, 41, 62, 0.12))';
/** Прозрачный цвет успеха на темном фоне */
export var onDarkTextTransparentPositive = 'var(--on-dark-text-transparent-positive, rgba(26, 158, 50, 0.12))';
/** Прозрачный цвет предупреждения на темном фоне */
export var onDarkTextTransparentWarning = 'var(--on-dark-text-transparent-warning, rgba(250, 95, 5, 0.12))';
/** Акцентный цвет на светлом фоне */
export var onLightTextAccent = 'var(--on-light-text-accent, #FFFFFF)';
/** Акцентный цвет с градиентом на светлом фоне */
export var onLightTextAccentGradient = 'var(--on-light-text-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';
/** Цвет ошибки на светлом фоне */
export var onLightTextNegative = 'var(--on-light-text-negative, #F31B30)';
/** Сплошной наборный текст на светлом фоне */
export var onLightTextParagraph = 'var(--on-light-text-paragraph, #262626)';
/** Цвет успеха на светлом фоне */
export var onLightTextPositive = 'var(--on-light-text-positive, #108E25)';
/** Основной цвет текста на светлом фоне */
export var onLightTextPrimary = 'var(--on-light-text-primary, #171717)';
/** Вторичный цвет текста на светлом фоне */
export var onLightTextSecondary = 'var(--on-light-text-secondary, #4E4E4E)';
/** Третичный цвет текста на светлом фоне */
export var onLightTextTertiary = 'var(--on-light-text-tertiary, #858585)';
/** Цвет предупреждения на светлом фоне */
export var onLightTextWarning = 'var(--on-light-text-warning, #E85702)';
/** Прозрачный акцентный цвет на светлом фоне */
export var onLightTextTransparentAccent = 'var(--on-light-text-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный акцентный цвет с градиентом на светлом фоне */
export var onLightTextTransparentAccentGradient = 'var(--on-light-text-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Прозрачный цвет ошибки на светлом фоне */
export var onLightTextTransparentNegative = 'var(--on-light-text-transparent-negative, rgba(243, 27, 48, 0.12))';
/** Прозрачный цвет успеха на светлом фоне */
export var onLightTextTransparentPositive = 'var(--on-light-text-transparent-positive, rgba(16, 142, 37, 0.12))';
/** Прозрачный цвет предупреждения на светлом фоне */
export var onLightTextTransparentWarning = 'var(--on-light-text-transparent-warning, rgba(232, 87, 2, 0.12))';
/** Инвертированный акцентный цвет */
export var inverseTextAccent = 'var(--inverse-text-accent, #FFFFFF)';
/** Инвертированный акцентный цвет с градиентом */
export var inverseTextAccentGradient = 'var(--inverse-text-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';
/** Инвертированный цвет ошибки */
export var inverseTextNegative = 'var(--inverse-text-negative, #F31B30)';
/** Инвертированный cплошной наборный текст */
export var inverseTextParagraph = 'var(--inverse-text-paragraph, #262626)';
/** Инвертированный цвет успеха */
export var inverseTextPositive = 'var(--inverse-text-positive, #108E25)';
/** Инвертированный основной цвет текста */
export var inverseTextPrimary = 'var(--inverse-text-primary, #171717)';
/** Инвертированный вторичный цвет текста */
export var inverseTextSecondary = 'var(--inverse-text-secondary, #4E4E4E)';
/** Инвертированный третичный цвет текста */
export var inverseTextTertiary = 'var(--inverse-text-tertiary, #858585)';
/** Инвертированный цвет предупреждения */
export var inverseTextWarning = 'var(--inverse-text-warning, #E85702)';
/** Прозрачный инвертированный акцентный цвет */
export var inverseTextTransparentAccent = 'var(--inverse-text-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный инвертированный акцентный цвет с градиентом */
export var inverseTextTransparentAccentGradient = 'var(--inverse-text-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Прозрачный инвертированный цвет ошибки */
export var inverseTextTransparentNegative = 'var(--inverse-text-transparent-negative, rgba(243, 27, 48, 0.12))';
/** Прозрачный инвертированный цвет успеха */
export var inverseTextTransparentPositive = 'var(--inverse-text-transparent-positive, rgba(16, 142, 37, 0.12))';
/** Прозрачный инвертированный цвет предупреждения */
export var inverseTextTransparentWarning = 'var(--inverse-text-transparent-warning, rgba(232, 87, 2, 0.12))';
/** Акцентный фон поверхности/контрола */
export var surfaceAccent = 'var(--surface-accent, #FFFFFF)';
/** Акцентный фон поверхности/контрола с градиентом */
export var surfaceAccentGradient = 'var(--surface-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';
/** Фон поверхности/контрола без заливки */
export var surfaceClear = 'var(--surface-clear, rgba(0, 0, 0, 0))';
/** Цвет фона поверхности/контрола ошибка */
export var surfaceNegative = 'var(--surface-negative, #FF293E)';
/** Цвет фона поверхности/контрола успех */
export var surfacePositive = 'var(--surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение */
export var surfaceWarning = 'var(--surface-warning, #FA5F05)';
/** Непрозрачный фон поверхности/контрола по умолчанию */
export var surfaceSolidDefault = 'var(--surface-solid-default, #FFFFFF)';
/** Основной непрозрачный фон поверхности/контрола */
export var surfaceSolidPrimary = 'var(--surface-solid-primary, #171717)';
/** Вторичный непрозрачный фон поверхности/контрола */
export var surfaceSolidSecondary = 'var(--surface-solid-secondary, #262626)';
/** Третичный непрозрачный фон поверхности/контрола */
export var surfaceSolidTertiary = 'var(--surface-solid-tertiary, #363636)';
/** Основной фон для карточек */
export var surfaceSolidCard = 'var(--surface-solid-card, #171717)';
/** Прозрачный акцентный фон поверхности/контрола */
export var surfaceTransparentAccent = 'var(--surface-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный акцентный фон поверхности/контрола с градиентом */
export var surfaceTransparentAccentGradient = 'var(--surface-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Прозрачный фон для карточек */
export var surfaceTransparentCard = 'var(--surface-transparent-card, rgba(255, 255, 255, 0.12))';
/** Непрозрачный фон поверхности/контрола */
export var surfaceTransparentDeep = 'var(--surface-transparent-deep, rgba(255, 255, 255, 0.64))';
/** Прозрачный цвет фона поверхности/контрола ошибка */
export var surfaceTransparentNegative = 'var(--surface-transparent-negative, rgba(255, 41, 62, 0.12))';
/** Прозрачный цвет фона поверхности/контрола успех */
export var surfaceTransparentPositive = 'var(--surface-transparent-positive, rgba(26, 158, 50, 0.12))';
/** Основной прозрачный фон поверхности/контрола */
export var surfaceTransparentPrimary = 'var(--surface-transparent-primary, rgba(255, 255, 255, 0.06))';
/** Вторичный прозрачный фон поверхности/контрола */
export var surfaceTransparentSecondary = 'var(--surface-transparent-secondary, rgba(255, 255, 255, 0.12))';
/** Третичный прозрачный фон поверхности/контрола */
export var surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';
/** Прозрачный цвет фона поверхности/контрола предупреждение */
export var surfaceTransparentWarning = 'var(--surface-transparent-warning, rgba(250, 95, 5, 0.12))';
/** Акцентный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #FFFFFF)';
/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
export var onDarkSurfaceAccentGradient = 'var(--on-dark-surface-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';
/** Фон поверхности/контрола без заливки на темном фоне */
export var onDarkSurfaceClear = 'var(--on-dark-surface-clear, rgba(0, 0, 0, 0))';
/** Цвет фона поверхности/контрола ошибка на темном фоне */
export var onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';
/** Цвет фона поверхности/контрола успех на темном фоне */
export var onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export var onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #FA5F05)';
/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export var onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, #FFFFFF)';
/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #171717)';
/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #262626)';
/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #363636)';
/** Основной фон для карточек на темном фоне */
export var onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #171717)';
/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentAccent = 'var(--on-dark-surface-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный акцентный фон поверхности/контрола с градиентом на темном фоне */
export var onDarkSurfaceTransparentAccentGradient = 'var(--on-dark-surface-transparent-accent-gradient, linear-gradient(135deg, black 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Прозрачный фон для карточек на темном фоне */
export var onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, rgba(255, 255, 255, 0.12))';
/** Непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentDeep = 'var(--on-dark-surface-transparent-deep, rgba(255, 255, 255, 0.64))';
/** Прозрачный цвет фона поверхности/контрола ошибка на темном фоне */
export var onDarkSurfaceTransparentNegative = 'var(--on-dark-surface-transparent-negative, rgba(255, 41, 62, 0.12))';
/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export var onDarkSurfaceTransparentPositive = 'var(--on-dark-surface-transparent-positive, rgba(26, 158, 50, 0.12))';
/** Основной прозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, rgba(255, 255, 255, 0.06))';
/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary, rgba(255, 255, 255, 0.12))';
/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';
/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export var onDarkSurfaceTransparentWarning = 'var(--on-dark-surface-transparent-warning, rgba(250, 95, 5, 0.12))';
/** Акцентный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceAccent = 'var(--on-light-surface-accent, #FFFFFF)';
/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
export var onLightSurfaceAccentGradient = 'var(--on-light-surface-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';
/** Фон поверхности/контрола без заливки на светлом фоне */
export var onLightSurfaceClear = 'var(--on-light-surface-clear, rgba(0, 0, 0, 0))';
/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export var onLightSurfaceNegative = 'var(--on-light-surface-negative, #F31B30)';
/** Цвет фона поверхности/контрола успех на светлом фоне */
export var onLightSurfacePositive = 'var(--on-light-surface-positive, #108E25)';
/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export var onLightSurfaceWarning = 'var(--on-light-surface-warning, #E85702)';
/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export var onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #080808)';
/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F5F5F5)';
/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #ECECEC)';
/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #DDDDDD)';
/** Основной фон для карточек на светлом фоне */
export var onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, #F7F7F7)';
/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentAccent = 'var(--on-light-surface-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный акцентный фон поверхности/контрола с градиентом на светлом фоне */
export var onLightSurfaceTransparentAccentGradient = 'var(--on-light-surface-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Прозрачный фон для карточек на светлом фоне */
export var onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, rgba(8, 8, 8, 0.06))';
/** Непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentDeep = 'var(--on-light-surface-transparent-deep, rgba(0, 0, 0, 0.64))';
/** Прозрачный цвет фона поверхности/контрола ошибка на светлом фоне */
export var onLightSurfaceTransparentNegative = 'var(--on-light-surface-transparent-negative, rgba(243, 27, 48, 0.12))';
/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export var onLightSurfaceTransparentPositive = 'var(--on-light-surface-transparent-positive, rgba(16, 142, 37, 0.12))';
/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, rgba(8, 8, 8, 0.02))';
/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, rgba(8, 8, 8, 0.06))';
/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, rgba(8, 8, 8, 0.12))';
/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export var onLightSurfaceTransparentWarning = 'var(--on-light-surface-transparent-warning, rgba(232, 87, 2, 0.12))';
/** Инвертированный акцентный фон поверхности/контрола */
export var inverseSurfaceAccent = 'var(--inverse-surface-accent, #FFFFFF)';
/** Инвертированный акцентный фон поверхности/контрола с градиентом */
export var inverseSurfaceAccentGradient = 'var(--inverse-surface-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';
/** Инвертированный фон поверхности/контрола без заливки */
export var inverseSurfaceClear = 'var(--inverse-surface-clear, rgba(0, 0, 0, 0))';
/** Инвертированный цвет фона поверхности/контрола ошибка */
export var inverseSurfaceNegative = 'var(--inverse-surface-negative, #F31B30)';
/** Инвертированный цвет фона поверхности/контрола успех */
export var inverseSurfacePositive = 'var(--inverse-surface-positive, #108E25)';
/** Инвертированный цвет фона поверхности/контрола предупреждение */
export var inverseSurfaceWarning = 'var(--inverse-surface-warning, #E85702)';
/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export var inverseSurfaceSolidDefault = 'var(--inverse-surface-solid-default, #080808)';
/** Инвертированный основной непрозрачный фон поверхности/контрола */
export var inverseSurfaceSolidPrimary = 'var(--inverse-surface-solid-primary, #F5F5F5)';
/** Инвертированный вторичный непрозрачный фон поверхности/контрола */
export var inverseSurfaceSolidSecondary = 'var(--inverse-surface-solid-secondary, #ECECEC)';
/** Инвертированный третичный непрозрачный фон поверхности/контрола */
export var inverseSurfaceSolidTertiary = 'var(--inverse-surface-solid-tertiary, #DDDDDD)';
/** Инвертированный основной фон для карточек */
export var inverseSurfaceSolidCard = 'var(--inverse-surface-solid-card, #F7F7F7)';
/** Прозрачный инвертированный акцентный фон поверхности/контрола */
export var inverseSurfaceTransparentAccent = 'var(--inverse-surface-transparent-accent, rgba(255, 255, 255, 0.12))';
/** Прозрачный инвертированный акцентный фон поверхности/контрола с градиентом */
export var inverseSurfaceTransparentAccentGradient = 'var(--inverse-surface-transparent-accent-gradient, linear-gradient(135deg, white 0%, rgba(255, 255, 255, 0.12) 100%))';
/** Инвертированный прозрачный фон для карточек */
export var inverseSurfaceTransparentCard = 'var(--inverse-surface-transparent-card, rgba(8, 8, 8, 0.06))';
/** Инвертированный непрозрачный фон поверхности/контрола */
export var inverseSurfaceTransparentDeep = 'var(--inverse-surface-transparent-deep, rgba(0, 0, 0, 0.64))';
/** Прозрачный инвертированный цвет фона поверхности/контрола ошибка */
export var inverseSurfaceTransparentNegative = 'var(--inverse-surface-transparent-negative, rgba(243, 27, 48, 0.12))';
/** Прозрачный инвертированный цвет фона поверхности/контрола успех */
export var inverseSurfaceTransparentPositive = 'var(--inverse-surface-transparent-positive, rgba(16, 142, 37, 0.12))';
/** Инвертированный основной прозрачный фон поверхности/контрола */
export var inverseSurfaceTransparentPrimary = 'var(--inverse-surface-transparent-primary, rgba(8, 8, 8, 0.02))';
/** Инвертированный вторичный прозрачный фон поверхности/контрола */
export var inverseSurfaceTransparentSecondary = 'var(--inverse-surface-transparent-secondary, rgba(8, 8, 8, 0.06))';
/** Инвертированный третичный прозрачный фон поверхности/контрола */
export var inverseSurfaceTransparentTertiary = 'var(--inverse-surface-transparent-tertiary, rgba(8, 8, 8, 0.12))';
/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export var inverseSurfaceTransparentWarning = 'var(--inverse-surface-transparent-warning, rgba(232, 87, 2, 0.12))';
/** Основной фон */
export var backgroundPrimary = 'var(--background-primary, #000000)';
/** Вторичный фон */
export var backgroundSecondary = 'var(--background-secondary, #080808)';
/** Третичный фон */
export var backgroundTertiary = 'var(--background-tertiary, #171717)';
/** Основной фон на темном фоне */
export var darkBackgroundPrimary = 'var(--dark-background-primary, #000000)';
/** Вторичный фон на темном фоне */
export var darkBackgroundSecondary = 'var(--dark-background-secondary, #080808)';
/** Третичный фон на темном фоне */
export var darkBackgroundTertiary = 'var(--dark-background-tertiary, #171717)';
/** Основной фон на светлом фоне */
export var lightBackgroundPrimary = 'var(--light-background-primary, #FFFFFF)';
/** Вторичный фон на светлом фоне */
export var lightBackgroundSecondary = 'var(--light-background-secondary, #FFFFFF)';
/** Третичный фон на светлом фоне */
export var lightBackgroundTertiary = 'var(--light-background-tertiary, #FFFFFF)';
/** Инвертированный основной фон */
export var inverseBackgroundPrimary = 'var(--inverse-background-primary, #FFFFFF)';
/** Инвертированный вторичный фон */
export var inverseBackgroundSecondary = 'var(--inverse-background-secondary, #FFFFFF)';
/** Инвертированный третичный фон */
export var inverseBackgroundTertiary = 'var(--inverse-background-tertiary, #FFFFFF)';
export var skeletonGradient = 'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';
export var skeletonGradientLighter = 'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';
/** @deprecated instead use onDarkTextPrimary */
export var whitePrimary = 'var(--plasma-colors-white-primary, var(--on-dark-text-primary))';
/** @deprecated instead use onDarkTextSecondary */
export var whiteSecondary = 'var(--plasma-colors-white-secondary, var(--on-dark-text-secondary))';
/** @deprecated instead use onDarkTextTertiary */
export var whiteTertiary = 'var(--plasma-colors-white-tertiary, var(--on-dark-text-tertiary))';
/** @deprecated instead use onLightTextPrimary */
export var blackPrimary = 'var(--plasma-colors-black-primary, var(--on-light-text-primary))';
/** @deprecated instead use onLightTextSecondary */
export var blackSecondary = 'var(--plasma-colors-black-secondary, var(--on-light-text-secondary))';
/** @deprecated instead use onLightTextTertiary */
export var blackTertiary = 'var(--plasma-colors-black-tertiary, var(--on-light-text-tertiary))';
/** @deprecated instead use onLightSurfaceSolidDefault */
export var buttonBlack = 'var(--plasma-colors-button-black, var(--on-light-surface-solid-default))';
/** @deprecated instead use onLightSurfaceTransparentSecondary */
export var buttonBlackSecondary = 'var(--plasma-colors-button-black-secondary, var(--on-light-surface-transparent-secondary))';
/** @deprecated instead use onDarkSurfaceSolidDefault */
export var buttonWhite = 'var(--plasma-colors-button-white, var(--on-dark-surface-solid-default))';
/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export var buttonWhiteSecondary = 'var(--plasma-colors-button-white-secondary, var(--on-dark-surface-transparent-secondary))';
/** @deprecated instead use textPrimary */
export var text = 'var(--plasma-colors-text, var(--text-primary))';
/** @deprecated instead use textPrimary */
export var primary = 'var(--plasma-colors-primary, var(--text-primary))';
/** @deprecated instead use textSecondary */
export var secondary = 'var(--plasma-colors-secondary, var(--text-secondary))';
/** @deprecated instead use textTertiary */
export var tertiary = 'var(--plasma-colors-tertiary, var(--text-tertiary))';
/** @deprecated instead use textParagraph */
export var paragraph = 'var(--plasma-colors-paragraph, var(--text-paragraph))';
/** @deprecated instead use backgroundPrimary */
export var background = 'var(--plasma-colors-background, var(--background-primary))';
/** @deprecated instead use textAccent */
export var accent = 'var(--plasma-colors-accent, var(--text-accent))';
/** @deprecated instead use textPositive */
export var success = 'var(--plasma-colors-success, var(--text-positive))';
/** @deprecated instead use textWarning */
export var warning = 'var(--plasma-colors-warning, var(--text-warning))';
/** @deprecated instead use textNegative */
export var critical = 'var(--plasma-colors-critical, var(--text-negative))';
/** @deprecated instead use overlaySoft */
export var overlay = 'var(--plasma-colors-overlay, var(--overlay-soft))';
/** @deprecated instead use surfaceTransparentPrimary */
export var surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, var(--surface-transparent-primary))';
/** @deprecated instead use surfaceTransparentSecondary */
export var surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, var(--surface-transparent-secondary))';
/** @deprecated instead use surfaceTransparentTertiary */
export var surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, var(--surface-transparent-tertiary))';
/** @deprecated instead use surfaceSolidPrimary */
export var surfaceSolid01 = 'var(--plasma-colors-surface-solid01, var(--surface-solid-primary))';
/** @deprecated instead use surfaceSolidSecondary */
export var surfaceSolid02 = 'var(--plasma-colors-surface-solid02, var(--surface-solid-secondary))';
/** @deprecated instead use surfaceSolidTertiary */
export var surfaceSolid03 = 'var(--plasma-colors-surface-solid03, var(--surface-solid-tertiary))';
/** @deprecated instead use surfaceTransparentCard */
export var surfaceCard = 'var(--plasma-colors-surface-card, var(--surface-transparent-card))';
/** @deprecated instead use surfaceTransparentSecondary */
export var buttonSecondary = 'var(--plasma-colors-button-secondary, var(--surface-transparent-secondary))';
/** @deprecated instead use textAccent */
export var buttonAccent = 'var(--plasma-colors-button-accent, var(--text-accent))';
/** @deprecated instead use surfacePositive */
export var buttonSuccess = 'var(--plasma-colors-button-success, var(--surface-positive))';
/** @deprecated instead use surfaceWarning */
export var buttonWarning = 'var(--plasma-colors-button-warning, var(--surface-warning))';
/** @deprecated instead use surfaceNegative */
export var buttonCritical = 'var(--plasma-colors-button-critical, var(--surface-negative))';
export var shadowDownSoftS = 'var(--shadow-down-soft-s, 0px 4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-down-soft-s, 0px 1px 4px -1px rgba(0, 0, 0, 0.04))';
export var shadowDownSoftM = 'var(--shadow-down-soft-m, 0px 24px 48px -8px rgba(0, 0, 0, 0.08))';
export var shadowDownSoftL = 'var(--shadow-down-soft-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.08))';
export var shadowDownHardS = 'var(--shadow-down-hard-s, 0px 4px 12px -3px rgba(8, 8, 8, 0.16)), var(--shadow-down-hard-s, 0px 1px 4px -2px rgba(0, 0, 0, 0.08))';
export var shadowDownHardM = 'var(--shadow-down-hard-m, 0px 16px 32px -8px rgba(0, 0, 0, 0.24))';
export var shadowDownHardL = 'var(--shadow-down-hard-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.40))';
export var shadowUpSoftS = 'var(--shadow-up-soft-s, 0px -4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-up-soft-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';
export var shadowUpSoftM = 'var(--shadow-up-soft-m, 0px -24px 48px -8px rgba(0, 0, 0, 0.08))';
export var shadowUpSoftL = 'var(--shadow-up-soft-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.08))';
export var shadowUpHardS = 'var(--shadow-up-hard-s, 0px -4px 12px -3px rgba(8, 8, 8, 0.20)), var(--shadow-up-hard-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';
export var shadowUpHardM = 'var(--shadow-up-hard-m, 0px -16px 32px -8px rgba(0, 0, 0, 0.24))';
export var shadowUpHardL = 'var(--shadow-up-hard-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.40))';
export var borderRadiusXxs = 'var(--border-radius-xxs, 4px)';
export var borderRadiusXs = 'var(--border-radius-xs, 6px)';
export var borderRadiusS = 'var(--border-radius-s, 8px)';
export var borderRadiusM = 'var(--border-radius-m, 12px)';
export var borderRadiusL = 'var(--border-radius-l, 16px)';
export var borderRadiusXl = 'var(--border-radius-xl, 20px)';
export var borderRadiusXxl = 'var(--border-radius-xxl, 40px)';
//# sourceMappingURL=index.js.map