// Generated by robots, do not change this manually!
/** Цвет фона паранжи светлый */
export var overlaySoft = 'var(--overlay-soft, rgba(8, 8, 8, 0.56))';
/** Цвет фона паранжи темный */
export var overlayHard = 'var(--overlay-hard, rgba(8, 8, 8, 0.96))';
export var overlayBlur = 'var(--overlay-blur, rgba(8, 8, 8, 0.28))';
/** Цвет фона паранжи светлый на темном фоне */
export var onDarkOverlaySoft = 'var(--on-dark-overlay-soft, rgba(8, 8, 8, 0.56))';
/** Цвет фона паранжи темный на темном фоне */
export var onDarkOverlayHard = 'var(--on-dark-overlay-hard, rgba(8, 8, 8, 0.96))';
export var onDarkOverlayBlur = 'var(--on-dark-overlay-blur, rgba(8, 8, 8, 0.28))';
/** Цвет фона паранжи светлый на светлом фоне */
export var onLightOverlaySoft = 'var(--on-light-overlay-soft, rgba(249, 249, 249, 0.56))';
/** Цвет фона паранжи темный на светлом фоне */
export var onLightOverlayHard = 'var(--on-light-overlay-hard, rgba(249, 249, 249, 0.96))';
export var onLightOverlayBlur = 'var(--on-light-overlay-blur, rgba(249, 249, 249, 0.28))';
/** Основной цвет текста */
export var textPrimary = 'var(--text-primary, rgba(255, 255, 255, 0.96))';
/** Вторичный цвет текста */
export var textSecondary = 'var(--text-secondary, rgba(255, 255, 255, 0.56))';
/** Третичный цвет текста */
export var textTertiary = 'var(--text-tertiary, rgba(255, 255, 255, 0.28))';
/** Сплошной наборный текст */
export var textParagraph = 'var(--text-paragraph, rgba(255, 255, 255, 0.8))';
/** Акцентный цвет */
export var textAccent = 'var(--text-accent, #3F81FD)';
/** Акцентный цвет с градиентом */
export var textAccentGradient = 'var(--text-accent-gradient, linear-gradient(89.83deg, #5E94FF 0%, #43DBFA 100%))';
/** Цвет успеха */
export var textPositive = 'var(--text-positive, #1A9E32)';
/** Цвет предупреждения */
export var textWarning = 'var(--text-warning, #FA5F05)';
/** Цвет ошибки */
export var textNegative = 'var(--text-negative, #FF293E)';
/** Основной цвет текста на темном фоне */
export var onDarkTextPrimary = 'var(--on-dark-text-primary, rgba(255, 255, 255, 0.96))';
/** Вторичный цвет текста на темном фоне */
export var onDarkTextSecondary = 'var(--on-dark-text-secondary, rgba(255, 255, 255, 0.56))';
/** Третичный цвет текста на темном фоне */
export var onDarkTextTertiary = 'var(--on-dark-text-tertiary, rgba(255, 255, 255, 0.28))';
/** Сплошной наборный текст на темном фоне */
export var onDarkTextParagraph = 'var(--on-dark-text-paragraph, rgba(255, 255, 255, 0.8))';
/** Акцентный цвет на темном фоне */
export var onDarkTextAccent = 'var(--on-dark-text-accent, #3F81FD)';
/** Акцентный цвет с градиентом на темном фоне */
export var onDarkTextAccentGradient = 'var(--on-dark-text-accent-gradient, linear-gradient(89.83deg, #5E94FF 0%, #43DBFA 100%))';
/** Цвет успеха на темном фоне */
export var onDarkTextPositive = 'var(--on-dark-text-positive, #1A9E32)';
/** Цвет предупреждения на темном фоне */
export var onDarkTextWarning = 'var(--on-dark-text-warning, #FA5F05)';
/** Цвет ошибки на темном фоне */
export var onDarkTextNegative = 'var(--on-dark-text-negative, #FF293E)';
/** Основной цвет текста на светлом фоне */
export var onLightTextPrimary = 'var(--on-light-text-primary, rgba(8, 8, 8, 0.96))';
/** Вторичный цвет текста на светлом фоне */
export var onLightTextSecondary = 'var(--on-light-text-secondary, rgba(8, 8, 8, 0.56))';
/** Третичный цвет текста на светлом фоне */
export var onLightTextTertiary = 'var(--on-light-text-tertiary, rgba(8, 8, 8, 0.28))';
/** Сплошной наборный текст на светлом фоне */
export var onLightTextParagraph = 'var(--on-light-text-paragraph, rgba(8, 8, 8, 0.8))';
/** Акцентный цвет на светлом фоне */
export var onLightTextAccent = 'var(--on-light-text-accent, #2A72F8)';
/** Акцентный цвет с градиентом на светлом фоне */
export var onLightTextAccentGradient = 'var(--on-light-text-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%))';
/** Цвет успеха на светлом фоне */
export var onLightTextPositive = 'var(--on-light-text-positive, #1A9E32)';
/** Цвет предупреждения на светлом фоне */
export var onLightTextWarning = 'var(--on-light-text-warning, #FA5F05)';
/** Цвет ошибки на светлом фоне */
export var onLightTextNegative = 'var(--on-light-text-negative, #F31B31)';
/** Инвертированный основной цвет текста */
export var inverseTextPrimary = 'var(--inverse-text-primary, rgba(8, 8, 8, 0.96))';
/** Инвертированный вторичный цвет текста */
export var inverseTextSecondary = 'var(--inverse-text-secondary, rgba(8, 8, 8, 0.56))';
/** Инвертированный третичный цвет текста */
export var inverseTextTertiary = 'var(--inverse-text-tertiary, rgba(8, 8, 8, 0.28))';
/** Инвертированный cплошной наборный текст */
export var inverseTextParagraph = 'var(--inverse-text-paragraph, rgba(8, 8, 8, 0.8))';
/** Непрозрачный фон поверхности/контрола по умолчанию */
export var surfaceSolidDefault = 'var(--surface-solid-default, rgba(255, 255, 255, 1))';
/** Основной непрозрачный фон поверхности/контрола */
export var surfaceSolidPrimary = 'var(--surface-solid-primary, #171717)';
/** Вторичный непрозрачный фон поверхности/контрола */
export var surfaceSolidSecondary = 'var(--surface-solid-secondary, #262626)';
/** Третичный непрозрачный фон поверхности/контрола */
export var surfaceSolidTertiary = 'var(--surface-solid-tertiary, #363636)';
/** Основной фон для карточек */
export var surfaceSolidCard = 'var(--surface-solid-card, #171717)';
/** Основной прозрачный фон поверхности/контрола */
export var surfaceTransparentPrimary = 'var(--surface-transparent-primary, rgba(255, 255, 255, 0.06))';
/** Вторичный прозрачный фон поверхности/контрола */
export var surfaceTransparentSecondary = 'var(--surface-transparent-secondary, rgba(255, 255, 255, 0.12))';
/** Третичный прозрачный фон поверхности/контрола */
export var surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';
/** Прозрачный фон для карточек */
export var surfaceTransparentCard = 'var(--surface-transparent-card, rgba(255, 255, 255, 0.12))';
/** Акцентный фон поверхности/контрола */
export var surfaceAccent = 'var(--surface-accent, #3F81FD)';
/** Акцентный фон поверхности/контрола с градиентом */
export var surfaceAccentGradient = 'var(--surface-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%), linear-gradient(89.83deg, #5E94FF 0%, #43DBFA 100%))';
/** Цвет фона поверхности/контрола успех */
export var surfacePositive = 'var(--surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение */
export var surfaceWarning = 'var(--surface-warning, #FA5F05)';
/** Цвет фона поверхности/контрола ошибка */
export var surfaceNegative = 'var(--surface-negative, #FF293E)';
/** Фон поверхности/контрола без заливки */
export var surfaceClear = 'var(--surface-clear, rgba(255, 255, 255, 0))';
export var surfaceTransparentDeep = 'var(--surface-transparent-deep, rgba(255, 255, 255, 0.64))';
/** Непр. фон поверхности/контрола по умолчанию на тем. фоне */
export var onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, rgba(255, 255, 255, 1))';
/** Осн. непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #171717)';
/** Вторичный непр. фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #262626)';
/** Третичный непр. фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #363636)';
/** Основной фон для карточек на темном фоне */
export var onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #171717)';
/** Основной прозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, rgba(255, 255, 255, 0.06))';
/** Вторичный прозр. фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary, rgba(255, 255, 255, 0.12))';
/** Третичный прозр. фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';
/** Прозрачный фон для карточек на темном фоне */
export var onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, rgba(255, 255, 255, 0.12))';
/** Акцентный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #3F81FD)';
/** Акцентный фон поверхн./контрола с градиентом на темном фоне */
export var onDarkSurfaceAccentGradient = 'var(--on-dark-surface-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%))';
/** Цвет фона поверхности/контрола успех на темном фоне */
export var onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';
/** Цвет фона поверхн./контрола предупреждение на темном фоне */
export var onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #FA5F05)';
/** Цвет фона поверхности/контрола ошибка на темном фоне */
export var onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';
export var onDarkSurfaceTransparentDeep = 'var(--on-dark-surface-transparent-deep, rgba(255, 255, 255, 0.64))';
/** Непр. фон поверхности/контрола по умолчанию на светлом фоне */
export var onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #080808)';
/** Осн. непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F5F5F5)';
/** Втор. непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #ECECEC)';
/** Третичный непр. фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #DDDDDD)';
/** Основной фон для карточек на светлом фоне */
export var onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, rgba(255, 255, 255, 1))';
/** Основной прозр. фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, rgba(8, 8, 8, 0.03))';
/** Вторичный прозр. фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, rgba(8, 8, 8, 0.06))';
/** Третичный прозр. фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, rgba(8, 8, 8, 0.12))';
/** Прозрачный фон для карточек на светлом фоне */
export var onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, rgba(255, 255, 255, 1))';
/** Акцентный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceAccent = 'var(--on-light-surface-accent, #2A72F8)';
/** Акцент. фон поверхн./контрола с градиентом на светлом фоне */
export var onLightSurfaceAccentGradient = 'var(--on-light-surface-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%))';
/** Цвет фона поверхности/контрола успех на светлом фоне */
export var onLightSurfacePositive = 'var(--on-light-surface-positive, #1A9E32)';
/** Цвет фона поверхн./контрола предупреждение на светлом фоне */
export var onLightSurfaceWarning = 'var(--on-light-surface-warning, #FA5F05)';
/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export var onLightSurfaceNegative = 'var(--on-light-surface-negative, #F31B31)';
export var onLightSurfaceTransparentDeep = 'var(--on-light-surface-transparent-deep, rgba(8, 8, 8, 0.64))';
/** Основной фон */
export var backgroundPrimary = 'var(--background-primary, #080808)';
/** Основной фон на темном фоне */
export var darkBackgroundPrimary = 'var(--dark-background-primary, #080808)';
/** Основной фон на светлом фоне */
export var lightBackgroundPrimary = 'var(--light-background-primary, #F9F9F9)';
export var skeletonGradient = 'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';
export var skeletonGradientLighter = 'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';
/** @deprecated instead use onDarkTextPrimary */
export var whitePrimary = 'var(--plasma-colors-white-primary, var(--on-dark-text-primary))';
/** @deprecated instead use onDarkTextSecondary */
export var whiteSecondary = 'var(--plasma-colors-white-secondary, var(--on-dark-text-secondary))';
/** @deprecated instead use onDarkTextTertiary */
export var whiteTertiary = 'var(--plasma-colors-white-tertiary, var(--on-dark-text-tertiary))';
/** @deprecated instead use onLightTextPrimary */
export var blackPrimary = 'var(--plasma-colors-black-primary, var(--on-light-text-primary))';
/** @deprecated instead use onLightTextSecondary */
export var blackSecondary = 'var(--plasma-colors-black-secondary, var(--on-light-text-secondary))';
/** @deprecated instead use onLightTextTertiary */
export var blackTertiary = 'var(--plasma-colors-black-tertiary, var(--on-light-text-tertiary))';
/** @deprecated instead use onLightSurfaceSolidDefault */
export var buttonBlack = 'var(--plasma-colors-button-black, var(--on-light-surface-solid-default))';
/** @deprecated instead use onLightSurfaceTransparentSecondary */
export var buttonBlackSecondary = 'var(--plasma-colors-button-black-secondary, var(--on-light-surface-transparent-secondary))';
/** @deprecated instead use onDarkSurfaceSolidDefault */
export var buttonWhite = 'var(--plasma-colors-button-white, var(--on-dark-surface-solid-default))';
/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export var buttonWhiteSecondary = 'var(--plasma-colors-button-white-secondary, var(--on-dark-surface-transparent-secondary))';
/** @deprecated instead use textPrimary */
export var text = 'var(--plasma-colors-text, var(--text-primary))';
/** @deprecated instead use textPrimary */
export var primary = 'var(--plasma-colors-primary, var(--text-primary))';
/** @deprecated instead use textSecondary */
export var secondary = 'var(--plasma-colors-secondary, var(--text-secondary))';
/** @deprecated instead use textTertiary */
export var tertiary = 'var(--plasma-colors-tertiary, var(--text-tertiary))';
/** @deprecated instead use textParagraph */
export var paragraph = 'var(--plasma-colors-paragraph, var(--text-paragraph))';
/** @deprecated instead use backgroundPrimary */
export var background = 'var(--plasma-colors-background, var(--background-primary))';
/** @deprecated instead use textAccent */
export var accent = 'var(--plasma-colors-accent, var(--text-accent))';
/** @deprecated instead use textPositive */
export var success = 'var(--plasma-colors-success, var(--text-positive))';
/** @deprecated instead use textWarning */
export var warning = 'var(--plasma-colors-warning, var(--text-warning))';
/** @deprecated instead use textNegative */
export var critical = 'var(--plasma-colors-critical, var(--text-negative))';
/** @deprecated instead use overlaySoft */
export var overlay = 'var(--plasma-colors-overlay, var(--overlay-soft))';
/** @deprecated instead use surfaceTransparentPrimary */
export var surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, var(--surface-transparent-primary))';
/** @deprecated instead use surfaceTransparentSecondary */
export var surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, var(--surface-transparent-secondary))';
/** @deprecated instead use surfaceTransparentTertiary */
export var surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, var(--surface-transparent-tertiary))';
/** @deprecated instead use surfaceSolidPrimary */
export var surfaceSolid01 = 'var(--plasma-colors-surface-solid01, var(--surface-solid-primary))';
/** @deprecated instead use surfaceSolidSecondary */
export var surfaceSolid02 = 'var(--plasma-colors-surface-solid02, var(--surface-solid-secondary))';
/** @deprecated instead use surfaceSolidTertiary */
export var surfaceSolid03 = 'var(--plasma-colors-surface-solid03, var(--surface-solid-tertiary))';
/** @deprecated instead use surfaceTransparentCard */
export var surfaceCard = 'var(--plasma-colors-surface-card, var(--surface-transparent-card))';
/** @deprecated instead use surfaceTransparentSecondary */
export var buttonSecondary = 'var(--plasma-colors-button-secondary, var(--surface-transparent-secondary))';
/** @deprecated instead use textAccent */
export var buttonAccent = 'var(--plasma-colors-button-accent, var(--text-accent))';
/** @deprecated instead use surfacePositive */
export var buttonSuccess = 'var(--plasma-colors-button-success, var(--surface-positive))';
/** @deprecated instead use surfaceWarning */
export var buttonWarning = 'var(--plasma-colors-button-warning, var(--surface-warning))';
/** @deprecated instead use surfaceNegative */
export var buttonCritical = 'var(--plasma-colors-button-critical, var(--surface-negative))';
export var shadowDownSoftS = 'var(--shadow-down-soft-s, 0px 4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-down-soft-s, 0px 1px 4px -1px rgba(0, 0, 0, 0.04))';
export var shadowDownSoftM = 'var(--shadow-down-soft-m, 0px 24px 48px -8px rgba(0, 0, 0, 0.08))';
export var shadowDownSoftL = 'var(--shadow-down-soft-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.08))';
export var shadowDownHardS = 'var(--shadow-down-hard-s, 0px 4px 12px -3px rgba(8, 8, 8, 0.16)), var(--shadow-down-hard-s, 0px 1px 4px -2px rgba(0, 0, 0, 0.08))';
export var shadowDownHardM = 'var(--shadow-down-hard-m, 0px 16px 32px -8px rgba(0, 0, 0, 0.24))';
export var shadowDownHardL = 'var(--shadow-down-hard-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.40))';
export var shadowUpSoftS = 'var(--shadow-up-soft-s, 0px -4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-up-soft-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';
export var shadowUpSoftM = 'var(--shadow-up-soft-m, 0px -24px 48px -8px rgba(0, 0, 0, 0.08))';
export var shadowUpSoftL = 'var(--shadow-up-soft-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.08))';
export var shadowUpHardS = 'var(--shadow-up-hard-s, 0px -4px 12px -3px rgba(8, 8, 8, 0.20)), var(--shadow-up-hard-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';
export var shadowUpHardM = 'var(--shadow-up-hard-m, 0px -16px 32px -8px rgba(0, 0, 0, 0.24))';
export var shadowUpHardL = 'var(--shadow-up-hard-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.40))';
//# sourceMappingURL=index.js.map