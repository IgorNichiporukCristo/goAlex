"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Confirm = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaTokens = /*#__PURE__*/require("@salutejs/plasma-tokens");

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

var _utils = /*#__PURE__*/require("../../utils");

var _Button = /*#__PURE__*/require("../Button");

var _TextBox = /*#__PURE__*/require("../TextBox");

var _Cell = /*#__PURE__*/require("../Cell");

var _Confirm = /*#__PURE__*/require("./Confirm.hooks");

var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");

var _NoScroll;

var _excluded = ["title", "subtitle", "visible", "approveText", "dismissText", "view", "reverseButtons", "extraContent", "onApprove", "onDismiss", "buttonsDirection"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

(0, _collectPackageInfo.collectPackageInfo)('Confirm/Confirm');
var flexDirection = {
  horizontal: 'row',
  'horizontal-reverse': 'row-reverse',
  vertical: 'column',
  'vertical-reverse': 'column-reverse'
};
var marginByDirection = {
  horizontal: 'margin-right',
  'horizontal-reverse': 'margin-left',
  vertical: 'margin-bottom',
  'vertical-reverse': 'margin-top'
};

// TODO: https://github.com/salute-developers/plasma/issues/232
var Wrapper = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-qi6do9-0"
})(["position:fixed;top:0;bottom:0;left:0;right:0;opacity:1;transition:", ";z-index:1000;", ""], function (_ref) {
  var theme = _ref.theme;
  return theme.lowPerformance ? 'unset' : 'all 0.5s 0.1s';
}, function (_ref2) {
  var visible = _ref2.visible;
  return !visible && (0, _styledComponents.css)(["opacity:0;visibility:hidden;"]);
});

var Overlay = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-qi6do9-1"
})(["position:absolute;top:0;left:0;width:100%;height:100%;background-color:", ";"], _plasmaTokens.overlay);

var NoScroll = /*#__PURE__*/(0, _styledComponents.createGlobalStyle)(["body{overflow:hidden;}"]);
var tvLayout = /*#__PURE__*/(0, _styledComponents.css)(["display:flex;flex-direction:row;justify-content:space-between;align-items:center;"]);
var StyledButton = /*#__PURE__*/(0, _styledComponents["default"])(_Button.Button).withConfig({
  componentId: "plasma-ui__sc-qi6do9-2"
})([""]); // TODO: https://github.com/salute-developers/plasma/issues/232

var ConfirmRoot = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-qi6do9-3"
})(["position:absolute;left:0;right:0;transition:", ";", ";"], function (_ref3) {
  var theme = _ref3.theme;
  return theme.lowPerformance ? 'unset' : 'transform 0.5s';
}, function (_ref4) {
  var visible = _ref4.visible;
  return !visible && {
    transform: 'translateY(-100%)'
  };
});

var ConfirmContainer = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-qi6do9-4"
})(["margin:1rem 1rem 0;padding:0.75rem;border-radius:1.25rem;background-color:", ";"], _plasmaTokens.backgroundPrimary);

var ConfirmMain = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-qi6do9-5"
})(["", " ", "{white-space:pre-line;}", "{white-space:pre-line;}"], function (_ref5) {
  var theme = _ref5.theme;
  return (0, _styledComponents.css)(["", " ", " ", ""], (0, _utils.mediaQuery)('M', theme.deviceScale)(tvLayout), (0, _utils.mediaQuery)('L', theme.deviceScale)(tvLayout), (0, _utils.mediaQuery)('XL', theme.deviceScale)(tvLayout));
}, _TextBox.TextBoxTitle, _TextBox.TextBoxSubTitle);

var ConfirmFooter = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-qi6do9-6"
})(["margin-left:1rem;margin-right:1rem;max-width:100%;"]);

var handleFlexDirection = function handleFlexDirection(_ref6) {
  var reverse = _ref6.reverse,
      direction = _ref6.direction;

  if (reverse) {
    return flexDirection['horizontal-reverse'];
  }

  return flexDirection[direction];
};

var handleMarginByDirection = function handleMarginByDirection(_ref7) {
  var direction = _ref7.direction,
      reverse = _ref7.reverse;
  var margin = reverse ? marginByDirection['horizontal-reverse'] : marginByDirection[direction];
  return (0, _styledComponents.css)(["", ":0.5rem;"], margin);
};

var BtnWrap = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-qi6do9-7"
})(["flex:1;display:flex;flex-direction:", ";", ":not(:last-child){", "}", "{min-width:0;}"], handleFlexDirection, StyledButton, handleMarginByDirection, _plasmaCore.ButtonRoot); // TODO: https://github.com/salute-developers/plasma/issues/232


var StyledCell = /*#__PURE__*/(0, _styledComponents["default"])(_Cell.Cell).withConfig({
  componentId: "plasma-ui__sc-qi6do9-8"
})(["flex:1;", " & > div{padding:0;}"], function (_ref8) {
  var theme = _ref8.theme;
  return (0, _utils.mediaQuery)('S', theme.deviceScale)((0, _styledComponents.css)(["margin-bottom:0.75rem;"]));
});
/**
 * Сообщение подтверждения действия пользователя.
 */

var Confirm = function Confirm(props) {
  var title = props.title,
      subtitle = props.subtitle,
      visible = props.visible,
      approveText = props.approveText,
      dismissText = props.dismissText,
      _props$view = props.view,
      view = _props$view === void 0 ? 'secondary' : _props$view,
      _props$reverseButtons = props.reverseButtons,
      reverseButtons = _props$reverseButtons === void 0 ? false : _props$reverseButtons,
      extraContent = props.extraContent,
      onApprove = props.onApprove,
      onDismiss = props.onDismiss,
      _props$buttonsDirecti = props.buttonsDirection,
      buttonsDirection = _props$buttonsDirecti === void 0 ? 'horizontal' : _props$buttonsDirecti,
      rest = _objectWithoutProperties(props, _excluded);

  var onApproveClick = (0, _react.useCallback)(function () {
    onApprove();
  }, [onApprove]);
  var onDismissClick = (0, _react.useCallback)(function () {
    onDismiss && onDismiss();
  }, [onDismiss]);
  var btnRef = (0, _react.useRef)(null);
  (0, _Confirm.useAutoFocus)(btnRef, {
    trigger: visible
  });

  var approve = /*#__PURE__*/_react["default"].createElement(StyledButton, {
    size: "s",
    ref: btnRef,
    tabIndex: 0,
    stretch: true,
    view: view,
    text: approveText,
    onClick: onApproveClick
  });

  var dismiss = dismissText ? /*#__PURE__*/_react["default"].createElement(StyledButton, {
    size: "s",
    stretch: true,
    view: "secondary",
    text: dismissText,
    onClick: onDismissClick
  }) : null;

  var buttons = /*#__PURE__*/_react["default"].createElement(BtnWrap, {
    reverse: reverseButtons,
    direction: buttonsDirection
  }, dismiss, approve);

  return /*#__PURE__*/_react["default"].createElement(Wrapper, _extends({
    visible: visible
  }, rest), /*#__PURE__*/_react["default"].createElement(Overlay, {
    onClick: onDismissClick
  }), visible && (_NoScroll || (_NoScroll = /*#__PURE__*/_react["default"].createElement(NoScroll, null))), /*#__PURE__*/_react["default"].createElement(ConfirmRoot, {
    visible: true
  }, /*#__PURE__*/_react["default"].createElement(ConfirmContainer, null, /*#__PURE__*/_react["default"].createElement(ConfirmMain, null, /*#__PURE__*/_react["default"].createElement(StyledCell, {
    content: /*#__PURE__*/_react["default"].createElement(_TextBox.TextBox, {
      title: title,
      subTitle: subtitle
    })
  }), buttons)), /*#__PURE__*/_react["default"].createElement(ConfirmFooter, null, extraContent)));
};

exports.Confirm = Confirm;